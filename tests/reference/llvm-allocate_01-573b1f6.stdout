; ModuleID = 'LFortran'
source_filename = "LFortran"

%complex_4 = type { float, float }
%array = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }
%array.0 = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%array.1 = type { float*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define %complex_4 @reduce_sum(%array* %c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = getelementptr %array, %array* %c, i32 0, i32 2
  %5 = load %dimension_descriptor*, %dimension_descriptor** %4, align 8
  %6 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 0
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sub i32 %8, 1
  store i32 %9, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %10 = load i32, i32* %i, align 4
  %11 = add i32 %10, 1
  %12 = getelementptr %array, %array* %c, i32 0, i32 2
  %13 = load %dimension_descriptor*, %dimension_descriptor** %12, align 8
  %14 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %13, i32 0
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %14, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, %16
  %20 = sub i32 %19, 1
  %21 = icmp sle i32 %11, %20
  br i1 %21, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %22 = load i32, i32* %i, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %i, align 4
  %24 = getelementptr %array, %array* %c, i32 0, i32 2
  %25 = load %dimension_descriptor*, %dimension_descriptor** %24, align 8
  %26 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %25, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sub i32 %28, 1
  store i32 %29, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  %32 = getelementptr %array, %array* %c, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %36
  %40 = sub i32 %39, 1
  %41 = icmp sle i32 %31, %40
  br i1 %41, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %42 = load i32, i32* %j, align 4
  %43 = add i32 %42, 1
  store i32 %43, i32* %j, align 4
  %44 = getelementptr %array, %array* %c, i32 0, i32 2
  %45 = load %dimension_descriptor*, %dimension_descriptor** %44, align 8
  %46 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %45, i32 2
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %46, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = sub i32 %48, 1
  store i32 %49, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %50 = load i32, i32* %k, align 4
  %51 = add i32 %50, 1
  %52 = getelementptr %array, %array* %c, i32 0, i32 2
  %53 = load %dimension_descriptor*, %dimension_descriptor** %52, align 8
  %54 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %53, i32 2
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, %56
  %60 = sub i32 %59, 1
  %61 = icmp sle i32 %51, %60
  br i1 %61, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %62 = load i32, i32* %k, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %k, align 4
  %64 = load %complex_4, %complex_4* %r, align 4
  %65 = load i32, i32* %i, align 4
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %k, align 4
  %68 = getelementptr %array, %array* %c, i32 0, i32 2
  %69 = load %dimension_descriptor*, %dimension_descriptor** %68, align 8
  %70 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %69, i32 0
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sub i32 %65, %72
  %74 = mul i32 1, %73
  %75 = add i32 0, %74
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = mul i32 1, %77
  %79 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %69, i32 1
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = sub i32 %66, %81
  %83 = mul i32 %78, %82
  %84 = add i32 %75, %83
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %79, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = mul i32 %78, %86
  %88 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %69, i32 2
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sub i32 %67, %90
  %92 = mul i32 %87, %91
  %93 = add i32 %84, %92
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 %87, %95
  %97 = getelementptr %array, %array* %c, i32 0, i32 0
  %98 = load %complex_4*, %complex_4** %97, align 8
  %99 = getelementptr inbounds %complex_4, %complex_4* %98, i32 %93
  %100 = load %complex_4, %complex_4* %99, align 4
  %101 = alloca %complex_4, align 8
  store %complex_4 %64, %complex_4* %101, align 4
  %102 = alloca %complex_4, align 8
  store %complex_4 %100, %complex_4* %102, align 4
  %103 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add_32(%complex_4* %101, %complex_4* %102, %complex_4* %103)
  %104 = load %complex_4, %complex_4* %103, align 4
  store %complex_4 %104, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %105 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %105
}

define void @sum(%array.0* %a, %array.1* %b, %array* %c) {
.entry:
  %c_copy = alloca %array, align 8
  %0 = getelementptr %array, %array* %c_copy, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 3, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array, %array* %c_copy, i32 0, i32 4
  store i32 3, i32* %4, align 4
  %5 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %6 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %7 = load %dimension_descriptor*, %dimension_descriptor** %6, align 8
  %8 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %7, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %12 = load %dimension_descriptor*, %dimension_descriptor** %11, align 8
  %13 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %12, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %13, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, %15
  %19 = sub i32 %18, 1
  %20 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %21 = load %dimension_descriptor*, %dimension_descriptor** %20, align 8
  %22 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = sub i32 %19, %24
  %26 = add i32 %25, 1
  %27 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %28 = load %dimension_descriptor*, %dimension_descriptor** %27, align 8
  %29 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %28, i32 0
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %33 = load %dimension_descriptor*, %dimension_descriptor** %32, align 8
  %34 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %33, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %34, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %36
  %40 = sub i32 %39, 1
  %41 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sub i32 %40, %45
  %47 = add i32 %46, 1
  %48 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %49 = load %dimension_descriptor*, %dimension_descriptor** %48, align 8
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %49, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %54 = load %dimension_descriptor*, %dimension_descriptor** %53, align 8
  %55 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %54, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, %57
  %61 = sub i32 %60, 1
  %62 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %63 = load %dimension_descriptor*, %dimension_descriptor** %62, align 8
  %64 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %63, i32 1
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 %61, %66
  %68 = add i32 %67, 1
  %69 = getelementptr %array, %array* %c_copy, i32 0, i32 1
  store i32 0, i32* %69, align 4
  %70 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  store i1 true, i1* %70, align 1
  %71 = getelementptr %array, %array* %c_copy, i32 0, i32 2
  %72 = load %dimension_descriptor*, %dimension_descriptor** %71, align 8
  %73 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 0
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 1
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %73, i32 0, i32 2
  store i32 1, i32* %74, align 4
  store i32 %10, i32* %75, align 4
  %77 = mul i32 1, %26
  store i32 %26, i32* %76, align 4
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 1
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  store i32 1, i32* %79, align 4
  store i32 %31, i32* %80, align 4
  %82 = mul i32 %77, %47
  store i32 %47, i32* %81, align 4
  %83 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 2
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 0
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 1
  %86 = getelementptr %dimension_descriptor, %dimension_descriptor* %83, i32 0, i32 2
  store i32 1, i32* %84, align 4
  store i32 %52, i32* %85, align 4
  %87 = mul i32 %82, %68
  store i32 %68, i32* %86, align 4
  %88 = getelementptr %array, %array* %c_copy, i32 0, i32 0
  %89 = alloca i32, align 4
  %90 = mul i32 %87, 8
  store i32 %90, i32* %89, align 4
  %91 = load i32, i32* %89, align 4
  %92 = call i8* (i32, ...) @_lfortran_malloc(i32 %91)
  %93 = bitcast i8* %92 to %complex_4*
  store %complex_4* %93, %complex_4** %88, align 8
  %94 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  %96 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %95, i32 0
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %96, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %100 = load %dimension_descriptor*, %dimension_descriptor** %99, align 8
  %101 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %100, i32 0
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, %103
  %107 = sub i32 %106, 1
  %108 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %109 = load %dimension_descriptor*, %dimension_descriptor** %108, align 8
  %110 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %109, i32 0
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 %107, %112
  %114 = add i32 %113, 1
  %115 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %116 = load %dimension_descriptor*, %dimension_descriptor** %115, align 8
  %117 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 0
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %121 = load %dimension_descriptor*, %dimension_descriptor** %120, align 8
  %122 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %121, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %122, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, %124
  %128 = sub i32 %127, 1
  %129 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %130 = load %dimension_descriptor*, %dimension_descriptor** %129, align 8
  %131 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %130, i32 0
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 %128, %133
  %135 = add i32 %134, 1
  %136 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %137 = load %dimension_descriptor*, %dimension_descriptor** %136, align 8
  %138 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %137, i32 1
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %142 = load %dimension_descriptor*, %dimension_descriptor** %141, align 8
  %143 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %142, i32 1
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, %145
  %149 = sub i32 %148, 1
  %150 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  %152 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %151, i32 1
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %149, %154
  %156 = add i32 %155, 1
  %157 = getelementptr %array, %array* %c, i32 0, i32 1
  store i32 0, i32* %157, align 4
  %158 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 true, i1* %158, align 1
  %159 = getelementptr %array, %array* %c, i32 0, i32 2
  %160 = load %dimension_descriptor*, %dimension_descriptor** %159, align 8
  %161 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 0
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 2
  store i32 1, i32* %162, align 4
  store i32 %98, i32* %163, align 4
  %165 = mul i32 1, %114
  store i32 %114, i32* %164, align 4
  %166 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 1
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 2
  store i32 1, i32* %167, align 4
  store i32 %119, i32* %168, align 4
  %170 = mul i32 %165, %135
  store i32 %135, i32* %169, align 4
  %171 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 2
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 0
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 1
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %171, i32 0, i32 2
  store i32 1, i32* %172, align 4
  store i32 %140, i32* %173, align 4
  %175 = mul i32 %170, %156
  store i32 %156, i32* %174, align 4
  %176 = getelementptr %array, %array* %c, i32 0, i32 0
  %177 = alloca i32, align 4
  %178 = mul i32 %175, 8
  store i32 %178, i32* %177, align 4
  %179 = load i32, i32* %177, align 4
  %180 = call i8* (i32, ...) @_lfortran_malloc(i32 %179)
  %181 = bitcast i8* %180 to %complex_4*
  store %complex_4* %181, %complex_4** %176, align 8
  %182 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %183 = load %dimension_descriptor*, %dimension_descriptor** %182, align 8
  %184 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %183, i32 0
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 %186, 1
  store i32 %187, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %188 = load i32, i32* %i, align 4
  %189 = add i32 %188, 1
  %190 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %191 = load %dimension_descriptor*, %dimension_descriptor** %190, align 8
  %192 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %191, i32 0
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %192, i32 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %192, i32 0, i32 2
  %196 = load i32, i32* %195, align 4
  %197 = add i32 %196, %194
  %198 = sub i32 %197, 1
  %199 = icmp sle i32 %189, %198
  br i1 %199, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %200 = load i32, i32* %i, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %i, align 4
  %202 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %203 = load %dimension_descriptor*, %dimension_descriptor** %202, align 8
  %204 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %203, i32 0
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = sub i32 %206, 1
  store i32 %207, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %208 = load i32, i32* %j, align 4
  %209 = add i32 %208, 1
  %210 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %211 = load %dimension_descriptor*, %dimension_descriptor** %210, align 8
  %212 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %211, i32 0
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = add i32 %216, %214
  %218 = sub i32 %217, 1
  %219 = icmp sle i32 %209, %218
  br i1 %219, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %220 = load i32, i32* %j, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %j, align 4
  %222 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %223 = load %dimension_descriptor*, %dimension_descriptor** %222, align 8
  %224 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %223, i32 1
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 %226, 1
  store i32 %227, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %228 = load i32, i32* %k, align 4
  %229 = add i32 %228, 1
  %230 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %231 = load %dimension_descriptor*, %dimension_descriptor** %230, align 8
  %232 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %231, i32 1
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = add i32 %236, %234
  %238 = sub i32 %237, 1
  %239 = icmp sle i32 %229, %238
  br i1 %239, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %240 = load i32, i32* %k, align 4
  %241 = add i32 %240, 1
  store i32 %241, i32* %k, align 4
  %242 = load i32, i32* %i, align 4
  %243 = load i32, i32* %j, align 4
  %244 = load i32, i32* %k, align 4
  %245 = getelementptr %array, %array* %c_copy, i32 0, i32 2
  %246 = load %dimension_descriptor*, %dimension_descriptor** %245, align 8
  %247 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 0
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = sub i32 %242, %249
  %251 = mul i32 1, %250
  %252 = add i32 0, %251
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 2
  %254 = load i32, i32* %253, align 4
  %255 = mul i32 1, %254
  %256 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 1
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = sub i32 %243, %258
  %260 = mul i32 %255, %259
  %261 = add i32 %252, %260
  %262 = getelementptr %dimension_descriptor, %dimension_descriptor* %256, i32 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = mul i32 %255, %263
  %265 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 2
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = sub i32 %244, %267
  %269 = mul i32 %264, %268
  %270 = add i32 %261, %269
  %271 = getelementptr %dimension_descriptor, %dimension_descriptor* %265, i32 0, i32 2
  %272 = load i32, i32* %271, align 4
  %273 = mul i32 %264, %272
  %274 = getelementptr %array, %array* %c_copy, i32 0, i32 0
  %275 = load %complex_4*, %complex_4** %274, align 8
  %276 = getelementptr inbounds %complex_4, %complex_4* %275, i32 %270
  %277 = load i32, i32* %i, align 4
  %278 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %279 = load %dimension_descriptor*, %dimension_descriptor** %278, align 8
  %280 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %279, i32 0
  %281 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = sub i32 %277, %282
  %284 = mul i32 1, %283
  %285 = add i32 0, %284
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %280, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  %288 = mul i32 1, %287
  %289 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %290 = load i32*, i32** %289, align 8
  %291 = getelementptr inbounds i32, i32* %290, i32 %285
  %292 = load i32, i32* %291, align 4
  %293 = sitofp i32 %292 to float
  %294 = load i32, i32* %j, align 4
  %295 = load i32, i32* %k, align 4
  %296 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %297 = load %dimension_descriptor*, %dimension_descriptor** %296, align 8
  %298 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %297, i32 0
  %299 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = sub i32 %294, %300
  %302 = mul i32 1, %301
  %303 = add i32 0, %302
  %304 = getelementptr %dimension_descriptor, %dimension_descriptor* %298, i32 0, i32 2
  %305 = load i32, i32* %304, align 4
  %306 = mul i32 1, %305
  %307 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %297, i32 1
  %308 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 1
  %309 = load i32, i32* %308, align 4
  %310 = sub i32 %295, %309
  %311 = mul i32 %306, %310
  %312 = add i32 %303, %311
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 2
  %314 = load i32, i32* %313, align 4
  %315 = mul i32 %306, %314
  %316 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %317 = load float*, float** %316, align 8
  %318 = getelementptr inbounds float, float* %317, i32 %312
  %319 = load float, float* %318, align 4
  %320 = fadd float %293, %319
  %321 = alloca %complex_4, align 8
  %322 = getelementptr %complex_4, %complex_4* %321, i32 0, i32 0
  %323 = getelementptr %complex_4, %complex_4* %321, i32 0, i32 1
  store float %320, float* %322, align 4
  store float 0.000000e+00, float* %323, align 4
  %324 = load %complex_4, %complex_4* %321, align 4
  store %complex_4 %324, %complex_4* %276, align 4
  %325 = load i32, i32* %i, align 4
  %326 = load i32, i32* %j, align 4
  %327 = load i32, i32* %k, align 4
  %328 = getelementptr %array, %array* %c, i32 0, i32 2
  %329 = load %dimension_descriptor*, %dimension_descriptor** %328, align 8
  %330 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 0
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = sub i32 %325, %332
  %334 = mul i32 1, %333
  %335 = add i32 0, %334
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 2
  %337 = load i32, i32* %336, align 4
  %338 = mul i32 1, %337
  %339 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 1
  %340 = getelementptr %dimension_descriptor, %dimension_descriptor* %339, i32 0, i32 1
  %341 = load i32, i32* %340, align 4
  %342 = sub i32 %326, %341
  %343 = mul i32 %338, %342
  %344 = add i32 %335, %343
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %339, i32 0, i32 2
  %346 = load i32, i32* %345, align 4
  %347 = mul i32 %338, %346
  %348 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 2
  %349 = getelementptr %dimension_descriptor, %dimension_descriptor* %348, i32 0, i32 1
  %350 = load i32, i32* %349, align 4
  %351 = sub i32 %327, %350
  %352 = mul i32 %347, %351
  %353 = add i32 %344, %352
  %354 = getelementptr %dimension_descriptor, %dimension_descriptor* %348, i32 0, i32 2
  %355 = load i32, i32* %354, align 4
  %356 = mul i32 %347, %355
  %357 = getelementptr %array, %array* %c, i32 0, i32 0
  %358 = load %complex_4*, %complex_4** %357, align 8
  %359 = getelementptr inbounds %complex_4, %complex_4* %358, i32 %353
  %360 = load i32, i32* %i, align 4
  %361 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %362 = load %dimension_descriptor*, %dimension_descriptor** %361, align 8
  %363 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %362, i32 0
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 1
  %365 = load i32, i32* %364, align 4
  %366 = sub i32 %360, %365
  %367 = mul i32 1, %366
  %368 = add i32 0, %367
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %363, i32 0, i32 2
  %370 = load i32, i32* %369, align 4
  %371 = mul i32 1, %370
  %372 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %373 = load i32*, i32** %372, align 8
  %374 = getelementptr inbounds i32, i32* %373, i32 %368
  %375 = load i32, i32* %374, align 4
  %376 = sitofp i32 %375 to float
  %377 = load i32, i32* %j, align 4
  %378 = load i32, i32* %k, align 4
  %379 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %380 = load %dimension_descriptor*, %dimension_descriptor** %379, align 8
  %381 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %380, i32 0
  %382 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = sub i32 %377, %383
  %385 = mul i32 1, %384
  %386 = add i32 0, %385
  %387 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 2
  %388 = load i32, i32* %387, align 4
  %389 = mul i32 1, %388
  %390 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %380, i32 1
  %391 = getelementptr %dimension_descriptor, %dimension_descriptor* %390, i32 0, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = sub i32 %378, %392
  %394 = mul i32 %389, %393
  %395 = add i32 %386, %394
  %396 = getelementptr %dimension_descriptor, %dimension_descriptor* %390, i32 0, i32 2
  %397 = load i32, i32* %396, align 4
  %398 = mul i32 %389, %397
  %399 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %400 = load float*, float** %399, align 8
  %401 = getelementptr inbounds float, float* %400, i32 %395
  %402 = load float, float* %401, align 4
  %403 = fadd float %376, %402
  %404 = alloca %complex_4, align 8
  %405 = getelementptr %complex_4, %complex_4* %404, i32 0, i32 0
  %406 = getelementptr %complex_4, %complex_4* %404, i32 0, i32 1
  store float %403, float* %405, align 4
  store float 0.000000e+00, float* %406, align 4
  %407 = load %complex_4, %complex_4* %404, align 4
  store %complex_4 %407, %complex_4* %359, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %408 = getelementptr %array, %array* %c_copy, i32 0, i32 0
  %409 = load %complex_4*, %complex_4** %408, align 8
  %410 = alloca i8*, align 8
  %411 = bitcast %complex_4* %409 to i8*
  store i8* %411, i8** %410, align 8
  %412 = load i8*, i8** %410, align 8
  call void (i8*, ...) @_lfortran_free(i8* %412)
  %413 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  store i1 false, i1* %413, align 1
  %414 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  %415 = load i1, i1* %414, align 1
  br i1 %415, label %then, label %else

then:                                             ; preds = %loop.end6
  %416 = getelementptr %array, %array* %c_copy, i32 0, i32 0
  %417 = load %complex_4*, %complex_4** %416, align 8
  %418 = alloca i8*, align 8
  %419 = bitcast %complex_4* %417 to i8*
  store i8* %419, i8** %418, align 8
  %420 = load i8*, i8** %418, align 8
  call void (i8*, ...) @_lfortran_free(i8* %420)
  %421 = getelementptr %array, %array* %c_copy, i32 0, i32 3
  store i1 false, i1* %421, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare void @_lfortran_complex_add_32(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %1 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = alloca %dimension_descriptor, i32 %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %0, align 8
  %4 = getelementptr %array.0, %array.0* %a, i32 0, i32 4
  store i32 1, i32* %4, align 4
  %5 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %5, align 1
  %b = alloca %array.1, align 8
  %6 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %7 = alloca i32, align 4
  store i32 2, i32* %7, align 4
  %8 = load i32, i32* %7, align 4
  %9 = alloca %dimension_descriptor, i32 %8, align 8
  store %dimension_descriptor* %9, %dimension_descriptor** %6, align 8
  %10 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  store i32 2, i32* %10, align 4
  %11 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %11, align 1
  %c = alloca %array, align 8
  %12 = getelementptr %array, %array* %c, i32 0, i32 2
  %13 = alloca i32, align 4
  store i32 3, i32* %13, align 4
  %14 = load i32, i32* %13, align 4
  %15 = alloca %dimension_descriptor, i32 %14, align 8
  store %dimension_descriptor* %15, %dimension_descriptor** %12, align 8
  %16 = getelementptr %array, %array* %c, i32 0, i32 4
  store i32 3, i32* %16, align 4
  %17 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %17, align 1
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %18 = load i32, i32* %n, align 4
  %19 = add i32 %18, 5
  %20 = sub i32 %19, 5
  %21 = add i32 %20, 1
  %22 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 true, i1* %23, align 1
  %24 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %25 = load %dimension_descriptor*, %dimension_descriptor** %24, align 8
  %26 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %25, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 1
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %26, i32 0, i32 2
  store i32 1, i32* %27, align 4
  store i32 5, i32* %28, align 4
  %30 = mul i32 1, %21
  store i32 %21, i32* %29, align 4
  %31 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %32 = alloca i32, align 4
  %33 = mul i32 %30, 4
  store i32 %33, i32* %32, align 4
  %34 = load i32, i32* %32, align 4
  %35 = call i8* (i32, ...) @_lfortran_malloc(i32 %34)
  %36 = bitcast i8* %35 to i32*
  store i32* %36, i32** %31, align 8
  %37 = load i32, i32* %n, align 4
  %38 = load i32, i32* %n, align 4
  %39 = mul i32 2, %38
  %40 = load i32, i32* %n, align 4
  %41 = sub i32 %39, %40
  %42 = add i32 %41, 1
  %43 = load i32, i32* %n, align 4
  %44 = load i32, i32* %n, align 4
  %45 = mul i32 3, %44
  %46 = load i32, i32* %n, align 4
  %47 = sub i32 %45, %46
  %48 = add i32 %47, 1
  %49 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %49, align 4
  %50 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 true, i1* %50, align 1
  %51 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %52 = load %dimension_descriptor*, %dimension_descriptor** %51, align 8
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 0
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  store i32 1, i32* %54, align 4
  store i32 %37, i32* %55, align 4
  %57 = mul i32 1, %42
  store i32 %42, i32* %56, align 4
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  store i32 1, i32* %59, align 4
  store i32 %43, i32* %60, align 4
  %62 = mul i32 %57, %48
  store i32 %48, i32* %61, align 4
  %63 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %64 = alloca i32, align 4
  %65 = mul i32 %62, 4
  store i32 %65, i32* %64, align 4
  %66 = load i32, i32* %64, align 4
  %67 = call i8* (i32, ...) @_lfortran_malloc(i32 %66)
  %68 = bitcast i8* %67 to float*
  store float* %68, float** %63, align 8
  store i32 0, i32* %ierr, align 4
  %69 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %70 = load %dimension_descriptor*, %dimension_descriptor** %69, align 8
  %71 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %72 = load %dimension_descriptor*, %dimension_descriptor** %71, align 8
  %73 = getelementptr %array.0, %array.0* %a, i32 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = alloca i32, align 4
  store i32 1, i32* %75, align 4
  %76 = alloca i32, align 4
  store i32 0, i32* %76, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, %74
  br i1 %78, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %79 = load i32, i32* %76, align 4
  %80 = load i32, i32* %75, align 4
  %81 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %72, i32 %79
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 %80, %83
  store i32 %84, i32* %75, align 4
  %85 = add i32 %79, 1
  store i32 %85, i32* %76, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %86 = load i32, i32* %75, align 4
  %87 = load i32, i32* %n, align 4
  %88 = add i32 %87, 1
  %89 = icmp ne i32 %86, %88
  br i1 %89, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %90 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %91 = load %dimension_descriptor*, %dimension_descriptor** %90, align 8
  %92 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %93 = load %dimension_descriptor*, %dimension_descriptor** %92, align 8
  %94 = getelementptr %array.1, %array.1* %b, i32 0, i32 4
  %95 = load i32, i32* %94, align 4
  %96 = alloca i32, align 4
  store i32 1, i32* %96, align 4
  %97 = alloca i32, align 4
  store i32 0, i32* %97, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %ifcont
  %98 = load i32, i32* %97, align 4
  %99 = icmp slt i32 %98, %95
  br i1 %99, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %100 = load i32, i32* %97, align 4
  %101 = load i32, i32* %96, align 4
  %102 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %93, i32 %100
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %102, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = mul i32 %101, %104
  store i32 %105, i32* %96, align 4
  %106 = add i32 %100, 1
  store i32 %106, i32* %97, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %107 = load i32, i32* %96, align 4
  %108 = load i32, i32* %n, align 4
  %109 = add i32 %108, 1
  %110 = load i32, i32* %n, align 4
  %111 = mul i32 2, %110
  %112 = add i32 %111, 1
  %113 = mul i32 %109, %112
  %114 = icmp ne i32 %107, %113
  br i1 %114, label %then4, label %else5

then4:                                            ; preds = %loop.end3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %loop.end3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %115 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %116 = load %dimension_descriptor*, %dimension_descriptor** %115, align 8
  %117 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 0
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = sub i32 %119, 1
  store i32 %120, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %121 = load i32, i32* %i, align 4
  %122 = add i32 %121, 1
  %123 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %124 = load %dimension_descriptor*, %dimension_descriptor** %123, align 8
  %125 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %124, i32 0
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %125, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, %127
  %131 = sub i32 %130, 1
  %132 = icmp sle i32 %122, %131
  br i1 %132, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %133 = load i32, i32* %i, align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* %i, align 4
  %135 = load i32, i32* %i, align 4
  %136 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %137 = load %dimension_descriptor*, %dimension_descriptor** %136, align 8
  %138 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %137, i32 0
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = sub i32 %135, %140
  %142 = mul i32 1, %141
  %143 = add i32 0, %142
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 2
  %145 = load i32, i32* %144, align 4
  %146 = mul i32 1, %145
  %147 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds i32, i32* %148, i32 %143
  %150 = load i32, i32* %i, align 4
  store i32 %150, i32* %149, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %151 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %152 = load %dimension_descriptor*, %dimension_descriptor** %151, align 8
  %153 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %152, i32 0
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %153, i32 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = sub i32 %155, 1
  store i32 %156, i32* %i, align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.end14, %loop.end9
  %157 = load i32, i32* %i, align 4
  %158 = add i32 %157, 1
  %159 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %160 = load %dimension_descriptor*, %dimension_descriptor** %159, align 8
  %161 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 0
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 2
  %165 = load i32, i32* %164, align 4
  %166 = add i32 %165, %163
  %167 = sub i32 %166, 1
  %168 = icmp sle i32 %158, %167
  br i1 %168, label %loop.body11, label %loop.end15

loop.body11:                                      ; preds = %loop.head10
  %169 = load i32, i32* %i, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %i, align 4
  %171 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %172 = load %dimension_descriptor*, %dimension_descriptor** %171, align 8
  %173 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %172, i32 1
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %173, i32 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = sub i32 %175, 1
  store i32 %176, i32* %j, align 4
  br label %loop.head12

loop.head12:                                      ; preds = %loop.body13, %loop.body11
  %177 = load i32, i32* %j, align 4
  %178 = add i32 %177, 1
  %179 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %180 = load %dimension_descriptor*, %dimension_descriptor** %179, align 8
  %181 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %180, i32 1
  %182 = getelementptr %dimension_descriptor, %dimension_descriptor* %181, i32 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr %dimension_descriptor, %dimension_descriptor* %181, i32 0, i32 2
  %185 = load i32, i32* %184, align 4
  %186 = add i32 %185, %183
  %187 = sub i32 %186, 1
  %188 = icmp sle i32 %178, %187
  br i1 %188, label %loop.body13, label %loop.end14

loop.body13:                                      ; preds = %loop.head12
  %189 = load i32, i32* %j, align 4
  %190 = add i32 %189, 1
  store i32 %190, i32* %j, align 4
  %191 = load i32, i32* %i, align 4
  %192 = load i32, i32* %j, align 4
  %193 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %194 = load %dimension_descriptor*, %dimension_descriptor** %193, align 8
  %195 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %194, i32 0
  %196 = getelementptr %dimension_descriptor, %dimension_descriptor* %195, i32 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = sub i32 %191, %197
  %199 = mul i32 1, %198
  %200 = add i32 0, %199
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %195, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  %203 = mul i32 1, %202
  %204 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %194, i32 1
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = sub i32 %192, %206
  %208 = mul i32 %203, %207
  %209 = add i32 %200, %208
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 2
  %211 = load i32, i32* %210, align 4
  %212 = mul i32 %203, %211
  %213 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %214 = load float*, float** %213, align 8
  %215 = getelementptr inbounds float, float* %214, i32 %209
  %216 = load i32, i32* %i, align 4
  %217 = load i32, i32* %j, align 4
  %218 = add i32 %216, %217
  %219 = sitofp i32 %218 to float
  store float %219, float* %215, align 4
  br label %loop.head12

loop.end14:                                       ; preds = %loop.head12
  br label %loop.head10

loop.end15:                                       ; preds = %loop.head10
  %220 = getelementptr %array, %array* %c, i32 0, i32 3
  %221 = load i1, i1* %220, align 1
  br i1 %221, label %then16, label %else17

then16:                                           ; preds = %loop.end15
  %222 = getelementptr %array, %array* %c, i32 0, i32 0
  %223 = load %complex_4*, %complex_4** %222, align 8
  %224 = alloca i8*, align 8
  %225 = bitcast %complex_4* %223 to i8*
  store i8* %225, i8** %224, align 8
  %226 = load i8*, i8** %224, align 8
  call void (i8*, ...) @_lfortran_free(i8* %226)
  %227 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %227, align 1
  br label %ifcont18

else17:                                           ; preds = %loop.end15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %228 = alloca %array.0, align 8
  %229 = alloca %array.1, align 8
  %230 = alloca %array, align 8
  call void @sum(%array.0* %a, %array.1* %b, %array* %c)
  %231 = getelementptr %array, %array* %c, i32 0, i32 2
  %232 = load %dimension_descriptor*, %dimension_descriptor** %231, align 8
  %233 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %232, i32 0
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = icmp ne i32 %235, 5
  %237 = getelementptr %array, %array* %c, i32 0, i32 2
  %238 = load %dimension_descriptor*, %dimension_descriptor** %237, align 8
  %239 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %238, i32 0
  %240 = getelementptr %dimension_descriptor, %dimension_descriptor* %239, i32 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr %dimension_descriptor, %dimension_descriptor* %239, i32 0, i32 2
  %243 = load i32, i32* %242, align 4
  %244 = add i32 %243, %241
  %245 = sub i32 %244, 1
  %246 = load i32, i32* %n, align 4
  %247 = add i32 %246, 5
  %248 = icmp ne i32 %245, %247
  %249 = or i1 %236, %248
  br i1 %249, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  %250 = getelementptr %array, %array* %c, i32 0, i32 2
  %251 = load %dimension_descriptor*, %dimension_descriptor** %250, align 8
  %252 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %251, i32 1
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = load i32, i32* %n, align 4
  %256 = icmp ne i32 %254, %255
  %257 = getelementptr %array, %array* %c, i32 0, i32 2
  %258 = load %dimension_descriptor*, %dimension_descriptor** %257, align 8
  %259 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %258, i32 1
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %259, i32 0, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr %dimension_descriptor, %dimension_descriptor* %259, i32 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = add i32 %263, %261
  %265 = sub i32 %264, 1
  %266 = load i32, i32* %n, align 4
  %267 = mul i32 2, %266
  %268 = icmp ne i32 %265, %267
  %269 = or i1 %256, %268
  br i1 %269, label %then22, label %else23

then22:                                           ; preds = %ifcont21
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont24

else23:                                           ; preds = %ifcont21
  br label %ifcont24

ifcont24:                                         ; preds = %else23, %then22
  %270 = getelementptr %array, %array* %c, i32 0, i32 2
  %271 = load %dimension_descriptor*, %dimension_descriptor** %270, align 8
  %272 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %271, i32 2
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = load i32, i32* %n, align 4
  %276 = icmp ne i32 %274, %275
  %277 = getelementptr %array, %array* %c, i32 0, i32 2
  %278 = load %dimension_descriptor*, %dimension_descriptor** %277, align 8
  %279 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %278, i32 2
  %280 = getelementptr %dimension_descriptor, %dimension_descriptor* %279, i32 0, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr %dimension_descriptor, %dimension_descriptor* %279, i32 0, i32 2
  %283 = load i32, i32* %282, align 4
  %284 = add i32 %283, %281
  %285 = sub i32 %284, 1
  %286 = load i32, i32* %n, align 4
  %287 = mul i32 3, %286
  %288 = icmp ne i32 %285, %287
  %289 = or i1 %276, %288
  br i1 %289, label %then25, label %else26

then25:                                           ; preds = %ifcont24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %ifcont24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %290 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %291 = load %dimension_descriptor*, %dimension_descriptor** %290, align 8
  %292 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %291, i32 0
  %293 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = sub i32 %294, 1
  store i32 %295, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %ifcont32, %ifcont27
  %296 = load i32, i32* %i, align 4
  %297 = add i32 %296, 1
  %298 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %299 = load %dimension_descriptor*, %dimension_descriptor** %298, align 8
  %300 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %299, i32 0
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 2
  %304 = load i32, i32* %303, align 4
  %305 = add i32 %304, %302
  %306 = sub i32 %305, 1
  %307 = icmp sle i32 %297, %306
  br i1 %307, label %loop.body29, label %loop.end33

loop.body29:                                      ; preds = %loop.head28
  %308 = load i32, i32* %i, align 4
  %309 = add i32 %308, 1
  store i32 %309, i32* %i, align 4
  %310 = load i32, i32* %i, align 4
  %311 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %312 = load %dimension_descriptor*, %dimension_descriptor** %311, align 8
  %313 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %312, i32 0
  %314 = getelementptr %dimension_descriptor, %dimension_descriptor* %313, i32 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = sub i32 %310, %315
  %317 = mul i32 1, %316
  %318 = add i32 0, %317
  %319 = getelementptr %dimension_descriptor, %dimension_descriptor* %313, i32 0, i32 2
  %320 = load i32, i32* %319, align 4
  %321 = mul i32 1, %320
  %322 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %323 = load i32*, i32** %322, align 8
  %324 = getelementptr inbounds i32, i32* %323, i32 %318
  %325 = load i32, i32* %324, align 4
  %326 = load i32, i32* %i, align 4
  %327 = icmp ne i32 %325, %326
  br i1 %327, label %then30, label %else31

then30:                                           ; preds = %loop.body29
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont32

else31:                                           ; preds = %loop.body29
  br label %ifcont32

ifcont32:                                         ; preds = %else31, %then30
  br label %loop.head28

loop.end33:                                       ; preds = %loop.head28
  %328 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %329 = load %dimension_descriptor*, %dimension_descriptor** %328, align 8
  %330 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %329, i32 0
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = sub i32 %332, 1
  store i32 %333, i32* %i, align 4
  br label %loop.head34

loop.head34:                                      ; preds = %loop.end41, %loop.end33
  %334 = load i32, i32* %i, align 4
  %335 = add i32 %334, 1
  %336 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %337 = load %dimension_descriptor*, %dimension_descriptor** %336, align 8
  %338 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %337, i32 0
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %338, i32 0, i32 1
  %340 = load i32, i32* %339, align 4
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %338, i32 0, i32 2
  %342 = load i32, i32* %341, align 4
  %343 = add i32 %342, %340
  %344 = sub i32 %343, 1
  %345 = icmp sle i32 %335, %344
  br i1 %345, label %loop.body35, label %loop.end42

loop.body35:                                      ; preds = %loop.head34
  %346 = load i32, i32* %i, align 4
  %347 = add i32 %346, 1
  store i32 %347, i32* %i, align 4
  %348 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %349 = load %dimension_descriptor*, %dimension_descriptor** %348, align 8
  %350 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %349, i32 1
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = sub i32 %352, 1
  store i32 %353, i32* %j, align 4
  br label %loop.head36

loop.head36:                                      ; preds = %ifcont40, %loop.body35
  %354 = load i32, i32* %j, align 4
  %355 = add i32 %354, 1
  %356 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %357 = load %dimension_descriptor*, %dimension_descriptor** %356, align 8
  %358 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %357, i32 1
  %359 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 1
  %360 = load i32, i32* %359, align 4
  %361 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 2
  %362 = load i32, i32* %361, align 4
  %363 = add i32 %362, %360
  %364 = sub i32 %363, 1
  %365 = icmp sle i32 %355, %364
  br i1 %365, label %loop.body37, label %loop.end41

loop.body37:                                      ; preds = %loop.head36
  %366 = load i32, i32* %j, align 4
  %367 = add i32 %366, 1
  store i32 %367, i32* %j, align 4
  %368 = load i32, i32* %i, align 4
  %369 = load i32, i32* %j, align 4
  %370 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %371 = load %dimension_descriptor*, %dimension_descriptor** %370, align 8
  %372 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %371, i32 0
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = sub i32 %368, %374
  %376 = mul i32 1, %375
  %377 = add i32 0, %376
  %378 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 2
  %379 = load i32, i32* %378, align 4
  %380 = mul i32 1, %379
  %381 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %371, i32 1
  %382 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = sub i32 %369, %383
  %385 = mul i32 %380, %384
  %386 = add i32 %377, %385
  %387 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 2
  %388 = load i32, i32* %387, align 4
  %389 = mul i32 %380, %388
  %390 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %391 = load float*, float** %390, align 8
  %392 = getelementptr inbounds float, float* %391, i32 %386
  %393 = load float, float* %392, align 4
  %394 = load i32, i32* %i, align 4
  %395 = load i32, i32* %j, align 4
  %396 = add i32 %394, %395
  %397 = sitofp i32 %396 to float
  %398 = fcmp une float %393, %397
  br i1 %398, label %then38, label %else39

then38:                                           ; preds = %loop.body37
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont40

else39:                                           ; preds = %loop.body37
  br label %ifcont40

ifcont40:                                         ; preds = %else39, %then38
  br label %loop.head36

loop.end41:                                       ; preds = %loop.head36
  br label %loop.head34

loop.end42:                                       ; preds = %loop.head34
  %399 = getelementptr %array, %array* %c, i32 0, i32 2
  %400 = load %dimension_descriptor*, %dimension_descriptor** %399, align 8
  %401 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %400, i32 0
  %402 = getelementptr %dimension_descriptor, %dimension_descriptor* %401, i32 0, i32 1
  %403 = load i32, i32* %402, align 4
  %404 = sub i32 %403, 1
  store i32 %404, i32* %i, align 4
  br label %loop.head43

loop.head43:                                      ; preds = %loop.end53, %loop.end42
  %405 = load i32, i32* %i, align 4
  %406 = add i32 %405, 1
  %407 = getelementptr %array, %array* %c, i32 0, i32 2
  %408 = load %dimension_descriptor*, %dimension_descriptor** %407, align 8
  %409 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %408, i32 0
  %410 = getelementptr %dimension_descriptor, %dimension_descriptor* %409, i32 0, i32 1
  %411 = load i32, i32* %410, align 4
  %412 = getelementptr %dimension_descriptor, %dimension_descriptor* %409, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = add i32 %413, %411
  %415 = sub i32 %414, 1
  %416 = icmp sle i32 %406, %415
  br i1 %416, label %loop.body44, label %loop.end54

loop.body44:                                      ; preds = %loop.head43
  %417 = load i32, i32* %i, align 4
  %418 = add i32 %417, 1
  store i32 %418, i32* %i, align 4
  %419 = getelementptr %array, %array* %c, i32 0, i32 2
  %420 = load %dimension_descriptor*, %dimension_descriptor** %419, align 8
  %421 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %420, i32 1
  %422 = getelementptr %dimension_descriptor, %dimension_descriptor* %421, i32 0, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = sub i32 %423, 1
  store i32 %424, i32* %j, align 4
  br label %loop.head45

loop.head45:                                      ; preds = %loop.end52, %loop.body44
  %425 = load i32, i32* %j, align 4
  %426 = add i32 %425, 1
  %427 = getelementptr %array, %array* %c, i32 0, i32 2
  %428 = load %dimension_descriptor*, %dimension_descriptor** %427, align 8
  %429 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %428, i32 1
  %430 = getelementptr %dimension_descriptor, %dimension_descriptor* %429, i32 0, i32 1
  %431 = load i32, i32* %430, align 4
  %432 = getelementptr %dimension_descriptor, %dimension_descriptor* %429, i32 0, i32 2
  %433 = load i32, i32* %432, align 4
  %434 = add i32 %433, %431
  %435 = sub i32 %434, 1
  %436 = icmp sle i32 %426, %435
  br i1 %436, label %loop.body46, label %loop.end53

loop.body46:                                      ; preds = %loop.head45
  %437 = load i32, i32* %j, align 4
  %438 = add i32 %437, 1
  store i32 %438, i32* %j, align 4
  %439 = getelementptr %array, %array* %c, i32 0, i32 2
  %440 = load %dimension_descriptor*, %dimension_descriptor** %439, align 8
  %441 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %440, i32 2
  %442 = getelementptr %dimension_descriptor, %dimension_descriptor* %441, i32 0, i32 1
  %443 = load i32, i32* %442, align 4
  %444 = sub i32 %443, 1
  store i32 %444, i32* %k, align 4
  br label %loop.head47

loop.head47:                                      ; preds = %ifcont51, %loop.body46
  %445 = load i32, i32* %k, align 4
  %446 = add i32 %445, 1
  %447 = getelementptr %array, %array* %c, i32 0, i32 2
  %448 = load %dimension_descriptor*, %dimension_descriptor** %447, align 8
  %449 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %448, i32 2
  %450 = getelementptr %dimension_descriptor, %dimension_descriptor* %449, i32 0, i32 1
  %451 = load i32, i32* %450, align 4
  %452 = getelementptr %dimension_descriptor, %dimension_descriptor* %449, i32 0, i32 2
  %453 = load i32, i32* %452, align 4
  %454 = add i32 %453, %451
  %455 = sub i32 %454, 1
  %456 = icmp sle i32 %446, %455
  br i1 %456, label %loop.body48, label %loop.end52

loop.body48:                                      ; preds = %loop.head47
  %457 = load i32, i32* %k, align 4
  %458 = add i32 %457, 1
  store i32 %458, i32* %k, align 4
  %459 = load i32, i32* %i, align 4
  %460 = load i32, i32* %j, align 4
  %461 = load i32, i32* %k, align 4
  %462 = getelementptr %array, %array* %c, i32 0, i32 2
  %463 = load %dimension_descriptor*, %dimension_descriptor** %462, align 8
  %464 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %463, i32 0
  %465 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = sub i32 %459, %466
  %468 = mul i32 1, %467
  %469 = add i32 0, %468
  %470 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 2
  %471 = load i32, i32* %470, align 4
  %472 = mul i32 1, %471
  %473 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %463, i32 1
  %474 = getelementptr %dimension_descriptor, %dimension_descriptor* %473, i32 0, i32 1
  %475 = load i32, i32* %474, align 4
  %476 = sub i32 %460, %475
  %477 = mul i32 %472, %476
  %478 = add i32 %469, %477
  %479 = getelementptr %dimension_descriptor, %dimension_descriptor* %473, i32 0, i32 2
  %480 = load i32, i32* %479, align 4
  %481 = mul i32 %472, %480
  %482 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %463, i32 2
  %483 = getelementptr %dimension_descriptor, %dimension_descriptor* %482, i32 0, i32 1
  %484 = load i32, i32* %483, align 4
  %485 = sub i32 %461, %484
  %486 = mul i32 %481, %485
  %487 = add i32 %478, %486
  %488 = getelementptr %dimension_descriptor, %dimension_descriptor* %482, i32 0, i32 2
  %489 = load i32, i32* %488, align 4
  %490 = mul i32 %481, %489
  %491 = getelementptr %array, %array* %c, i32 0, i32 0
  %492 = load %complex_4*, %complex_4** %491, align 8
  %493 = getelementptr inbounds %complex_4, %complex_4* %492, i32 %487
  %494 = load %complex_4, %complex_4* %493, align 4
  %495 = load i32, i32* %i, align 4
  %496 = load i32, i32* %j, align 4
  %497 = add i32 %495, %496
  %498 = load i32, i32* %k, align 4
  %499 = add i32 %497, %498
  %500 = sitofp i32 %499 to float
  %501 = alloca %complex_4, align 8
  %502 = getelementptr %complex_4, %complex_4* %501, i32 0, i32 0
  %503 = getelementptr %complex_4, %complex_4* %501, i32 0, i32 1
  store float %500, float* %502, align 4
  store float 0.000000e+00, float* %503, align 4
  %504 = load %complex_4, %complex_4* %501, align 4
  %505 = alloca %complex_4, align 8
  store %complex_4 %494, %complex_4* %505, align 4
  %506 = getelementptr %complex_4, %complex_4* %505, i32 0, i32 0
  %507 = load float, float* %506, align 4
  %508 = alloca %complex_4, align 8
  store %complex_4 %504, %complex_4* %508, align 4
  %509 = getelementptr %complex_4, %complex_4* %508, i32 0, i32 0
  %510 = load float, float* %509, align 4
  %511 = alloca %complex_4, align 8
  store %complex_4 %494, %complex_4* %511, align 4
  %512 = getelementptr %complex_4, %complex_4* %511, i32 0, i32 1
  %513 = load float, float* %512, align 4
  %514 = alloca %complex_4, align 8
  store %complex_4 %504, %complex_4* %514, align 4
  %515 = getelementptr %complex_4, %complex_4* %514, i32 0, i32 1
  %516 = load float, float* %515, align 4
  %517 = fcmp une float %507, %510
  %518 = fcmp une float %513, %516
  %519 = and i1 %517, %518
  br i1 %519, label %then49, label %else50

then49:                                           ; preds = %loop.body48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %loop.body48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  br label %loop.head47

loop.end52:                                       ; preds = %loop.head47
  br label %loop.head45

loop.end53:                                       ; preds = %loop.head45
  br label %loop.head43

loop.end54:                                       ; preds = %loop.head43
  %520 = alloca %array, align 8
  %521 = call %complex_4 @reduce_sum(%array* %c)
  store %complex_4 %521, %complex_4* %r, align 4
  %522 = load %complex_4, %complex_4* %r, align 4
  %523 = alloca %complex_4, align 8
  %524 = getelementptr %complex_4, %complex_4* %523, i32 0, i32 0
  %525 = getelementptr %complex_4, %complex_4* %523, i32 0, i32 1
  store float 1.143450e+05, float* %524, align 4
  store float 0.000000e+00, float* %525, align 4
  %526 = load %complex_4, %complex_4* %523, align 4
  %527 = alloca %complex_4, align 8
  store %complex_4 %522, %complex_4* %527, align 4
  %528 = getelementptr %complex_4, %complex_4* %527, i32 0, i32 0
  %529 = load float, float* %528, align 4
  %530 = alloca %complex_4, align 8
  store %complex_4 %526, %complex_4* %530, align 4
  %531 = getelementptr %complex_4, %complex_4* %530, i32 0, i32 0
  %532 = load float, float* %531, align 4
  %533 = alloca %complex_4, align 8
  store %complex_4 %522, %complex_4* %533, align 4
  %534 = getelementptr %complex_4, %complex_4* %533, i32 0, i32 1
  %535 = load float, float* %534, align 4
  %536 = alloca %complex_4, align 8
  store %complex_4 %526, %complex_4* %536, align 4
  %537 = getelementptr %complex_4, %complex_4* %536, i32 0, i32 1
  %538 = load float, float* %537, align 4
  %539 = fcmp une float %529, %532
  %540 = fcmp une float %535, %538
  %541 = and i1 %539, %540
  br i1 %541, label %then55, label %else56

then55:                                           ; preds = %loop.end54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %loop.end54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %542 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  %543 = load i1, i1* %542, align 1
  br i1 %543, label %then58, label %else59

then58:                                           ; preds = %ifcont57
  %544 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %545 = load i32*, i32** %544, align 8
  %546 = alloca i8*, align 8
  %547 = bitcast i32* %545 to i8*
  store i8* %547, i8** %546, align 8
  %548 = load i8*, i8** %546, align 8
  call void (i8*, ...) @_lfortran_free(i8* %548)
  %549 = getelementptr %array.0, %array.0* %a, i32 0, i32 3
  store i1 false, i1* %549, align 1
  br label %ifcont60

else59:                                           ; preds = %ifcont57
  br label %ifcont60

ifcont60:                                         ; preds = %else59, %then58
  %550 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  %551 = load i1, i1* %550, align 1
  br i1 %551, label %then61, label %else62

then61:                                           ; preds = %ifcont60
  %552 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %553 = load float*, float** %552, align 8
  %554 = alloca i8*, align 8
  %555 = bitcast float* %553 to i8*
  store i8* %555, i8** %554, align 8
  %556 = load i8*, i8** %554, align 8
  call void (i8*, ...) @_lfortran_free(i8* %556)
  %557 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %557, align 1
  br label %ifcont63

else62:                                           ; preds = %ifcont60
  br label %ifcont63

ifcont63:                                         ; preds = %else62, %then61
  %558 = getelementptr %array, %array* %c, i32 0, i32 3
  %559 = load i1, i1* %558, align 1
  br i1 %559, label %then64, label %else65

then64:                                           ; preds = %ifcont63
  %560 = getelementptr %array, %array* %c, i32 0, i32 0
  %561 = load %complex_4*, %complex_4** %560, align 8
  %562 = alloca i8*, align 8
  %563 = bitcast %complex_4* %561 to i8*
  store i8* %563, i8** %562, align 8
  %564 = load i8*, i8** %562, align 8
  call void (i8*, ...) @_lfortran_free(i8* %564)
  %565 = getelementptr %array, %array* %c, i32 0, i32 3
  store i1 false, i1* %565, align 1
  br label %ifcont66

else65:                                           ; preds = %ifcont63
  br label %ifcont66

ifcont66:                                         ; preds = %else65, %then64
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
