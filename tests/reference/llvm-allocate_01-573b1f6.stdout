; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%size_arg = type { %dimension_descriptor*, i32 }
%complex_4 = type { float, float }
%array.0 = type { %complex_4*, i32, %dimension_descriptor*, i1 }
%array = type { i32*, i32, %dimension_descriptor*, i1 }
%array.1 = type { float*, i32, %dimension_descriptor*, i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %x, i32* %dim, i32* %kind) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define %complex_4 @reduce_sum(%array.0* %c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %r = alloca %complex_4, align 8
  %0 = alloca %complex_4, align 8
  %1 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 0
  %2 = getelementptr %complex_4, %complex_4* %0, i32 0, i32 1
  store float 0.000000e+00, float* %1, align 4
  store float 0.000000e+00, float* %2, align 4
  %3 = load %complex_4, %complex_4* %0, align 4
  store %complex_4 %3, %complex_4* %r, align 4
  %4 = alloca %dimension_descriptor*, align 8
  %5 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %6 = load %dimension_descriptor*, %dimension_descriptor** %5, align 8
  store %dimension_descriptor* %6, %dimension_descriptor** %4, align 8
  %7 = alloca i32, align 4
  store i32 1, i32* %7, align 4
  %8 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %4, i32* %7)
  %9 = sub i32 %8, 1
  store i32 %9, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %10 = load i32, i32* %i, align 4
  %11 = add i32 %10, 1
  %12 = alloca %dimension_descriptor*, align 8
  %13 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %14 = load %dimension_descriptor*, %dimension_descriptor** %13, align 8
  store %dimension_descriptor* %14, %dimension_descriptor** %12, align 8
  %15 = alloca i32, align 4
  store i32 1, i32* %15, align 4
  %16 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %12, i32* %15)
  %17 = icmp sle i32 %11, %16
  br i1 %17, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %18 = load i32, i32* %i, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %i, align 4
  %20 = alloca %dimension_descriptor*, align 8
  %21 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %22 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  store %dimension_descriptor* %22, %dimension_descriptor** %20, align 8
  %23 = alloca i32, align 4
  store i32 2, i32* %23, align 4
  %24 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %20, i32* %23)
  %25 = sub i32 %24, 1
  store i32 %25, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %26 = load i32, i32* %j, align 4
  %27 = add i32 %26, 1
  %28 = alloca %dimension_descriptor*, align 8
  %29 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %30 = load %dimension_descriptor*, %dimension_descriptor** %29, align 8
  store %dimension_descriptor* %30, %dimension_descriptor** %28, align 8
  %31 = alloca i32, align 4
  store i32 2, i32* %31, align 4
  %32 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %28, i32* %31)
  %33 = icmp sle i32 %27, %32
  br i1 %33, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %34 = load i32, i32* %j, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %j, align 4
  %36 = alloca %dimension_descriptor*, align 8
  %37 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %38 = load %dimension_descriptor*, %dimension_descriptor** %37, align 8
  store %dimension_descriptor* %38, %dimension_descriptor** %36, align 8
  %39 = alloca i32, align 4
  store i32 3, i32* %39, align 4
  %40 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %36, i32* %39)
  %41 = sub i32 %40, 1
  store i32 %41, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %42 = load i32, i32* %k, align 4
  %43 = add i32 %42, 1
  %44 = alloca %dimension_descriptor*, align 8
  %45 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %46 = load %dimension_descriptor*, %dimension_descriptor** %45, align 8
  store %dimension_descriptor* %46, %dimension_descriptor** %44, align 8
  %47 = alloca i32, align 4
  store i32 3, i32* %47, align 4
  %48 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %44, i32* %47)
  %49 = icmp sle i32 %43, %48
  br i1 %49, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %50 = load i32, i32* %k, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %k, align 4
  %52 = load %complex_4, %complex_4* %r, align 4
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* %j, align 4
  %55 = load i32, i32* %k, align 4
  %56 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %57 = load %dimension_descriptor*, %dimension_descriptor** %56, align 8
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 0
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = sub i32 %53, %60
  %62 = mul i32 1, %61
  %63 = add i32 0, %62
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = mul i32 1, %65
  %67 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 1
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 %54, %69
  %71 = mul i32 %66, %70
  %72 = add i32 %63, %71
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = mul i32 %66, %74
  %76 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %57, i32 2
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sub i32 %55, %78
  %80 = mul i32 %75, %79
  %81 = add i32 %72, %80
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %76, i32 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = mul i32 %75, %83
  %85 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %86 = load %complex_4*, %complex_4** %85, align 8
  %87 = getelementptr inbounds %complex_4, %complex_4* %86, i32 %81
  %88 = load %complex_4, %complex_4* %87, align 4
  %89 = alloca %complex_4, align 8
  store %complex_4 %52, %complex_4* %89, align 4
  %90 = alloca %complex_4, align 8
  store %complex_4 %88, %complex_4* %90, align 4
  %91 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %89, %complex_4* %90, %complex_4* %91)
  %92 = load %complex_4, %complex_4* %91, align 4
  store %complex_4 %92, %complex_4* %r, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  %93 = load %complex_4, %complex_4* %r, align 4
  ret %complex_4 %93
}

define void @sum(%array* %a, %array.1* %b, %array.0* %c) {
.entry:
  %c_copy = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %0, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %1 = alloca %dimension_descriptor*, align 8
  %2 = getelementptr %array, %array* %a, i32 0, i32 2
  %3 = load %dimension_descriptor*, %dimension_descriptor** %2, align 8
  store %dimension_descriptor* %3, %dimension_descriptor** %1, align 8
  %4 = alloca i32, align 4
  store i32 1, i32* %4, align 4
  %5 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1, i32* %4)
  %6 = alloca %dimension_descriptor*, align 8
  %7 = getelementptr %array, %array* %a, i32 0, i32 2
  %8 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  store %dimension_descriptor* %8, %dimension_descriptor** %6, align 8
  %9 = alloca i32, align 4
  store i32 1, i32* %9, align 4
  %10 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %6, i32* %9)
  %11 = alloca %dimension_descriptor*, align 8
  %12 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %13 = load %dimension_descriptor*, %dimension_descriptor** %12, align 8
  store %dimension_descriptor* %13, %dimension_descriptor** %11, align 8
  %14 = alloca i32, align 4
  store i32 1, i32* %14, align 4
  %15 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %11, i32* %14)
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %18 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 1, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %16, i32* %19)
  %21 = alloca %dimension_descriptor*, align 8
  %22 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %23 = load %dimension_descriptor*, %dimension_descriptor** %22, align 8
  store %dimension_descriptor* %23, %dimension_descriptor** %21, align 8
  %24 = alloca i32, align 4
  store i32 2, i32* %24, align 4
  %25 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %21, i32* %24)
  %26 = alloca %dimension_descriptor*, align 8
  %27 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %28 = load %dimension_descriptor*, %dimension_descriptor** %27, align 8
  store %dimension_descriptor* %28, %dimension_descriptor** %26, align 8
  %29 = alloca i32, align 4
  store i32 2, i32* %29, align 4
  %30 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %26, i32* %29)
  %31 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 true, i1* %32, align 1
  %33 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %34 = alloca i32, align 4
  store i32 3, i32* %34, align 4
  %35 = load i32, i32* %34, align 4
  %36 = alloca %dimension_descriptor, i32 %35, align 8
  store %dimension_descriptor* %36, %dimension_descriptor** %33, align 8
  %37 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  %38 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %37, i32 0
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 0
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 1
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 2
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 3
  store i32 1, i32* %39, align 4
  store i32 %5, i32* %40, align 4
  store i32 %10, i32* %41, align 4
  %43 = load i32, i32* %41, align 4
  %44 = load i32, i32* %40, align 4
  %45 = sub i32 %43, %44
  %46 = add i32 %45, 1
  %47 = mul i32 1, %46
  store i32 %46, i32* %42, align 4
  %48 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %37, i32 1
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 2
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 3
  store i32 1, i32* %49, align 4
  store i32 %15, i32* %50, align 4
  store i32 %20, i32* %51, align 4
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %50, align 4
  %55 = sub i32 %53, %54
  %56 = add i32 %55, 1
  %57 = mul i32 %47, %56
  store i32 %56, i32* %52, align 4
  %58 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %37, i32 2
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 0
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 1
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 2
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %58, i32 0, i32 3
  store i32 1, i32* %59, align 4
  store i32 %25, i32* %60, align 4
  store i32 %30, i32* %61, align 4
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %60, align 4
  %65 = sub i32 %63, %64
  %66 = add i32 %65, 1
  %67 = mul i32 %57, %66
  store i32 %66, i32* %62, align 4
  %68 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %69 = alloca i32, align 4
  %70 = mul i32 %67, 8
  store i32 %70, i32* %69, align 4
  %71 = load i32, i32* %69, align 4
  %72 = call i8* (i32, ...) @_lfortran_malloc(i32 %71)
  %73 = bitcast i8* %72 to %complex_4*
  store %complex_4* %73, %complex_4** %68, align 8
  %74 = alloca %dimension_descriptor*, align 8
  %75 = getelementptr %array, %array* %a, i32 0, i32 2
  %76 = load %dimension_descriptor*, %dimension_descriptor** %75, align 8
  store %dimension_descriptor* %76, %dimension_descriptor** %74, align 8
  %77 = alloca i32, align 4
  store i32 1, i32* %77, align 4
  %78 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %74, i32* %77)
  %79 = alloca %dimension_descriptor*, align 8
  %80 = getelementptr %array, %array* %a, i32 0, i32 2
  %81 = load %dimension_descriptor*, %dimension_descriptor** %80, align 8
  store %dimension_descriptor* %81, %dimension_descriptor** %79, align 8
  %82 = alloca i32, align 4
  store i32 1, i32* %82, align 4
  %83 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %79, i32* %82)
  %84 = alloca %dimension_descriptor*, align 8
  %85 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %86 = load %dimension_descriptor*, %dimension_descriptor** %85, align 8
  store %dimension_descriptor* %86, %dimension_descriptor** %84, align 8
  %87 = alloca i32, align 4
  store i32 1, i32* %87, align 4
  %88 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %84, i32* %87)
  %89 = alloca %dimension_descriptor*, align 8
  %90 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %91 = load %dimension_descriptor*, %dimension_descriptor** %90, align 8
  store %dimension_descriptor* %91, %dimension_descriptor** %89, align 8
  %92 = alloca i32, align 4
  store i32 1, i32* %92, align 4
  %93 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %89, i32* %92)
  %94 = alloca %dimension_descriptor*, align 8
  %95 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %96 = load %dimension_descriptor*, %dimension_descriptor** %95, align 8
  store %dimension_descriptor* %96, %dimension_descriptor** %94, align 8
  %97 = alloca i32, align 4
  store i32 2, i32* %97, align 4
  %98 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %94, i32* %97)
  %99 = alloca %dimension_descriptor*, align 8
  %100 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %101 = load %dimension_descriptor*, %dimension_descriptor** %100, align 8
  store %dimension_descriptor* %101, %dimension_descriptor** %99, align 8
  %102 = alloca i32, align 4
  store i32 2, i32* %102, align 4
  %103 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %99, i32* %102)
  %104 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %104, align 4
  %105 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 true, i1* %105, align 1
  %106 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %107 = alloca i32, align 4
  store i32 3, i32* %107, align 4
  %108 = load i32, i32* %107, align 4
  %109 = alloca %dimension_descriptor, i32 %108, align 8
  store %dimension_descriptor* %109, %dimension_descriptor** %106, align 8
  %110 = load %dimension_descriptor*, %dimension_descriptor** %106, align 8
  %111 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %110, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 0
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 1
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 2
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %111, i32 0, i32 3
  store i32 1, i32* %112, align 4
  store i32 %78, i32* %113, align 4
  store i32 %83, i32* %114, align 4
  %116 = load i32, i32* %114, align 4
  %117 = load i32, i32* %113, align 4
  %118 = sub i32 %116, %117
  %119 = add i32 %118, 1
  %120 = mul i32 1, %119
  store i32 %119, i32* %115, align 4
  %121 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %110, i32 1
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 0
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 1
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 2
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %121, i32 0, i32 3
  store i32 1, i32* %122, align 4
  store i32 %88, i32* %123, align 4
  store i32 %93, i32* %124, align 4
  %126 = load i32, i32* %124, align 4
  %127 = load i32, i32* %123, align 4
  %128 = sub i32 %126, %127
  %129 = add i32 %128, 1
  %130 = mul i32 %120, %129
  store i32 %129, i32* %125, align 4
  %131 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %110, i32 2
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 0
  %133 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 1
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 2
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %131, i32 0, i32 3
  store i32 1, i32* %132, align 4
  store i32 %98, i32* %133, align 4
  store i32 %103, i32* %134, align 4
  %136 = load i32, i32* %134, align 4
  %137 = load i32, i32* %133, align 4
  %138 = sub i32 %136, %137
  %139 = add i32 %138, 1
  %140 = mul i32 %130, %139
  store i32 %139, i32* %135, align 4
  %141 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %142 = alloca i32, align 4
  %143 = mul i32 %140, 8
  store i32 %143, i32* %142, align 4
  %144 = load i32, i32* %142, align 4
  %145 = call i8* (i32, ...) @_lfortran_malloc(i32 %144)
  %146 = bitcast i8* %145 to %complex_4*
  store %complex_4* %146, %complex_4** %141, align 8
  %147 = alloca %dimension_descriptor*, align 8
  %148 = getelementptr %array, %array* %a, i32 0, i32 2
  %149 = load %dimension_descriptor*, %dimension_descriptor** %148, align 8
  store %dimension_descriptor* %149, %dimension_descriptor** %147, align 8
  %150 = alloca i32, align 4
  store i32 1, i32* %150, align 4
  %151 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %147, i32* %150)
  %152 = sub i32 %151, 1
  store i32 %152, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %153 = load i32, i32* %i, align 4
  %154 = add i32 %153, 1
  %155 = alloca %dimension_descriptor*, align 8
  %156 = getelementptr %array, %array* %a, i32 0, i32 2
  %157 = load %dimension_descriptor*, %dimension_descriptor** %156, align 8
  store %dimension_descriptor* %157, %dimension_descriptor** %155, align 8
  %158 = alloca i32, align 4
  store i32 1, i32* %158, align 4
  %159 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %155, i32* %158)
  %160 = icmp sle i32 %154, %159
  br i1 %160, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %161 = load i32, i32* %i, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %i, align 4
  %163 = alloca %dimension_descriptor*, align 8
  %164 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %165 = load %dimension_descriptor*, %dimension_descriptor** %164, align 8
  store %dimension_descriptor* %165, %dimension_descriptor** %163, align 8
  %166 = alloca i32, align 4
  store i32 1, i32* %166, align 4
  %167 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %163, i32* %166)
  %168 = sub i32 %167, 1
  store i32 %168, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %169 = load i32, i32* %j, align 4
  %170 = add i32 %169, 1
  %171 = alloca %dimension_descriptor*, align 8
  %172 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %173 = load %dimension_descriptor*, %dimension_descriptor** %172, align 8
  store %dimension_descriptor* %173, %dimension_descriptor** %171, align 8
  %174 = alloca i32, align 4
  store i32 1, i32* %174, align 4
  %175 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %171, i32* %174)
  %176 = icmp sle i32 %170, %175
  br i1 %176, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %177 = load i32, i32* %j, align 4
  %178 = add i32 %177, 1
  store i32 %178, i32* %j, align 4
  %179 = alloca %dimension_descriptor*, align 8
  %180 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %181 = load %dimension_descriptor*, %dimension_descriptor** %180, align 8
  store %dimension_descriptor* %181, %dimension_descriptor** %179, align 8
  %182 = alloca i32, align 4
  store i32 2, i32* %182, align 4
  %183 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %179, i32* %182)
  %184 = sub i32 %183, 1
  store i32 %184, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %185 = load i32, i32* %k, align 4
  %186 = add i32 %185, 1
  %187 = alloca %dimension_descriptor*, align 8
  %188 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %189 = load %dimension_descriptor*, %dimension_descriptor** %188, align 8
  store %dimension_descriptor* %189, %dimension_descriptor** %187, align 8
  %190 = alloca i32, align 4
  store i32 2, i32* %190, align 4
  %191 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %187, i32* %190)
  %192 = icmp sle i32 %186, %191
  br i1 %192, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %193 = load i32, i32* %k, align 4
  %194 = add i32 %193, 1
  store i32 %194, i32* %k, align 4
  %195 = load i32, i32* %i, align 4
  %196 = load i32, i32* %j, align 4
  %197 = load i32, i32* %k, align 4
  %198 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 2
  %199 = load %dimension_descriptor*, %dimension_descriptor** %198, align 8
  %200 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %195, %202
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 1, %207
  %209 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 1
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %196, %211
  %213 = mul i32 %208, %212
  %214 = add i32 %205, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 %208, %216
  %218 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 2
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 %197, %220
  %222 = mul i32 %217, %221
  %223 = add i32 %214, %222
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = mul i32 %217, %225
  %227 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %228 = load %complex_4*, %complex_4** %227, align 8
  %229 = getelementptr inbounds %complex_4, %complex_4* %228, i32 %223
  %230 = load i32, i32* %i, align 4
  %231 = getelementptr %array, %array* %a, i32 0, i32 2
  %232 = load %dimension_descriptor*, %dimension_descriptor** %231, align 8
  %233 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %232, i32 0
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = sub i32 %230, %235
  %237 = mul i32 1, %236
  %238 = add i32 0, %237
  %239 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 3
  %240 = load i32, i32* %239, align 4
  %241 = mul i32 1, %240
  %242 = getelementptr %array, %array* %a, i32 0, i32 0
  %243 = load i32*, i32** %242, align 8
  %244 = getelementptr inbounds i32, i32* %243, i32 %238
  %245 = load i32, i32* %244, align 4
  %246 = sitofp i32 %245 to float
  %247 = load i32, i32* %j, align 4
  %248 = load i32, i32* %k, align 4
  %249 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %250 = load %dimension_descriptor*, %dimension_descriptor** %249, align 8
  %251 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %250, i32 0
  %252 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = sub i32 %247, %253
  %255 = mul i32 1, %254
  %256 = add i32 0, %255
  %257 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 3
  %258 = load i32, i32* %257, align 4
  %259 = mul i32 1, %258
  %260 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %250, i32 1
  %261 = getelementptr %dimension_descriptor, %dimension_descriptor* %260, i32 0, i32 1
  %262 = load i32, i32* %261, align 4
  %263 = sub i32 %248, %262
  %264 = mul i32 %259, %263
  %265 = add i32 %256, %264
  %266 = getelementptr %dimension_descriptor, %dimension_descriptor* %260, i32 0, i32 3
  %267 = load i32, i32* %266, align 4
  %268 = mul i32 %259, %267
  %269 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %270 = load float*, float** %269, align 8
  %271 = getelementptr inbounds float, float* %270, i32 %265
  %272 = load float, float* %271, align 4
  %273 = fadd float %246, %272
  %274 = alloca %complex_4, align 8
  %275 = getelementptr %complex_4, %complex_4* %274, i32 0, i32 0
  %276 = getelementptr %complex_4, %complex_4* %274, i32 0, i32 1
  store float %273, float* %275, align 4
  store float 0.000000e+00, float* %276, align 4
  %277 = load %complex_4, %complex_4* %274, align 4
  store %complex_4 %277, %complex_4* %229, align 4
  %278 = load i32, i32* %i, align 4
  %279 = load i32, i32* %j, align 4
  %280 = load i32, i32* %k, align 4
  %281 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %282 = load %dimension_descriptor*, %dimension_descriptor** %281, align 8
  %283 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %282, i32 0
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %283, i32 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = sub i32 %278, %285
  %287 = mul i32 1, %286
  %288 = add i32 0, %287
  %289 = getelementptr %dimension_descriptor, %dimension_descriptor* %283, i32 0, i32 3
  %290 = load i32, i32* %289, align 4
  %291 = mul i32 1, %290
  %292 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %282, i32 1
  %293 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = sub i32 %279, %294
  %296 = mul i32 %291, %295
  %297 = add i32 %288, %296
  %298 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 3
  %299 = load i32, i32* %298, align 4
  %300 = mul i32 %291, %299
  %301 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %282, i32 2
  %302 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 1
  %303 = load i32, i32* %302, align 4
  %304 = sub i32 %280, %303
  %305 = mul i32 %300, %304
  %306 = add i32 %297, %305
  %307 = getelementptr %dimension_descriptor, %dimension_descriptor* %301, i32 0, i32 3
  %308 = load i32, i32* %307, align 4
  %309 = mul i32 %300, %308
  %310 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %311 = load %complex_4*, %complex_4** %310, align 8
  %312 = getelementptr inbounds %complex_4, %complex_4* %311, i32 %306
  %313 = load i32, i32* %i, align 4
  %314 = getelementptr %array, %array* %a, i32 0, i32 2
  %315 = load %dimension_descriptor*, %dimension_descriptor** %314, align 8
  %316 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %315, i32 0
  %317 = getelementptr %dimension_descriptor, %dimension_descriptor* %316, i32 0, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = sub i32 %313, %318
  %320 = mul i32 1, %319
  %321 = add i32 0, %320
  %322 = getelementptr %dimension_descriptor, %dimension_descriptor* %316, i32 0, i32 3
  %323 = load i32, i32* %322, align 4
  %324 = mul i32 1, %323
  %325 = getelementptr %array, %array* %a, i32 0, i32 0
  %326 = load i32*, i32** %325, align 8
  %327 = getelementptr inbounds i32, i32* %326, i32 %321
  %328 = load i32, i32* %327, align 4
  %329 = sitofp i32 %328 to float
  %330 = load i32, i32* %j, align 4
  %331 = load i32, i32* %k, align 4
  %332 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %333 = load %dimension_descriptor*, %dimension_descriptor** %332, align 8
  %334 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %333, i32 0
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %334, i32 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = sub i32 %330, %336
  %338 = mul i32 1, %337
  %339 = add i32 0, %338
  %340 = getelementptr %dimension_descriptor, %dimension_descriptor* %334, i32 0, i32 3
  %341 = load i32, i32* %340, align 4
  %342 = mul i32 1, %341
  %343 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %333, i32 1
  %344 = getelementptr %dimension_descriptor, %dimension_descriptor* %343, i32 0, i32 1
  %345 = load i32, i32* %344, align 4
  %346 = sub i32 %331, %345
  %347 = mul i32 %342, %346
  %348 = add i32 %339, %347
  %349 = getelementptr %dimension_descriptor, %dimension_descriptor* %343, i32 0, i32 3
  %350 = load i32, i32* %349, align 4
  %351 = mul i32 %342, %350
  %352 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %353 = load float*, float** %352, align 8
  %354 = getelementptr inbounds float, float* %353, i32 %348
  %355 = load float, float* %354, align 4
  %356 = fadd float %329, %355
  %357 = alloca %complex_4, align 8
  %358 = getelementptr %complex_4, %complex_4* %357, i32 0, i32 0
  %359 = getelementptr %complex_4, %complex_4* %357, i32 0, i32 1
  store float %356, float* %358, align 4
  store float 0.000000e+00, float* %359, align 4
  %360 = load %complex_4, %complex_4* %357, align 4
  store %complex_4 %360, %complex_4* %312, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %361 = load %array.0, %array.0* %c_copy, align 8
  %362 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %363 = load %complex_4*, %complex_4** %362, align 8
  %364 = alloca i8*, align 8
  %365 = bitcast %complex_4* %363 to i8*
  store i8* %365, i8** %364, align 8
  %366 = load i8*, i8** %364, align 8
  call void (i8*, ...) @_lfortran_free(i8* %366)
  %367 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %367, align 1
  %368 = load %array.0, %array.0* %c_copy, align 8
  %369 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  %370 = load i1, i1* %369, align 1
  br i1 %370, label %then, label %else

then:                                             ; preds = %loop.end6
  %371 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 0
  %372 = load %complex_4*, %complex_4** %371, align 8
  %373 = alloca i8*, align 8
  %374 = bitcast %complex_4* %372 to i8*
  store i8* %374, i8** %373, align 8
  %375 = load i8*, i8** %373, align 8
  call void (i8*, ...) @_lfortran_free(i8* %375)
  %376 = getelementptr %array.0, %array.0* %c_copy, i32 0, i32 3
  store i1 false, i1* %376, align 1
  br label %ifcont

else:                                             ; preds = %loop.end6
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %return

return:                                           ; preds = %ifcont
  ret void
}

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_free(i8*, ...)

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %0, align 1
  %b = alloca %array.1, align 8
  %1 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %1, align 1
  %c = alloca %array.0, align 8
  %2 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %2, align 1
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %r = alloca %complex_4, align 8
  store i32 10, i32* %n, align 4
  %3 = load i32, i32* %n, align 4
  %4 = add i32 %3, 5
  %5 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 true, i1* %6, align 1
  %7 = getelementptr %array, %array* %a, i32 0, i32 2
  %8 = alloca i32, align 4
  store i32 1, i32* %8, align 4
  %9 = load i32, i32* %8, align 4
  %10 = alloca %dimension_descriptor, i32 %9, align 8
  store %dimension_descriptor* %10, %dimension_descriptor** %7, align 8
  %11 = load %dimension_descriptor*, %dimension_descriptor** %7, align 8
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 0
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 1
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 3
  store i32 1, i32* %13, align 4
  store i32 5, i32* %14, align 4
  store i32 %4, i32* %15, align 4
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %14, align 4
  %19 = sub i32 %17, %18
  %20 = add i32 %19, 1
  %21 = mul i32 1, %20
  store i32 %20, i32* %16, align 4
  %22 = getelementptr %array, %array* %a, i32 0, i32 0
  %23 = alloca i32, align 4
  %24 = mul i32 %21, 4
  store i32 %24, i32* %23, align 4
  %25 = load i32, i32* %23, align 4
  %26 = call i8* (i32, ...) @_lfortran_malloc(i32 %25)
  %27 = bitcast i8* %26 to i32*
  store i32* %27, i32** %22, align 8
  %28 = load i32, i32* %n, align 4
  %29 = load i32, i32* %n, align 4
  %30 = mul i32 2, %29
  %31 = load i32, i32* %n, align 4
  %32 = load i32, i32* %n, align 4
  %33 = mul i32 3, %32
  %34 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %34, align 4
  %35 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 true, i1* %35, align 1
  %36 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %37 = alloca i32, align 4
  store i32 2, i32* %37, align 4
  %38 = load i32, i32* %37, align 4
  %39 = alloca %dimension_descriptor, i32 %38, align 8
  store %dimension_descriptor* %39, %dimension_descriptor** %36, align 8
  %40 = load %dimension_descriptor*, %dimension_descriptor** %36, align 8
  %41 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 3
  store i32 1, i32* %42, align 4
  store i32 %28, i32* %43, align 4
  store i32 %30, i32* %44, align 4
  %46 = load i32, i32* %44, align 4
  %47 = load i32, i32* %43, align 4
  %48 = sub i32 %46, %47
  %49 = add i32 %48, 1
  %50 = mul i32 1, %49
  store i32 %49, i32* %45, align 4
  %51 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 1
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 0
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 2
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %51, i32 0, i32 3
  store i32 1, i32* %52, align 4
  store i32 %31, i32* %53, align 4
  store i32 %33, i32* %54, align 4
  %56 = load i32, i32* %54, align 4
  %57 = load i32, i32* %53, align 4
  %58 = sub i32 %56, %57
  %59 = add i32 %58, 1
  %60 = mul i32 %50, %59
  store i32 %59, i32* %55, align 4
  %61 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %62 = alloca i32, align 4
  %63 = mul i32 %60, 4
  store i32 %63, i32* %62, align 4
  %64 = load i32, i32* %62, align 4
  %65 = call i8* (i32, ...) @_lfortran_malloc(i32 %64)
  %66 = bitcast i8* %65 to float*
  store float* %66, float** %61, align 8
  store i32 0, i32* %ierr, align 4
  %67 = alloca %size_arg, align 8
  %68 = getelementptr %array, %array* %a, i32 0, i32 2
  %69 = load %dimension_descriptor*, %dimension_descriptor** %68, align 8
  %70 = getelementptr %size_arg, %size_arg* %67, i32 0, i32 0
  store %dimension_descriptor* %69, %dimension_descriptor** %70, align 8
  %71 = getelementptr %size_arg, %size_arg* %67, i32 0, i32 1
  store i32 22495344, i32* %71, align 4
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %67, i32* %72, i32* %73)
  %75 = load i32, i32* %n, align 4
  %76 = add i32 %75, 1
  %77 = icmp ne i32 %74, %76
  br i1 %77, label %then, label %else

then:                                             ; preds = %.entry
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %.entry
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %78 = alloca %size_arg, align 8
  %79 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %80 = load %dimension_descriptor*, %dimension_descriptor** %79, align 8
  %81 = getelementptr %size_arg, %size_arg* %78, i32 0, i32 0
  store %dimension_descriptor* %80, %dimension_descriptor** %81, align 8
  %82 = getelementptr %size_arg, %size_arg* %78, i32 0, i32 1
  store i32 22495344, i32* %82, align 4
  %83 = alloca i32, align 4
  %84 = alloca i32, align 4
  %85 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %78, i32* %83, i32* %84)
  %86 = load i32, i32* %n, align 4
  %87 = add i32 %86, 1
  %88 = load i32, i32* %n, align 4
  %89 = mul i32 2, %88
  %90 = add i32 %89, 1
  %91 = mul i32 %87, %90
  %92 = icmp ne i32 %85, %91
  br i1 %92, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %93 = alloca %dimension_descriptor*, align 8
  %94 = getelementptr %array, %array* %a, i32 0, i32 2
  %95 = load %dimension_descriptor*, %dimension_descriptor** %94, align 8
  store %dimension_descriptor* %95, %dimension_descriptor** %93, align 8
  %96 = alloca i32, align 4
  store i32 1, i32* %96, align 4
  %97 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %93, i32* %96)
  %98 = sub i32 %97, 1
  store i32 %98, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %ifcont3
  %99 = load i32, i32* %i, align 4
  %100 = add i32 %99, 1
  %101 = alloca %dimension_descriptor*, align 8
  %102 = getelementptr %array, %array* %a, i32 0, i32 2
  %103 = load %dimension_descriptor*, %dimension_descriptor** %102, align 8
  store %dimension_descriptor* %103, %dimension_descriptor** %101, align 8
  %104 = alloca i32, align 4
  store i32 1, i32* %104, align 4
  %105 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %101, i32* %104)
  %106 = icmp sle i32 %100, %105
  br i1 %106, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %107 = load i32, i32* %i, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %i, align 4
  %109 = load i32, i32* %i, align 4
  %110 = getelementptr %array, %array* %a, i32 0, i32 2
  %111 = load %dimension_descriptor*, %dimension_descriptor** %110, align 8
  %112 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %111, i32 0
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 %109, %114
  %116 = mul i32 1, %115
  %117 = add i32 0, %116
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %112, i32 0, i32 3
  %119 = load i32, i32* %118, align 4
  %120 = mul i32 1, %119
  %121 = getelementptr %array, %array* %a, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = getelementptr inbounds i32, i32* %122, i32 %117
  %124 = load i32, i32* %i, align 4
  store i32 %124, i32* %123, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %125 = alloca %dimension_descriptor*, align 8
  %126 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %127 = load %dimension_descriptor*, %dimension_descriptor** %126, align 8
  store %dimension_descriptor* %127, %dimension_descriptor** %125, align 8
  %128 = alloca i32, align 4
  store i32 1, i32* %128, align 4
  %129 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %125, i32* %128)
  %130 = sub i32 %129, 1
  store i32 %130, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.end8, %loop.end
  %131 = load i32, i32* %i, align 4
  %132 = add i32 %131, 1
  %133 = alloca %dimension_descriptor*, align 8
  %134 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %135 = load %dimension_descriptor*, %dimension_descriptor** %134, align 8
  store %dimension_descriptor* %135, %dimension_descriptor** %133, align 8
  %136 = alloca i32, align 4
  store i32 1, i32* %136, align 4
  %137 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %133, i32* %136)
  %138 = icmp sle i32 %132, %137
  br i1 %138, label %loop.body5, label %loop.end9

loop.body5:                                       ; preds = %loop.head4
  %139 = load i32, i32* %i, align 4
  %140 = add i32 %139, 1
  store i32 %140, i32* %i, align 4
  %141 = alloca %dimension_descriptor*, align 8
  %142 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %143 = load %dimension_descriptor*, %dimension_descriptor** %142, align 8
  store %dimension_descriptor* %143, %dimension_descriptor** %141, align 8
  %144 = alloca i32, align 4
  store i32 2, i32* %144, align 4
  %145 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %141, i32* %144)
  %146 = sub i32 %145, 1
  store i32 %146, i32* %j, align 4
  br label %loop.head6

loop.head6:                                       ; preds = %loop.body7, %loop.body5
  %147 = load i32, i32* %j, align 4
  %148 = add i32 %147, 1
  %149 = alloca %dimension_descriptor*, align 8
  %150 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %151 = load %dimension_descriptor*, %dimension_descriptor** %150, align 8
  store %dimension_descriptor* %151, %dimension_descriptor** %149, align 8
  %152 = alloca i32, align 4
  store i32 2, i32* %152, align 4
  %153 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %149, i32* %152)
  %154 = icmp sle i32 %148, %153
  br i1 %154, label %loop.body7, label %loop.end8

loop.body7:                                       ; preds = %loop.head6
  %155 = load i32, i32* %j, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %j, align 4
  %157 = load i32, i32* %i, align 4
  %158 = load i32, i32* %j, align 4
  %159 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %160 = load %dimension_descriptor*, %dimension_descriptor** %159, align 8
  %161 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 0
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = sub i32 %157, %163
  %165 = mul i32 1, %164
  %166 = add i32 0, %165
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = mul i32 1, %168
  %170 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %160, i32 1
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub i32 %158, %172
  %174 = mul i32 %169, %173
  %175 = add i32 %166, %174
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 3
  %177 = load i32, i32* %176, align 4
  %178 = mul i32 %169, %177
  %179 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %180 = load float*, float** %179, align 8
  %181 = getelementptr inbounds float, float* %180, i32 %175
  %182 = load i32, i32* %i, align 4
  %183 = load i32, i32* %j, align 4
  %184 = add i32 %182, %183
  %185 = sitofp i32 %184 to float
  store float %185, float* %181, align 4
  br label %loop.head6

loop.end8:                                        ; preds = %loop.head6
  br label %loop.head4

loop.end9:                                        ; preds = %loop.head4
  %186 = load %array.0, %array.0* %c, align 8
  %187 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %188 = load i1, i1* %187, align 1
  br i1 %188, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  %189 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %190 = load %complex_4*, %complex_4** %189, align 8
  %191 = alloca i8*, align 8
  %192 = bitcast %complex_4* %190 to i8*
  store i8* %192, i8** %191, align 8
  %193 = load i8*, i8** %191, align 8
  call void (i8*, ...) @_lfortran_free(i8* %193)
  %194 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %194, align 1
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %195 = alloca %array, align 8
  %196 = alloca %array.1, align 8
  %197 = alloca %array.0, align 8
  call void @sum(%array* %a, %array.1* %b, %array.0* %c)
  %198 = alloca %dimension_descriptor*, align 8
  %199 = getelementptr %array, %array* %a, i32 0, i32 2
  %200 = load %dimension_descriptor*, %dimension_descriptor** %199, align 8
  store %dimension_descriptor* %200, %dimension_descriptor** %198, align 8
  %201 = alloca i32, align 4
  store i32 1, i32* %201, align 4
  %202 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %198, i32* %201)
  %203 = sub i32 %202, 1
  store i32 %203, i32* %i, align 4
  br label %loop.head13

loop.head13:                                      ; preds = %ifcont17, %ifcont12
  %204 = load i32, i32* %i, align 4
  %205 = add i32 %204, 1
  %206 = alloca %dimension_descriptor*, align 8
  %207 = getelementptr %array, %array* %a, i32 0, i32 2
  %208 = load %dimension_descriptor*, %dimension_descriptor** %207, align 8
  store %dimension_descriptor* %208, %dimension_descriptor** %206, align 8
  %209 = alloca i32, align 4
  store i32 1, i32* %209, align 4
  %210 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %206, i32* %209)
  %211 = icmp sle i32 %205, %210
  br i1 %211, label %loop.body14, label %loop.end18

loop.body14:                                      ; preds = %loop.head13
  %212 = load i32, i32* %i, align 4
  %213 = add i32 %212, 1
  store i32 %213, i32* %i, align 4
  %214 = load i32, i32* %i, align 4
  %215 = getelementptr %array, %array* %a, i32 0, i32 2
  %216 = load %dimension_descriptor*, %dimension_descriptor** %215, align 8
  %217 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %216, i32 0
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 %214, %219
  %221 = mul i32 1, %220
  %222 = add i32 0, %221
  %223 = getelementptr %dimension_descriptor, %dimension_descriptor* %217, i32 0, i32 3
  %224 = load i32, i32* %223, align 4
  %225 = mul i32 1, %224
  %226 = getelementptr %array, %array* %a, i32 0, i32 0
  %227 = load i32*, i32** %226, align 8
  %228 = getelementptr inbounds i32, i32* %227, i32 %222
  %229 = load i32, i32* %228, align 4
  %230 = load i32, i32* %i, align 4
  %231 = icmp ne i32 %229, %230
  br i1 %231, label %then15, label %else16

then15:                                           ; preds = %loop.body14
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont17

else16:                                           ; preds = %loop.body14
  br label %ifcont17

ifcont17:                                         ; preds = %else16, %then15
  br label %loop.head13

loop.end18:                                       ; preds = %loop.head13
  %232 = alloca %dimension_descriptor*, align 8
  %233 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %234 = load %dimension_descriptor*, %dimension_descriptor** %233, align 8
  store %dimension_descriptor* %234, %dimension_descriptor** %232, align 8
  %235 = alloca i32, align 4
  store i32 1, i32* %235, align 4
  %236 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %232, i32* %235)
  %237 = sub i32 %236, 1
  store i32 %237, i32* %i, align 4
  br label %loop.head19

loop.head19:                                      ; preds = %loop.end26, %loop.end18
  %238 = load i32, i32* %i, align 4
  %239 = add i32 %238, 1
  %240 = alloca %dimension_descriptor*, align 8
  %241 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %242 = load %dimension_descriptor*, %dimension_descriptor** %241, align 8
  store %dimension_descriptor* %242, %dimension_descriptor** %240, align 8
  %243 = alloca i32, align 4
  store i32 1, i32* %243, align 4
  %244 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %240, i32* %243)
  %245 = icmp sle i32 %239, %244
  br i1 %245, label %loop.body20, label %loop.end27

loop.body20:                                      ; preds = %loop.head19
  %246 = load i32, i32* %i, align 4
  %247 = add i32 %246, 1
  store i32 %247, i32* %i, align 4
  %248 = alloca %dimension_descriptor*, align 8
  %249 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %250 = load %dimension_descriptor*, %dimension_descriptor** %249, align 8
  store %dimension_descriptor* %250, %dimension_descriptor** %248, align 8
  %251 = alloca i32, align 4
  store i32 2, i32* %251, align 4
  %252 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %248, i32* %251)
  %253 = sub i32 %252, 1
  store i32 %253, i32* %j, align 4
  br label %loop.head21

loop.head21:                                      ; preds = %ifcont25, %loop.body20
  %254 = load i32, i32* %j, align 4
  %255 = add i32 %254, 1
  %256 = alloca %dimension_descriptor*, align 8
  %257 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %258 = load %dimension_descriptor*, %dimension_descriptor** %257, align 8
  store %dimension_descriptor* %258, %dimension_descriptor** %256, align 8
  %259 = alloca i32, align 4
  store i32 2, i32* %259, align 4
  %260 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %256, i32* %259)
  %261 = icmp sle i32 %255, %260
  br i1 %261, label %loop.body22, label %loop.end26

loop.body22:                                      ; preds = %loop.head21
  %262 = load i32, i32* %j, align 4
  %263 = add i32 %262, 1
  store i32 %263, i32* %j, align 4
  %264 = load i32, i32* %i, align 4
  %265 = load i32, i32* %j, align 4
  %266 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %267 = load %dimension_descriptor*, %dimension_descriptor** %266, align 8
  %268 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %267, i32 0
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = sub i32 %264, %270
  %272 = mul i32 1, %271
  %273 = add i32 0, %272
  %274 = getelementptr %dimension_descriptor, %dimension_descriptor* %268, i32 0, i32 3
  %275 = load i32, i32* %274, align 4
  %276 = mul i32 1, %275
  %277 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %267, i32 1
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = sub i32 %265, %279
  %281 = mul i32 %276, %280
  %282 = add i32 %273, %281
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 3
  %284 = load i32, i32* %283, align 4
  %285 = mul i32 %276, %284
  %286 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %287 = load float*, float** %286, align 8
  %288 = getelementptr inbounds float, float* %287, i32 %282
  %289 = load float, float* %288, align 4
  %290 = load i32, i32* %i, align 4
  %291 = load i32, i32* %j, align 4
  %292 = add i32 %290, %291
  %293 = sitofp i32 %292 to float
  %294 = fcmp une float %289, %293
  br i1 %294, label %then23, label %else24

then23:                                           ; preds = %loop.body22
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont25

else24:                                           ; preds = %loop.body22
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %then23
  br label %loop.head21

loop.end26:                                       ; preds = %loop.head21
  br label %loop.head19

loop.end27:                                       ; preds = %loop.head19
  %295 = alloca %dimension_descriptor*, align 8
  %296 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %297 = load %dimension_descriptor*, %dimension_descriptor** %296, align 8
  store %dimension_descriptor* %297, %dimension_descriptor** %295, align 8
  %298 = alloca i32, align 4
  store i32 1, i32* %298, align 4
  %299 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %295, i32* %298)
  %300 = sub i32 %299, 1
  store i32 %300, i32* %i, align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.end38, %loop.end27
  %301 = load i32, i32* %i, align 4
  %302 = add i32 %301, 1
  %303 = alloca %dimension_descriptor*, align 8
  %304 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %305 = load %dimension_descriptor*, %dimension_descriptor** %304, align 8
  store %dimension_descriptor* %305, %dimension_descriptor** %303, align 8
  %306 = alloca i32, align 4
  store i32 1, i32* %306, align 4
  %307 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %303, i32* %306)
  %308 = icmp sle i32 %302, %307
  br i1 %308, label %loop.body29, label %loop.end39

loop.body29:                                      ; preds = %loop.head28
  %309 = load i32, i32* %i, align 4
  %310 = add i32 %309, 1
  store i32 %310, i32* %i, align 4
  %311 = alloca %dimension_descriptor*, align 8
  %312 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %313 = load %dimension_descriptor*, %dimension_descriptor** %312, align 8
  store %dimension_descriptor* %313, %dimension_descriptor** %311, align 8
  %314 = alloca i32, align 4
  store i32 2, i32* %314, align 4
  %315 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %311, i32* %314)
  %316 = sub i32 %315, 1
  store i32 %316, i32* %j, align 4
  br label %loop.head30

loop.head30:                                      ; preds = %loop.end37, %loop.body29
  %317 = load i32, i32* %j, align 4
  %318 = add i32 %317, 1
  %319 = alloca %dimension_descriptor*, align 8
  %320 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %321 = load %dimension_descriptor*, %dimension_descriptor** %320, align 8
  store %dimension_descriptor* %321, %dimension_descriptor** %319, align 8
  %322 = alloca i32, align 4
  store i32 2, i32* %322, align 4
  %323 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %319, i32* %322)
  %324 = icmp sle i32 %318, %323
  br i1 %324, label %loop.body31, label %loop.end38

loop.body31:                                      ; preds = %loop.head30
  %325 = load i32, i32* %j, align 4
  %326 = add i32 %325, 1
  store i32 %326, i32* %j, align 4
  %327 = alloca %dimension_descriptor*, align 8
  %328 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %329 = load %dimension_descriptor*, %dimension_descriptor** %328, align 8
  store %dimension_descriptor* %329, %dimension_descriptor** %327, align 8
  %330 = alloca i32, align 4
  store i32 3, i32* %330, align 4
  %331 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %327, i32* %330)
  %332 = sub i32 %331, 1
  store i32 %332, i32* %k, align 4
  br label %loop.head32

loop.head32:                                      ; preds = %ifcont36, %loop.body31
  %333 = load i32, i32* %k, align 4
  %334 = add i32 %333, 1
  %335 = alloca %dimension_descriptor*, align 8
  %336 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %337 = load %dimension_descriptor*, %dimension_descriptor** %336, align 8
  store %dimension_descriptor* %337, %dimension_descriptor** %335, align 8
  %338 = alloca i32, align 4
  store i32 3, i32* %338, align 4
  %339 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %335, i32* %338)
  %340 = icmp sle i32 %334, %339
  br i1 %340, label %loop.body33, label %loop.end37

loop.body33:                                      ; preds = %loop.head32
  %341 = load i32, i32* %k, align 4
  %342 = add i32 %341, 1
  store i32 %342, i32* %k, align 4
  %343 = load i32, i32* %i, align 4
  %344 = load i32, i32* %j, align 4
  %345 = load i32, i32* %k, align 4
  %346 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %347 = load %dimension_descriptor*, %dimension_descriptor** %346, align 8
  %348 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %347, i32 0
  %349 = getelementptr %dimension_descriptor, %dimension_descriptor* %348, i32 0, i32 1
  %350 = load i32, i32* %349, align 4
  %351 = sub i32 %343, %350
  %352 = mul i32 1, %351
  %353 = add i32 0, %352
  %354 = getelementptr %dimension_descriptor, %dimension_descriptor* %348, i32 0, i32 3
  %355 = load i32, i32* %354, align 4
  %356 = mul i32 1, %355
  %357 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %347, i32 1
  %358 = getelementptr %dimension_descriptor, %dimension_descriptor* %357, i32 0, i32 1
  %359 = load i32, i32* %358, align 4
  %360 = sub i32 %344, %359
  %361 = mul i32 %356, %360
  %362 = add i32 %353, %361
  %363 = getelementptr %dimension_descriptor, %dimension_descriptor* %357, i32 0, i32 3
  %364 = load i32, i32* %363, align 4
  %365 = mul i32 %356, %364
  %366 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %347, i32 2
  %367 = getelementptr %dimension_descriptor, %dimension_descriptor* %366, i32 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = sub i32 %345, %368
  %370 = mul i32 %365, %369
  %371 = add i32 %362, %370
  %372 = getelementptr %dimension_descriptor, %dimension_descriptor* %366, i32 0, i32 3
  %373 = load i32, i32* %372, align 4
  %374 = mul i32 %365, %373
  %375 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %376 = load %complex_4*, %complex_4** %375, align 8
  %377 = getelementptr inbounds %complex_4, %complex_4* %376, i32 %371
  %378 = load %complex_4, %complex_4* %377, align 4
  %379 = load i32, i32* %i, align 4
  %380 = load i32, i32* %j, align 4
  %381 = add i32 %379, %380
  %382 = load i32, i32* %k, align 4
  %383 = add i32 %381, %382
  %384 = sitofp i32 %383 to float
  %385 = alloca %complex_4, align 8
  %386 = getelementptr %complex_4, %complex_4* %385, i32 0, i32 0
  %387 = getelementptr %complex_4, %complex_4* %385, i32 0, i32 1
  store float %384, float* %386, align 4
  store float 0.000000e+00, float* %387, align 4
  %388 = load %complex_4, %complex_4* %385, align 4
  %389 = alloca %complex_4, align 8
  store %complex_4 %378, %complex_4* %389, align 4
  %390 = getelementptr %complex_4, %complex_4* %389, i32 0, i32 0
  %391 = load float, float* %390, align 4
  %392 = alloca %complex_4, align 8
  store %complex_4 %388, %complex_4* %392, align 4
  %393 = getelementptr %complex_4, %complex_4* %392, i32 0, i32 0
  %394 = load float, float* %393, align 4
  %395 = alloca %complex_4, align 8
  store %complex_4 %378, %complex_4* %395, align 4
  %396 = getelementptr %complex_4, %complex_4* %395, i32 0, i32 1
  %397 = load float, float* %396, align 4
  %398 = alloca %complex_4, align 8
  store %complex_4 %388, %complex_4* %398, align 4
  %399 = getelementptr %complex_4, %complex_4* %398, i32 0, i32 1
  %400 = load float, float* %399, align 4
  %401 = fcmp une float %391, %394
  %402 = fcmp une float %397, %400
  %403 = and i1 %401, %402
  br i1 %403, label %then34, label %else35

then34:                                           ; preds = %loop.body33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %loop.body33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  br label %loop.head32

loop.end37:                                       ; preds = %loop.head32
  br label %loop.head30

loop.end38:                                       ; preds = %loop.head30
  br label %loop.head28

loop.end39:                                       ; preds = %loop.head28
  %404 = alloca %array.0, align 8
  %405 = call %complex_4 @reduce_sum(%array.0* %c)
  store %complex_4 %405, %complex_4* %r, align 4
  %406 = load %complex_4, %complex_4* %r, align 4
  %407 = alloca %complex_4, align 8
  %408 = getelementptr %complex_4, %complex_4* %407, i32 0, i32 0
  %409 = getelementptr %complex_4, %complex_4* %407, i32 0, i32 1
  store float 1.143450e+05, float* %408, align 4
  store float 0.000000e+00, float* %409, align 4
  %410 = load %complex_4, %complex_4* %407, align 4
  %411 = alloca %complex_4, align 8
  store %complex_4 %406, %complex_4* %411, align 4
  %412 = getelementptr %complex_4, %complex_4* %411, i32 0, i32 0
  %413 = load float, float* %412, align 4
  %414 = alloca %complex_4, align 8
  store %complex_4 %410, %complex_4* %414, align 4
  %415 = getelementptr %complex_4, %complex_4* %414, i32 0, i32 0
  %416 = load float, float* %415, align 4
  %417 = alloca %complex_4, align 8
  store %complex_4 %406, %complex_4* %417, align 4
  %418 = getelementptr %complex_4, %complex_4* %417, i32 0, i32 1
  %419 = load float, float* %418, align 4
  %420 = alloca %complex_4, align 8
  store %complex_4 %410, %complex_4* %420, align 4
  %421 = getelementptr %complex_4, %complex_4* %420, i32 0, i32 1
  %422 = load float, float* %421, align 4
  %423 = fcmp une float %413, %416
  %424 = fcmp une float %419, %422
  %425 = and i1 %423, %424
  br i1 %425, label %then40, label %else41

then40:                                           ; preds = %loop.end39
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont42

else41:                                           ; preds = %loop.end39
  br label %ifcont42

ifcont42:                                         ; preds = %else41, %then40
  %426 = load %array, %array* %a, align 8
  %427 = getelementptr %array, %array* %a, i32 0, i32 3
  %428 = load i1, i1* %427, align 1
  br i1 %428, label %then43, label %else44

then43:                                           ; preds = %ifcont42
  %429 = getelementptr %array, %array* %a, i32 0, i32 0
  %430 = load i32*, i32** %429, align 8
  %431 = alloca i8*, align 8
  %432 = bitcast i32* %430 to i8*
  store i8* %432, i8** %431, align 8
  %433 = load i8*, i8** %431, align 8
  call void (i8*, ...) @_lfortran_free(i8* %433)
  %434 = getelementptr %array, %array* %a, i32 0, i32 3
  store i1 false, i1* %434, align 1
  br label %ifcont45

else44:                                           ; preds = %ifcont42
  br label %ifcont45

ifcont45:                                         ; preds = %else44, %then43
  %435 = load %array.1, %array.1* %b, align 8
  %436 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  %437 = load i1, i1* %436, align 1
  br i1 %437, label %then46, label %else47

then46:                                           ; preds = %ifcont45
  %438 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %439 = load float*, float** %438, align 8
  %440 = alloca i8*, align 8
  %441 = bitcast float* %439 to i8*
  store i8* %441, i8** %440, align 8
  %442 = load i8*, i8** %440, align 8
  call void (i8*, ...) @_lfortran_free(i8* %442)
  %443 = getelementptr %array.1, %array.1* %b, i32 0, i32 3
  store i1 false, i1* %443, align 1
  br label %ifcont48

else47:                                           ; preds = %ifcont45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %444 = load %array.0, %array.0* %c, align 8
  %445 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  %446 = load i1, i1* %445, align 1
  br i1 %446, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  %447 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %448 = load %complex_4*, %complex_4** %447, align 8
  %449 = alloca i8*, align 8
  %450 = bitcast %complex_4* %448 to i8*
  store i8* %450, i8** %449, align 8
  %451 = load i8*, i8** %449, align 8
  call void (i8*, ...) @_lfortran_free(i8* %451)
  %452 = getelementptr %array.0, %array.0* %c, i32 0, i32 3
  store i1 false, i1* %452, align 1
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
