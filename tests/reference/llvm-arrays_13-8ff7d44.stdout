; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { float*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { %complex_4*, i32, %dimension_descriptor*, i1, i32 }
%complex_4 = type { float, float }
%array.1 = type { i32*, i32, %dimension_descriptor*, i1, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define void @check_real(%array** %r) {
.entry:
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %0 = load %array*, %array** %r, align 8
  %1 = getelementptr %array, %array* %0, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %2, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 %5, 1
  store i32 %6, i32* %u, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end, %.entry
  %7 = load i32, i32* %u, align 4
  %8 = add i32 %7, 1
  %9 = load %array*, %array** %r, align 8
  %10 = getelementptr %array, %array* %9, i32 0, i32 2
  %11 = load %dimension_descriptor*, %dimension_descriptor** %10, align 8
  %12 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %11, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %12, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp sle i32 %8, %14
  br i1 %15, label %loop.body, label %loop.end3

loop.body:                                        ; preds = %loop.head
  %16 = load i32, i32* %u, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %u, align 4
  %18 = load %array*, %array** %r, align 8
  %19 = getelementptr %array, %array* %18, i32 0, i32 2
  %20 = load %dimension_descriptor*, %dimension_descriptor** %19, align 8
  %21 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %20, i32 1
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %21, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sub i32 %23, 1
  store i32 %24, i32* %v, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %ifcont, %loop.body
  %25 = load i32, i32* %v, align 4
  %26 = add i32 %25, 1
  %27 = load %array*, %array** %r, align 8
  %28 = getelementptr %array, %array* %27, i32 0, i32 2
  %29 = load %dimension_descriptor*, %dimension_descriptor** %28, align 8
  %30 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %29, i32 1
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %30, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp sle i32 %26, %32
  br i1 %33, label %loop.body2, label %loop.end

loop.body2:                                       ; preds = %loop.head1
  %34 = load i32, i32* %v, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %v, align 4
  %36 = load i32, i32* %u, align 4
  %37 = load i32, i32* %v, align 4
  %38 = load %array*, %array** %r, align 8
  %39 = getelementptr %array, %array* %38, i32 0, i32 2
  %40 = load %dimension_descriptor*, %dimension_descriptor** %39, align 8
  %41 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 0
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sub i32 %36, %43
  %45 = mul i32 1, %44
  %46 = add i32 0, %45
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = mul i32 1, %48
  %50 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %40, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = sub i32 %37, %52
  %54 = mul i32 %49, %53
  %55 = add i32 %46, %54
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %50, i32 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = mul i32 %49, %57
  %59 = getelementptr %array, %array* %38, i32 0, i32 0
  %60 = load float*, float** %59, align 8
  %61 = getelementptr inbounds float, float* %60, i32 %55
  %62 = load float, float* %61, align 4
  %63 = load i32, i32* %u, align 4
  %64 = load i32, i32* %v, align 4
  %65 = mul i32 %63, %64
  %66 = sitofp i32 %65 to float
  %67 = fcmp une float %62, %66
  br i1 %67, label %then, label %else

then:                                             ; preds = %loop.body2
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body2
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %loop.head1

loop.end:                                         ; preds = %loop.head1
  br label %loop.head

loop.end3:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end3
  ret void
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %c = alloca %array.0*, align 8
  %cv = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %cv, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.0, %array.0* %cv, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array.0, %array.0* %cv, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 3
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 4, i32* %10, align 4
  %12 = load i32, i32* %10, align 4
  %13 = load i32, i32* %9, align 4
  %14 = sub i32 %12, %13
  %15 = add i32 %14, 1
  store i32 %15, i32* %11, align 4
  %16 = alloca i32, align 4
  store i32 4, i32* %16, align 4
  %17 = getelementptr %array.0, %array.0* %cv, i32 0, i32 0
  %18 = load i32, i32* %16, align 4
  %19 = alloca %complex_4, i32 %18, align 8
  store %complex_4* %19, %complex_4** %17, align 8
  %i = alloca %array.1*, align 8
  %iv = alloca %array.1, align 8
  %20 = getelementptr %array.1, %array.1* %iv, i32 0, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr %array.1, %array.1* %iv, i32 0, i32 2
  %22 = alloca i32, align 4
  store i32 1, i32* %22, align 4
  %23 = load i32, i32* %22, align 4
  %24 = alloca %dimension_descriptor, i32 %23, align 8
  %25 = getelementptr %array.1, %array.1* %iv, i32 0, i32 4
  store i32 1, i32* %25, align 4
  store %dimension_descriptor* %24, %dimension_descriptor** %21, align 8
  %26 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  %27 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %26, i32 0
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 0
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 1
  %30 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 2
  %31 = getelementptr %dimension_descriptor, %dimension_descriptor* %27, i32 0, i32 3
  store i32 1, i32* %28, align 4
  store i32 1, i32* %29, align 4
  store i32 2, i32* %30, align 4
  %32 = load i32, i32* %30, align 4
  %33 = load i32, i32* %29, align 4
  %34 = sub i32 %32, %33
  %35 = add i32 %34, 1
  store i32 %35, i32* %31, align 4
  %36 = alloca i32, align 4
  store i32 2, i32* %36, align 4
  %37 = getelementptr %array.1, %array.1* %iv, i32 0, i32 0
  %38 = load i32, i32* %36, align 4
  %39 = alloca i32, i32 %38, align 4
  store i32* %39, i32** %37, align 8
  %r = alloca %array*, align 8
  %rv = alloca %array, align 8
  %40 = getelementptr %array, %array* %rv, i32 0, i32 1
  store i32 0, i32* %40, align 4
  %41 = getelementptr %array, %array* %rv, i32 0, i32 2
  %42 = alloca i32, align 4
  store i32 2, i32* %42, align 4
  %43 = load i32, i32* %42, align 4
  %44 = alloca %dimension_descriptor, i32 %43, align 8
  %45 = getelementptr %array, %array* %rv, i32 0, i32 4
  store i32 2, i32* %45, align 4
  store %dimension_descriptor* %44, %dimension_descriptor** %41, align 8
  %46 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  %47 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %46, i32 0
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 0
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 1
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 2
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %47, i32 0, i32 3
  store i32 1, i32* %48, align 4
  store i32 1, i32* %49, align 4
  store i32 2, i32* %50, align 4
  %52 = load i32, i32* %50, align 4
  %53 = load i32, i32* %49, align 4
  %54 = sub i32 %52, %53
  %55 = add i32 %54, 1
  store i32 %55, i32* %51, align 4
  %56 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %46, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 0
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 1
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 2
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %56, i32 0, i32 3
  store i32 1, i32* %57, align 4
  store i32 1, i32* %58, align 4
  store i32 3, i32* %59, align 4
  %61 = load i32, i32* %59, align 4
  %62 = load i32, i32* %58, align 4
  %63 = sub i32 %61, %62
  %64 = add i32 %63, 1
  store i32 %64, i32* %60, align 4
  %65 = alloca i32, align 4
  store i32 6, i32* %65, align 4
  %66 = getelementptr %array, %array* %rv, i32 0, i32 0
  %67 = load i32, i32* %65, align 4
  %68 = alloca float, i32 %67, align 4
  store float* %68, float** %66, align 8
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  store %array.1* %iv, %array.1** %i, align 8
  store %array* %rv, %array** %r, align 8
  %69 = load %array.1*, %array.1** %i, align 8
  %70 = getelementptr %array.1, %array.1* %69, i32 0, i32 2
  %71 = load %dimension_descriptor*, %dimension_descriptor** %70, align 8
  %72 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %71, i32 0
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %72, i32 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = sub i32 1, %74
  %76 = mul i32 1, %75
  %77 = add i32 0, %76
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %72, i32 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = mul i32 1, %79
  %81 = getelementptr %array.1, %array.1* %69, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = getelementptr inbounds i32, i32* %82, i32 %77
  store i32 1, i32* %83, align 4
  %84 = load %array.1*, %array.1** %i, align 8
  %85 = getelementptr %array.1, %array.1* %84, i32 0, i32 2
  %86 = load %dimension_descriptor*, %dimension_descriptor** %85, align 8
  %87 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %86, i32 0
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = sub i32 1, %89
  %91 = mul i32 1, %90
  %92 = add i32 0, %91
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %87, i32 0, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = mul i32 1, %94
  %96 = getelementptr %array.1, %array.1* %84, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = getelementptr inbounds i32, i32* %97, i32 %92
  %99 = load i32, i32* %98, align 4
  %100 = icmp ne i32 %99, 1
  br i1 %100, label %then, label %else

then:                                             ; preds = %.entry
  %101 = load %array.1*, %array.1** %i, align 8
  %102 = getelementptr %array.1, %array.1* %101, i32 0, i32 2
  %103 = load %dimension_descriptor*, %dimension_descriptor** %102, align 8
  %104 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %103, i32 0
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sub i32 2, %106
  %108 = mul i32 1, %107
  %109 = add i32 0, %108
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = mul i32 1, %111
  %113 = getelementptr %array.1, %array.1* %101, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = getelementptr inbounds i32, i32* %114, i32 %109
  store i32 3, i32* %115, align 4
  br label %ifcont

else:                                             ; preds = %.entry
  %116 = load %array.1*, %array.1** %i, align 8
  %117 = getelementptr %array.1, %array.1* %116, i32 0, i32 2
  %118 = load %dimension_descriptor*, %dimension_descriptor** %117, align 8
  %119 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %118, i32 0
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = sub i32 2, %121
  %123 = mul i32 1, %122
  %124 = add i32 0, %123
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 3
  %126 = load i32, i32* %125, align 4
  %127 = mul i32 1, %126
  %128 = getelementptr %array.1, %array.1* %116, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = getelementptr inbounds i32, i32* %129, i32 %124
  store i32 7, i32* %130, align 4
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %131 = getelementptr %array.1, %array.1* %iv, i32 0, i32 2
  %132 = load %dimension_descriptor*, %dimension_descriptor** %131, align 8
  %133 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %132, i32 0
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 1, %135
  %137 = mul i32 1, %136
  %138 = add i32 0, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 1, %140
  %142 = getelementptr %array.1, %array.1* %iv, i32 0, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = getelementptr inbounds i32, i32* %143, i32 %138
  %145 = load i32, i32* %144, align 4
  %146 = icmp ne i32 %145, 1
  br i1 %146, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %147 = getelementptr %array.1, %array.1* %iv, i32 0, i32 2
  %148 = load %dimension_descriptor*, %dimension_descriptor** %147, align 8
  %149 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %148, i32 0
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = sub i32 2, %151
  %153 = mul i32 1, %152
  %154 = add i32 0, %153
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %149, i32 0, i32 3
  %156 = load i32, i32* %155, align 4
  %157 = mul i32 1, %156
  %158 = getelementptr %array.1, %array.1* %iv, i32 0, i32 0
  %159 = load i32*, i32** %158, align 8
  %160 = getelementptr inbounds i32, i32* %159, i32 %154
  %161 = load i32, i32* %160, align 4
  %162 = icmp ne i32 %161, 7
  br i1 %162, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %163 = load %array*, %array** %r, align 8
  %164 = getelementptr %array, %array* %163, i32 0, i32 2
  %165 = load %dimension_descriptor*, %dimension_descriptor** %164, align 8
  %166 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %165, i32 0
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = sub i32 %168, 1
  store i32 %169, i32* %u, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end, %ifcont6
  %170 = load i32, i32* %u, align 4
  %171 = add i32 %170, 1
  %172 = load %array*, %array** %r, align 8
  %173 = getelementptr %array, %array* %172, i32 0, i32 2
  %174 = load %dimension_descriptor*, %dimension_descriptor** %173, align 8
  %175 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %174, i32 0
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %175, i32 0, i32 2
  %177 = load i32, i32* %176, align 4
  %178 = icmp sle i32 %171, %177
  br i1 %178, label %loop.body, label %loop.end9

loop.body:                                        ; preds = %loop.head
  %179 = load i32, i32* %u, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %u, align 4
  %181 = load %array*, %array** %r, align 8
  %182 = getelementptr %array, %array* %181, i32 0, i32 2
  %183 = load %dimension_descriptor*, %dimension_descriptor** %182, align 8
  %184 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %183, i32 1
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 %186, 1
  store i32 %187, i32* %v, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %loop.body
  %188 = load i32, i32* %v, align 4
  %189 = add i32 %188, 1
  %190 = load %array*, %array** %r, align 8
  %191 = getelementptr %array, %array* %190, i32 0, i32 2
  %192 = load %dimension_descriptor*, %dimension_descriptor** %191, align 8
  %193 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %192, i32 1
  %194 = getelementptr %dimension_descriptor, %dimension_descriptor* %193, i32 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = icmp sle i32 %189, %195
  br i1 %196, label %loop.body8, label %loop.end

loop.body8:                                       ; preds = %loop.head7
  %197 = load i32, i32* %v, align 4
  %198 = add i32 %197, 1
  store i32 %198, i32* %v, align 4
  %199 = load i32, i32* %u, align 4
  %200 = load i32, i32* %v, align 4
  %201 = getelementptr %array, %array* %rv, i32 0, i32 2
  %202 = load %dimension_descriptor*, %dimension_descriptor** %201, align 8
  %203 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %202, i32 0
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %203, i32 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = sub i32 %199, %205
  %207 = mul i32 1, %206
  %208 = add i32 0, %207
  %209 = getelementptr %dimension_descriptor, %dimension_descriptor* %203, i32 0, i32 3
  %210 = load i32, i32* %209, align 4
  %211 = mul i32 1, %210
  %212 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %202, i32 1
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = sub i32 %200, %214
  %216 = mul i32 %211, %215
  %217 = add i32 %208, %216
  %218 = getelementptr %dimension_descriptor, %dimension_descriptor* %212, i32 0, i32 3
  %219 = load i32, i32* %218, align 4
  %220 = mul i32 %211, %219
  %221 = getelementptr %array, %array* %rv, i32 0, i32 0
  %222 = load float*, float** %221, align 8
  %223 = getelementptr inbounds float, float* %222, i32 %217
  %224 = load i32, i32* %u, align 4
  %225 = load i32, i32* %v, align 4
  %226 = mul i32 %224, %225
  %227 = sitofp i32 %226 to float
  store float %227, float* %223, align 4
  br label %loop.head7

loop.end:                                         ; preds = %loop.head7
  br label %loop.head

loop.end9:                                        ; preds = %loop.head
  call void @check_real(%array** %r)
  ret i32 0
}
