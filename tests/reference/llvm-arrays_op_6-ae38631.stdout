; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { float*, i32, %dimension_descriptor*, i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define void @asquare(%array.0* %a, %array.0* %b, %array.0* %c, %array.0* %d) {
.entry:
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %"2_t" = alloca i32, align 4
  %"2_v" = alloca i32, align 4
  %"3_t" = alloca i32, align 4
  %"3_v" = alloca i32, align 4
  %"~0_bin_op_res" = alloca %array.0, align 8
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = alloca %dimension_descriptor*, align 8
  %6 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %7 = load %dimension_descriptor*, %dimension_descriptor** %6, align 8
  store %dimension_descriptor* %7, %dimension_descriptor** %5, align 8
  %8 = alloca i32, align 4
  store i32 1, i32* %8, align 4
  %9 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %5, i32* %8)
  %10 = alloca %dimension_descriptor*, align 8
  %11 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %12 = load %dimension_descriptor*, %dimension_descriptor** %11, align 8
  store %dimension_descriptor* %12, %dimension_descriptor** %10, align 8
  %13 = alloca i32, align 4
  store i32 2, i32* %13, align 4
  %14 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %10, i32* %13)
  %15 = alloca %dimension_descriptor*, align 8
  %16 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %17 = load %dimension_descriptor*, %dimension_descriptor** %16, align 8
  store %dimension_descriptor* %17, %dimension_descriptor** %15, align 8
  %18 = alloca i32, align 4
  store i32 2, i32* %18, align 4
  %19 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %15, i32* %18)
  %20 = alloca %dimension_descriptor*, align 8
  %21 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %22 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  store %dimension_descriptor* %22, %dimension_descriptor** %20, align 8
  %23 = alloca i32, align 4
  store i32 3, i32* %23, align 4
  %24 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %20, i32* %23)
  %25 = alloca %dimension_descriptor*, align 8
  %26 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %27 = load %dimension_descriptor*, %dimension_descriptor** %26, align 8
  store %dimension_descriptor* %27, %dimension_descriptor** %25, align 8
  %28 = alloca i32, align 4
  store i32 3, i32* %28, align 4
  %29 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %25, i32* %28)
  %30 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %32 = alloca i32, align 4
  store i32 3, i32* %32, align 4
  %33 = load i32, i32* %32, align 4
  %34 = alloca %dimension_descriptor, i32 %33, align 8
  store %dimension_descriptor* %34, %dimension_descriptor** %31, align 8
  %35 = load %dimension_descriptor*, %dimension_descriptor** %31, align 8
  %36 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 0
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 0
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 1
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 2
  %40 = getelementptr %dimension_descriptor, %dimension_descriptor* %36, i32 0, i32 3
  store i32 1, i32* %37, align 4
  store i32 %4, i32* %38, align 4
  store i32 %9, i32* %39, align 4
  %41 = load i32, i32* %39, align 4
  %42 = load i32, i32* %38, align 4
  %43 = sub i32 %41, %42
  %44 = add i32 %43, 1
  store i32 %44, i32* %40, align 4
  %45 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 0
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 1
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 2
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %45, i32 0, i32 3
  store i32 1, i32* %46, align 4
  store i32 %14, i32* %47, align 4
  store i32 %19, i32* %48, align 4
  %50 = load i32, i32* %48, align 4
  %51 = load i32, i32* %47, align 4
  %52 = sub i32 %50, %51
  %53 = add i32 %52, 1
  store i32 %53, i32* %49, align 4
  %54 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %35, i32 2
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 0
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 1
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 2
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 3
  store i32 1, i32* %55, align 4
  store i32 %24, i32* %56, align 4
  store i32 %29, i32* %57, align 4
  %59 = load i32, i32* %57, align 4
  %60 = load i32, i32* %56, align 4
  %61 = sub i32 %59, %60
  %62 = add i32 %61, 1
  store i32 %62, i32* %58, align 4
  %63 = alloca i32, align 4
  %64 = sub i32 %9, %4
  %65 = add i32 %64, 1
  %66 = mul i32 1, %65
  %67 = sub i32 %19, %14
  %68 = add i32 %67, 1
  %69 = mul i32 %66, %68
  %70 = sub i32 %29, %24
  %71 = add i32 %70, 1
  %72 = mul i32 %69, %71
  store i32 %72, i32* %63, align 4
  %73 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 0
  %74 = load i32, i32* %63, align 4
  %75 = alloca float, i32 %74, align 4
  store float* %75, float** %73, align 8
  store i32 1, i32* %"1_v", align 4
  %76 = alloca %dimension_descriptor*, align 8
  %77 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %78 = load %dimension_descriptor*, %dimension_descriptor** %77, align 8
  store %dimension_descriptor* %78, %dimension_descriptor** %76, align 8
  %79 = alloca i32, align 4
  store i32 1, i32* %79, align 4
  %80 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %76, i32* %79)
  %81 = sub i32 %80, 1
  store i32 %81, i32* %"1_t", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %82 = load i32, i32* %"1_t", align 4
  %83 = add i32 %82, 1
  %84 = alloca %dimension_descriptor*, align 8
  %85 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %86 = load %dimension_descriptor*, %dimension_descriptor** %85, align 8
  store %dimension_descriptor* %86, %dimension_descriptor** %84, align 8
  %87 = alloca i32, align 4
  store i32 1, i32* %87, align 4
  %88 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %84, i32* %87)
  %89 = icmp sle i32 %83, %88
  br i1 %89, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %90 = load i32, i32* %"1_t", align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %92 = alloca %dimension_descriptor*, align 8
  %93 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %94 = load %dimension_descriptor*, %dimension_descriptor** %93, align 8
  store %dimension_descriptor* %94, %dimension_descriptor** %92, align 8
  %95 = alloca i32, align 4
  store i32 2, i32* %95, align 4
  %96 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %92, i32* %95)
  %97 = sub i32 %96, 1
  store i32 %97, i32* %"2_t", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %98 = load i32, i32* %"2_t", align 4
  %99 = add i32 %98, 1
  %100 = alloca %dimension_descriptor*, align 8
  %101 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %102 = load %dimension_descriptor*, %dimension_descriptor** %101, align 8
  store %dimension_descriptor* %102, %dimension_descriptor** %100, align 8
  %103 = alloca i32, align 4
  store i32 2, i32* %103, align 4
  %104 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %100, i32* %103)
  %105 = icmp sle i32 %99, %104
  br i1 %105, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %106 = load i32, i32* %"2_t", align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %108 = alloca %dimension_descriptor*, align 8
  %109 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %110 = load %dimension_descriptor*, %dimension_descriptor** %109, align 8
  store %dimension_descriptor* %110, %dimension_descriptor** %108, align 8
  %111 = alloca i32, align 4
  store i32 3, i32* %111, align 4
  %112 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %108, i32* %111)
  %113 = sub i32 %112, 1
  store i32 %113, i32* %"3_t", align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %114 = load i32, i32* %"3_t", align 4
  %115 = add i32 %114, 1
  %116 = alloca %dimension_descriptor*, align 8
  %117 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %118 = load %dimension_descriptor*, %dimension_descriptor** %117, align 8
  store %dimension_descriptor* %118, %dimension_descriptor** %116, align 8
  %119 = alloca i32, align 4
  store i32 3, i32* %119, align 4
  %120 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %116, i32* %119)
  %121 = icmp sle i32 %115, %120
  br i1 %121, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %122 = load i32, i32* %"3_t", align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %"3_t", align 4
  %124 = load i32, i32* %"1_t", align 4
  %125 = load i32, i32* %"2_t", align 4
  %126 = load i32, i32* %"3_t", align 4
  %127 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %128 = load %dimension_descriptor*, %dimension_descriptor** %127, align 8
  %129 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %128, i32 0
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %129, i32 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = sub i32 %124, %131
  %133 = mul i32 1, %132
  %134 = add i32 0, %133
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %129, i32 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = mul i32 1, %136
  %138 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %128, i32 1
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = sub i32 %125, %140
  %142 = mul i32 %137, %141
  %143 = add i32 %134, %142
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = mul i32 %137, %145
  %147 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %128, i32 2
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 %126, %149
  %151 = mul i32 %146, %150
  %152 = add i32 %143, %151
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = mul i32 %146, %154
  %156 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 0
  %157 = load float*, float** %156, align 8
  %158 = getelementptr inbounds float, float* %157, i32 %152
  %159 = load i32, i32* %"1_v", align 4
  %160 = load i32, i32* %"2_v", align 4
  %161 = load i32, i32* %"3_v", align 4
  %162 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %163 = load %dimension_descriptor*, %dimension_descriptor** %162, align 8
  %164 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %163, i32 0
  %165 = getelementptr %dimension_descriptor, %dimension_descriptor* %164, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = sub i32 %159, %166
  %168 = mul i32 1, %167
  %169 = add i32 0, %168
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %164, i32 0, i32 3
  %171 = load i32, i32* %170, align 4
  %172 = mul i32 1, %171
  %173 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %163, i32 1
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %173, i32 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = sub i32 %160, %175
  %177 = mul i32 %172, %176
  %178 = add i32 %169, %177
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %173, i32 0, i32 3
  %180 = load i32, i32* %179, align 4
  %181 = mul i32 %172, %180
  %182 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %163, i32 2
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = sub i32 %161, %184
  %186 = mul i32 %181, %185
  %187 = add i32 %178, %186
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 3
  %189 = load i32, i32* %188, align 4
  %190 = mul i32 %181, %189
  %191 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %192 = load float*, float** %191, align 8
  %193 = getelementptr inbounds float, float* %192, i32 %187
  %194 = load float, float* %193, align 4
  %195 = load i32, i32* %"1_v", align 4
  %196 = load i32, i32* %"2_v", align 4
  %197 = load i32, i32* %"3_v", align 4
  %198 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %199 = load %dimension_descriptor*, %dimension_descriptor** %198, align 8
  %200 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = sub i32 %195, %202
  %204 = mul i32 1, %203
  %205 = add i32 0, %204
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  %207 = load i32, i32* %206, align 4
  %208 = mul i32 1, %207
  %209 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 1
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %196, %211
  %213 = mul i32 %208, %212
  %214 = add i32 %205, %213
  %215 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = mul i32 %208, %216
  %218 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %199, i32 2
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 %197, %220
  %222 = mul i32 %217, %221
  %223 = add i32 %214, %222
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = mul i32 %217, %225
  %227 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %228 = load float*, float** %227, align 8
  %229 = getelementptr inbounds float, float* %228, i32 %223
  %230 = load float, float* %229, align 4
  %231 = fadd float %194, %230
  store float %231, float* %158, align 4
  %232 = load i32, i32* %"3_v", align 4
  %233 = add i32 %232, 1
  store i32 %233, i32* %"3_v", align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  %234 = load i32, i32* %"2_v", align 4
  %235 = add i32 %234, 1
  store i32 %235, i32* %"2_v", align 4
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  %236 = load i32, i32* %"1_v", align 4
  %237 = add i32 %236, 1
  store i32 %237, i32* %"1_v", align 4
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  store i32 1, i32* %"1_v", align 4
  %238 = alloca %dimension_descriptor*, align 8
  %239 = getelementptr %array.0, %array.0* %d, i32 0, i32 2
  %240 = load %dimension_descriptor*, %dimension_descriptor** %239, align 8
  store %dimension_descriptor* %240, %dimension_descriptor** %238, align 8
  %241 = alloca i32, align 4
  store i32 1, i32* %241, align 4
  %242 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %238, i32* %241)
  %243 = sub i32 %242, 1
  store i32 %243, i32* %"1_t", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.end14, %loop.end6
  %244 = load i32, i32* %"1_t", align 4
  %245 = add i32 %244, 1
  %246 = alloca %dimension_descriptor*, align 8
  %247 = getelementptr %array.0, %array.0* %d, i32 0, i32 2
  %248 = load %dimension_descriptor*, %dimension_descriptor** %247, align 8
  store %dimension_descriptor* %248, %dimension_descriptor** %246, align 8
  %249 = alloca i32, align 4
  store i32 1, i32* %249, align 4
  %250 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %246, i32* %249)
  %251 = icmp sle i32 %245, %250
  br i1 %251, label %loop.body8, label %loop.end15

loop.body8:                                       ; preds = %loop.head7
  %252 = load i32, i32* %"1_t", align 4
  %253 = add i32 %252, 1
  store i32 %253, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %254 = alloca %dimension_descriptor*, align 8
  %255 = getelementptr %array.0, %array.0* %d, i32 0, i32 2
  %256 = load %dimension_descriptor*, %dimension_descriptor** %255, align 8
  store %dimension_descriptor* %256, %dimension_descriptor** %254, align 8
  %257 = alloca i32, align 4
  store i32 2, i32* %257, align 4
  %258 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %254, i32* %257)
  %259 = sub i32 %258, 1
  store i32 %259, i32* %"2_t", align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.end13, %loop.body8
  %260 = load i32, i32* %"2_t", align 4
  %261 = add i32 %260, 1
  %262 = alloca %dimension_descriptor*, align 8
  %263 = getelementptr %array.0, %array.0* %d, i32 0, i32 2
  %264 = load %dimension_descriptor*, %dimension_descriptor** %263, align 8
  store %dimension_descriptor* %264, %dimension_descriptor** %262, align 8
  %265 = alloca i32, align 4
  store i32 2, i32* %265, align 4
  %266 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %262, i32* %265)
  %267 = icmp sle i32 %261, %266
  br i1 %267, label %loop.body10, label %loop.end14

loop.body10:                                      ; preds = %loop.head9
  %268 = load i32, i32* %"2_t", align 4
  %269 = add i32 %268, 1
  store i32 %269, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %270 = alloca %dimension_descriptor*, align 8
  %271 = getelementptr %array.0, %array.0* %d, i32 0, i32 2
  %272 = load %dimension_descriptor*, %dimension_descriptor** %271, align 8
  store %dimension_descriptor* %272, %dimension_descriptor** %270, align 8
  %273 = alloca i32, align 4
  store i32 3, i32* %273, align 4
  %274 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %270, i32* %273)
  %275 = sub i32 %274, 1
  store i32 %275, i32* %"3_t", align 4
  br label %loop.head11

loop.head11:                                      ; preds = %loop.body12, %loop.body10
  %276 = load i32, i32* %"3_t", align 4
  %277 = add i32 %276, 1
  %278 = alloca %dimension_descriptor*, align 8
  %279 = getelementptr %array.0, %array.0* %d, i32 0, i32 2
  %280 = load %dimension_descriptor*, %dimension_descriptor** %279, align 8
  store %dimension_descriptor* %280, %dimension_descriptor** %278, align 8
  %281 = alloca i32, align 4
  store i32 3, i32* %281, align 4
  %282 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %278, i32* %281)
  %283 = icmp sle i32 %277, %282
  br i1 %283, label %loop.body12, label %loop.end13

loop.body12:                                      ; preds = %loop.head11
  %284 = load i32, i32* %"3_t", align 4
  %285 = add i32 %284, 1
  store i32 %285, i32* %"3_t", align 4
  %286 = load i32, i32* %"1_t", align 4
  %287 = load i32, i32* %"2_t", align 4
  %288 = load i32, i32* %"3_t", align 4
  %289 = getelementptr %array.0, %array.0* %d, i32 0, i32 2
  %290 = load %dimension_descriptor*, %dimension_descriptor** %289, align 8
  %291 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %290, i32 0
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = sub i32 %286, %293
  %295 = mul i32 1, %294
  %296 = add i32 0, %295
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = mul i32 1, %298
  %300 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %290, i32 1
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = sub i32 %287, %302
  %304 = mul i32 %299, %303
  %305 = add i32 %296, %304
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 3
  %307 = load i32, i32* %306, align 4
  %308 = mul i32 %299, %307
  %309 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %290, i32 2
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = sub i32 %288, %311
  %313 = mul i32 %308, %312
  %314 = add i32 %305, %313
  %315 = getelementptr %dimension_descriptor, %dimension_descriptor* %309, i32 0, i32 3
  %316 = load i32, i32* %315, align 4
  %317 = mul i32 %308, %316
  %318 = getelementptr %array.0, %array.0* %d, i32 0, i32 0
  %319 = load float*, float** %318, align 8
  %320 = getelementptr inbounds float, float* %319, i32 %314
  %321 = load i32, i32* %"1_v", align 4
  %322 = load i32, i32* %"2_v", align 4
  %323 = load i32, i32* %"3_v", align 4
  %324 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %325 = load %dimension_descriptor*, %dimension_descriptor** %324, align 8
  %326 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %325, i32 0
  %327 = getelementptr %dimension_descriptor, %dimension_descriptor* %326, i32 0, i32 1
  %328 = load i32, i32* %327, align 4
  %329 = sub i32 %321, %328
  %330 = mul i32 1, %329
  %331 = add i32 0, %330
  %332 = getelementptr %dimension_descriptor, %dimension_descriptor* %326, i32 0, i32 3
  %333 = load i32, i32* %332, align 4
  %334 = mul i32 1, %333
  %335 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %325, i32 1
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = sub i32 %322, %337
  %339 = mul i32 %334, %338
  %340 = add i32 %331, %339
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 3
  %342 = load i32, i32* %341, align 4
  %343 = mul i32 %334, %342
  %344 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %325, i32 2
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = sub i32 %323, %346
  %348 = mul i32 %343, %347
  %349 = add i32 %340, %348
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 3
  %351 = load i32, i32* %350, align 4
  %352 = mul i32 %343, %351
  %353 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 0
  %354 = load float*, float** %353, align 8
  %355 = getelementptr inbounds float, float* %354, i32 %349
  %356 = load float, float* %355, align 4
  %357 = load i32, i32* %"1_v", align 4
  %358 = load i32, i32* %"2_v", align 4
  %359 = load i32, i32* %"3_v", align 4
  %360 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %361 = load %dimension_descriptor*, %dimension_descriptor** %360, align 8
  %362 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %361, i32 0
  %363 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 1
  %364 = load i32, i32* %363, align 4
  %365 = sub i32 %357, %364
  %366 = mul i32 1, %365
  %367 = add i32 0, %366
  %368 = getelementptr %dimension_descriptor, %dimension_descriptor* %362, i32 0, i32 3
  %369 = load i32, i32* %368, align 4
  %370 = mul i32 1, %369
  %371 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %361, i32 1
  %372 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 1
  %373 = load i32, i32* %372, align 4
  %374 = sub i32 %358, %373
  %375 = mul i32 %370, %374
  %376 = add i32 %367, %375
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 3
  %378 = load i32, i32* %377, align 4
  %379 = mul i32 %370, %378
  %380 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %361, i32 2
  %381 = getelementptr %dimension_descriptor, %dimension_descriptor* %380, i32 0, i32 1
  %382 = load i32, i32* %381, align 4
  %383 = sub i32 %359, %382
  %384 = mul i32 %379, %383
  %385 = add i32 %376, %384
  %386 = getelementptr %dimension_descriptor, %dimension_descriptor* %380, i32 0, i32 3
  %387 = load i32, i32* %386, align 4
  %388 = mul i32 %379, %387
  %389 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %390 = load float*, float** %389, align 8
  %391 = getelementptr inbounds float, float* %390, i32 %385
  %392 = load float, float* %391, align 4
  %393 = fadd float %356, %392
  store float %393, float* %320, align 4
  %394 = load i32, i32* %"3_v", align 4
  %395 = add i32 %394, 1
  store i32 %395, i32* %"3_v", align 4
  br label %loop.head11

loop.end13:                                       ; preds = %loop.head11
  %396 = load i32, i32* %"2_v", align 4
  %397 = add i32 %396, 1
  store i32 %397, i32* %"2_v", align 4
  br label %loop.head9

loop.end14:                                       ; preds = %loop.head9
  %398 = load i32, i32* %"1_v", align 4
  %399 = add i32 %398, 1
  store i32 %399, i32* %"1_v", align 4
  br label %loop.head7

loop.end15:                                       ; preds = %loop.head7
  br label %return

return:                                           ; preds = %loop.end15
  ret void
}

define void @check(%array.0* %c) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %2 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %10 = load %dimension_descriptor*, %dimension_descriptor** %9, align 8
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %18 = load %dimension_descriptor*, %dimension_descriptor** %17, align 8
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %26 = load %dimension_descriptor*, %dimension_descriptor** %25, align 8
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %34 = load %dimension_descriptor*, %dimension_descriptor** %33, align 8
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %42 = load %dimension_descriptor*, %dimension_descriptor** %41, align 8
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %j, align 4
  %50 = load i32, i32* %k, align 4
  %51 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %52 = load %dimension_descriptor*, %dimension_descriptor** %51, align 8
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 0
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sub i32 %48, %55
  %57 = mul i32 1, %56
  %58 = add i32 0, %57
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = mul i32 1, %60
  %62 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 1
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sub i32 %49, %64
  %66 = mul i32 %61, %65
  %67 = add i32 %58, %66
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %62, i32 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = mul i32 %61, %69
  %71 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = sub i32 %50, %73
  %75 = mul i32 %70, %74
  %76 = add i32 %67, %75
  %77 = getelementptr %dimension_descriptor, %dimension_descriptor* %71, i32 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = mul i32 %70, %78
  %80 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %81 = load float*, float** %80, align 8
  %82 = getelementptr inbounds float, float* %81, i32 %76
  %83 = load float, float* %82, align 4
  %84 = load i32, i32* %i, align 4
  %85 = load i32, i32* %j, align 4
  %86 = add i32 %84, %85
  %87 = load i32, i32* %k, align 4
  %88 = add i32 %86, %87
  %89 = sitofp i32 %88 to float
  %90 = call float @llvm.pow.f32(float %89, float 2.000000e+00)
  %91 = fptosi float %90 to i32
  %92 = sitofp i32 %91 to float
  %93 = fcmp une float %83, %92
  br i1 %93, label %then, label %else

then:                                             ; preds = %loop.body4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.body4
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end6
  ret void
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.pow.f32(float, float) #0

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

define i32 @main() {
.entry:
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 3, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %5 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %6 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 0
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 1
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 2
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 3
  store i32 1, i32* %7, align 4
  store i32 1, i32* %8, align 4
  store i32 2, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %8, align 4
  %13 = sub i32 %11, %12
  %14 = add i32 %13, 1
  store i32 %14, i32* %10, align 4
  %15 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 0
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 1
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 2
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 3
  store i32 1, i32* %16, align 4
  store i32 1, i32* %17, align 4
  store i32 2, i32* %18, align 4
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %17, align 4
  %22 = sub i32 %20, %21
  %23 = add i32 %22, 1
  store i32 %23, i32* %19, align 4
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 2
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 2, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  store i32 %32, i32* %28, align 4
  %33 = alloca i32, align 4
  store i32 8, i32* %33, align 4
  %34 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %35 = load i32, i32* %33, align 4
  %36 = alloca float, i32 %35, align 4
  store float* %36, float** %34, align 8
  %b = alloca %array.0, align 8
  %37 = getelementptr %array.0, %array.0* %b, i32 0, i32 1
  store i32 0, i32* %37, align 4
  %38 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %39 = alloca i32, align 4
  store i32 3, i32* %39, align 4
  %40 = load i32, i32* %39, align 4
  %41 = alloca %dimension_descriptor, i32 %40, align 8
  store %dimension_descriptor* %41, %dimension_descriptor** %38, align 8
  %42 = load %dimension_descriptor*, %dimension_descriptor** %38, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 3
  store i32 1, i32* %44, align 4
  store i32 1, i32* %45, align 4
  store i32 2, i32* %46, align 4
  %48 = load i32, i32* %46, align 4
  %49 = load i32, i32* %45, align 4
  %50 = sub i32 %48, %49
  %51 = add i32 %50, 1
  store i32 %51, i32* %47, align 4
  %52 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 1
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 0
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 1
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 2
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 3
  store i32 1, i32* %53, align 4
  store i32 1, i32* %54, align 4
  store i32 2, i32* %55, align 4
  %57 = load i32, i32* %55, align 4
  %58 = load i32, i32* %54, align 4
  %59 = sub i32 %57, %58
  %60 = add i32 %59, 1
  store i32 %60, i32* %56, align 4
  %61 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 2
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 0
  %63 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 2
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  store i32 1, i32* %62, align 4
  store i32 1, i32* %63, align 4
  store i32 2, i32* %64, align 4
  %66 = load i32, i32* %64, align 4
  %67 = load i32, i32* %63, align 4
  %68 = sub i32 %66, %67
  %69 = add i32 %68, 1
  store i32 %69, i32* %65, align 4
  %70 = alloca i32, align 4
  store i32 8, i32* %70, align 4
  %71 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %72 = load i32, i32* %70, align 4
  %73 = alloca float, i32 %72, align 4
  store float* %73, float** %71, align 8
  %c = alloca %array.0, align 8
  %74 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %74, align 4
  %75 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %76 = alloca i32, align 4
  store i32 3, i32* %76, align 4
  %77 = load i32, i32* %76, align 4
  %78 = alloca %dimension_descriptor, i32 %77, align 8
  store %dimension_descriptor* %78, %dimension_descriptor** %75, align 8
  %79 = load %dimension_descriptor*, %dimension_descriptor** %75, align 8
  %80 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %79, i32 0
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 0
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 1
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 2
  %84 = getelementptr %dimension_descriptor, %dimension_descriptor* %80, i32 0, i32 3
  store i32 1, i32* %81, align 4
  store i32 1, i32* %82, align 4
  store i32 2, i32* %83, align 4
  %85 = load i32, i32* %83, align 4
  %86 = load i32, i32* %82, align 4
  %87 = sub i32 %85, %86
  %88 = add i32 %87, 1
  store i32 %88, i32* %84, align 4
  %89 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %79, i32 1
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 0
  %91 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 1
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 2
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 3
  store i32 1, i32* %90, align 4
  store i32 1, i32* %91, align 4
  store i32 2, i32* %92, align 4
  %94 = load i32, i32* %92, align 4
  %95 = load i32, i32* %91, align 4
  %96 = sub i32 %94, %95
  %97 = add i32 %96, 1
  store i32 %97, i32* %93, align 4
  %98 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %79, i32 2
  %99 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 0
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 1
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 2
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %98, i32 0, i32 3
  store i32 1, i32* %99, align 4
  store i32 1, i32* %100, align 4
  store i32 2, i32* %101, align 4
  %103 = load i32, i32* %101, align 4
  %104 = load i32, i32* %100, align 4
  %105 = sub i32 %103, %104
  %106 = add i32 %105, 1
  store i32 %106, i32* %102, align 4
  %107 = alloca i32, align 4
  store i32 8, i32* %107, align 4
  %108 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %109 = load i32, i32* %107, align 4
  %110 = alloca float, i32 %109, align 4
  store float* %110, float** %108, align 8
  %d = alloca %array.0, align 8
  %111 = getelementptr %array.0, %array.0* %d, i32 0, i32 1
  store i32 0, i32* %111, align 4
  %112 = getelementptr %array.0, %array.0* %d, i32 0, i32 2
  %113 = alloca i32, align 4
  store i32 3, i32* %113, align 4
  %114 = load i32, i32* %113, align 4
  %115 = alloca %dimension_descriptor, i32 %114, align 8
  store %dimension_descriptor* %115, %dimension_descriptor** %112, align 8
  %116 = load %dimension_descriptor*, %dimension_descriptor** %112, align 8
  %117 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 0
  %118 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 1
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 2
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %117, i32 0, i32 3
  store i32 1, i32* %118, align 4
  store i32 1, i32* %119, align 4
  store i32 2, i32* %120, align 4
  %122 = load i32, i32* %120, align 4
  %123 = load i32, i32* %119, align 4
  %124 = sub i32 %122, %123
  %125 = add i32 %124, 1
  store i32 %125, i32* %121, align 4
  %126 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 1
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 0
  %128 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 1
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 2
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 3
  store i32 1, i32* %127, align 4
  store i32 1, i32* %128, align 4
  store i32 2, i32* %129, align 4
  %131 = load i32, i32* %129, align 4
  %132 = load i32, i32* %128, align 4
  %133 = sub i32 %131, %132
  %134 = add i32 %133, 1
  store i32 %134, i32* %130, align 4
  %135 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %116, i32 2
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %135, i32 0, i32 0
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %135, i32 0, i32 1
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %135, i32 0, i32 2
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %135, i32 0, i32 3
  store i32 1, i32* %136, align 4
  store i32 1, i32* %137, align 4
  store i32 2, i32* %138, align 4
  %140 = load i32, i32* %138, align 4
  %141 = load i32, i32* %137, align 4
  %142 = sub i32 %140, %141
  %143 = add i32 %142, 1
  store i32 %143, i32* %139, align 4
  %144 = alloca i32, align 4
  store i32 8, i32* %144, align 4
  %145 = getelementptr %array.0, %array.0* %d, i32 0, i32 0
  %146 = load i32, i32* %144, align 4
  %147 = alloca float, i32 %146, align 4
  store float* %147, float** %145, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %148 = load i32, i32* %i, align 4
  %149 = add i32 %148, 1
  %150 = icmp sle i32 %149, 2
  br i1 %150, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %151 = load i32, i32* %i, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %153 = load i32, i32* %j, align 4
  %154 = add i32 %153, 1
  %155 = icmp sle i32 %154, 2
  br i1 %155, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %156 = load i32, i32* %j, align 4
  %157 = add i32 %156, 1
  store i32 %157, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %158 = load i32, i32* %k, align 4
  %159 = add i32 %158, 1
  %160 = icmp sle i32 %159, 2
  br i1 %160, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %161 = load i32, i32* %k, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %k, align 4
  %163 = load i32, i32* %i, align 4
  %164 = load i32, i32* %j, align 4
  %165 = load i32, i32* %k, align 4
  %166 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %167 = load %dimension_descriptor*, %dimension_descriptor** %166, align 8
  %168 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %167, i32 0
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = sub i32 %163, %170
  %172 = mul i32 1, %171
  %173 = add i32 0, %172
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = mul i32 1, %175
  %177 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %167, i32 1
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = sub i32 %164, %179
  %181 = mul i32 %176, %180
  %182 = add i32 %173, %181
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %177, i32 0, i32 3
  %184 = load i32, i32* %183, align 4
  %185 = mul i32 %176, %184
  %186 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %167, i32 2
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = sub i32 %165, %188
  %190 = mul i32 %185, %189
  %191 = add i32 %182, %190
  %192 = getelementptr %dimension_descriptor, %dimension_descriptor* %186, i32 0, i32 3
  %193 = load i32, i32* %192, align 4
  %194 = mul i32 %185, %193
  %195 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %196 = load float*, float** %195, align 8
  %197 = getelementptr inbounds float, float* %196, i32 %191
  %198 = load i32, i32* %i, align 4
  %199 = load i32, i32* %i, align 4
  %200 = mul i32 %198, %199
  %201 = load i32, i32* %j, align 4
  %202 = load i32, i32* %j, align 4
  %203 = mul i32 %201, %202
  %204 = add i32 %200, %203
  %205 = load i32, i32* %k, align 4
  %206 = load i32, i32* %k, align 4
  %207 = mul i32 %205, %206
  %208 = add i32 %204, %207
  %209 = sitofp i32 %208 to float
  store float %209, float* %197, align 4
  %210 = load i32, i32* %i, align 4
  %211 = load i32, i32* %j, align 4
  %212 = load i32, i32* %k, align 4
  %213 = getelementptr %array.0, %array.0* %b, i32 0, i32 2
  %214 = load %dimension_descriptor*, %dimension_descriptor** %213, align 8
  %215 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %214, i32 0
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = sub i32 %210, %217
  %219 = mul i32 1, %218
  %220 = add i32 0, %219
  %221 = getelementptr %dimension_descriptor, %dimension_descriptor* %215, i32 0, i32 3
  %222 = load i32, i32* %221, align 4
  %223 = mul i32 1, %222
  %224 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %214, i32 1
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 %211, %226
  %228 = mul i32 %223, %227
  %229 = add i32 %220, %228
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 3
  %231 = load i32, i32* %230, align 4
  %232 = mul i32 %223, %231
  %233 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %214, i32 2
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = sub i32 %212, %235
  %237 = mul i32 %232, %236
  %238 = add i32 %229, %237
  %239 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 3
  %240 = load i32, i32* %239, align 4
  %241 = mul i32 %232, %240
  %242 = getelementptr %array.0, %array.0* %b, i32 0, i32 0
  %243 = load float*, float** %242, align 8
  %244 = getelementptr inbounds float, float* %243, i32 %238
  %245 = load i32, i32* %i, align 4
  %246 = load i32, i32* %j, align 4
  %247 = mul i32 %245, %246
  %248 = load i32, i32* %j, align 4
  %249 = load i32, i32* %k, align 4
  %250 = mul i32 %248, %249
  %251 = add i32 %247, %250
  %252 = load i32, i32* %i, align 4
  %253 = load i32, i32* %k, align 4
  %254 = mul i32 %252, %253
  %255 = add i32 %251, %254
  %256 = mul i32 2, %255
  %257 = sitofp i32 %256 to float
  store float %257, float* %244, align 4
  %258 = load i32, i32* %i, align 4
  %259 = load i32, i32* %j, align 4
  %260 = load i32, i32* %k, align 4
  %261 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %262 = load %dimension_descriptor*, %dimension_descriptor** %261, align 8
  %263 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %262, i32 0
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = sub i32 %258, %265
  %267 = mul i32 1, %266
  %268 = add i32 0, %267
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = mul i32 1, %270
  %272 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %262, i32 1
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = sub i32 %259, %274
  %276 = mul i32 %271, %275
  %277 = add i32 %268, %276
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 3
  %279 = load i32, i32* %278, align 4
  %280 = mul i32 %271, %279
  %281 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %262, i32 2
  %282 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 1
  %283 = load i32, i32* %282, align 4
  %284 = sub i32 %260, %283
  %285 = mul i32 %280, %284
  %286 = add i32 %277, %285
  %287 = getelementptr %dimension_descriptor, %dimension_descriptor* %281, i32 0, i32 3
  %288 = load i32, i32* %287, align 4
  %289 = mul i32 %280, %288
  %290 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %291 = load float*, float** %290, align 8
  %292 = getelementptr inbounds float, float* %291, i32 %286
  store float 0.000000e+00, float* %292, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %293 = alloca %array.0, align 8
  %294 = alloca %array.0, align 8
  %295 = alloca %array.0, align 8
  %296 = alloca %array.0, align 8
  call void @asquare(%array.0* %a, %array.0* %b, %array.0* %c, %array.0* %d)
  %297 = alloca %array.0, align 8
  call void @check(%array.0* %d)
  ret i32 0
}

attributes #0 = { nounwind readnone speculatable willreturn }
