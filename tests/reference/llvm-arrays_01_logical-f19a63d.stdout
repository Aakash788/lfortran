; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i1*, i32, [1 x %dimension_descriptor], i1 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i1*, i32, [2 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = alloca i32, align 4
  store i32 3, i32* %11, align 4
  %12 = getelementptr %array, %array* %a, i32 0, i32 0
  %13 = load i32, i32* %11, align 4
  %14 = alloca i1, i32 %13, align 1
  store i1* %14, i1** %12, align 8
  %b = alloca %array, align 8
  %15 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr %array, %array* %b, i32 0, i32 2
  %17 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 3
  store i32 1, i32* %18, align 4
  store i32 1, i32* %19, align 4
  store i32 4, i32* %20, align 4
  %22 = load i32, i32* %20, align 4
  %23 = load i32, i32* %19, align 4
  %24 = sub i32 %22, %23
  %25 = add i32 %24, 1
  store i32 %25, i32* %21, align 4
  %26 = alloca i32, align 4
  store i32 4, i32* %26, align 4
  %27 = getelementptr %array, %array* %b, i32 0, i32 0
  %28 = load i32, i32* %26, align 4
  %29 = alloca i1, i32 %28, align 1
  store i1* %29, i1** %27, align 8
  %c = alloca %array.0, align 8
  %30 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %32 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %31, i32 0, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 2
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 3
  store i32 1, i32* %33, align 4
  store i32 1, i32* %34, align 4
  store i32 2, i32* %35, align 4
  %37 = load i32, i32* %35, align 4
  %38 = load i32, i32* %34, align 4
  %39 = sub i32 %37, %38
  %40 = add i32 %39, 1
  store i32 %40, i32* %36, align 4
  %41 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %31, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 3
  store i32 1, i32* %42, align 4
  store i32 1, i32* %43, align 4
  store i32 2, i32* %44, align 4
  %46 = load i32, i32* %44, align 4
  %47 = load i32, i32* %43, align 4
  %48 = sub i32 %46, %47
  %49 = add i32 %48, 1
  store i32 %49, i32* %45, align 4
  %50 = alloca i32, align 4
  store i32 4, i32* %50, align 4
  %51 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %52 = load i32, i32* %50, align 4
  %53 = alloca i1, i32 %52, align 1
  store i1* %53, i1** %51, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %54 = getelementptr %array, %array* %a, i32 0, i32 2
  %55 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %54, i32 0, i32 0
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = sub i32 1, %57
  %59 = mul i32 1, %58
  %60 = add i32 0, %59
  %61 = getelementptr %dimension_descriptor, %dimension_descriptor* %55, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = mul i32 1, %62
  %64 = getelementptr %array, %array* %a, i32 0, i32 0
  %65 = load i1*, i1** %64, align 8
  %66 = getelementptr inbounds i1, i1* %65, i32 %60
  store i1 true, i1* %66, align 1
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %67 = load i32, i32* %i, align 4
  %68 = add i32 %67, 1
  %69 = icmp sle i32 %68, 3
  br i1 %69, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %70 = load i32, i32* %i, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %i, align 4
  %72 = load i32, i32* %i, align 4
  %73 = getelementptr %array, %array* %a, i32 0, i32 2
  %74 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %73, i32 0, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 %72, %76
  %78 = mul i32 1, %77
  %79 = add i32 0, %78
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 1, %81
  %83 = getelementptr %array, %array* %a, i32 0, i32 0
  %84 = load i1*, i1** %83, align 8
  %85 = getelementptr inbounds i1, i1* %84, i32 %79
  %86 = load i32, i32* %i, align 4
  %87 = sub i32 %86, 1
  %88 = getelementptr %array, %array* %a, i32 0, i32 2
  %89 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %88, i32 0, i32 0
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = sub i32 %87, %91
  %93 = mul i32 1, %92
  %94 = add i32 0, %93
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %89, i32 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = mul i32 1, %96
  %98 = getelementptr %array, %array* %a, i32 0, i32 0
  %99 = load i1*, i1** %98, align 8
  %100 = getelementptr inbounds i1, i1* %99, i32 %94
  %101 = load i1, i1* %100, align 1
  %102 = xor i1 %101, true
  store i1 %102, i1* %85, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %103 = getelementptr %array, %array* %a, i32 0, i32 2
  %104 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %103, i32 0, i32 0
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sub i32 1, %106
  %108 = mul i32 1, %107
  %109 = add i32 0, %108
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = mul i32 1, %111
  %113 = getelementptr %array, %array* %a, i32 0, i32 0
  %114 = load i1*, i1** %113, align 8
  %115 = getelementptr inbounds i1, i1* %114, i32 %109
  %116 = load i1, i1* %115, align 1
  %117 = xor i1 %116, true
  br i1 %117, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %118 = getelementptr %array, %array* %a, i32 0, i32 2
  %119 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %118, i32 0, i32 0
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = sub i32 2, %121
  %123 = mul i32 1, %122
  %124 = add i32 0, %123
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 3
  %126 = load i32, i32* %125, align 4
  %127 = mul i32 1, %126
  %128 = getelementptr %array, %array* %a, i32 0, i32 0
  %129 = load i1*, i1** %128, align 8
  %130 = getelementptr inbounds i1, i1* %129, i32 %124
  %131 = load i1, i1* %130, align 1
  br i1 %131, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %132 = getelementptr %array, %array* %a, i32 0, i32 2
  %133 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %132, i32 0, i32 0
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 3, %135
  %137 = mul i32 1, %136
  %138 = add i32 0, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 1, %140
  %142 = getelementptr %array, %array* %a, i32 0, i32 0
  %143 = load i1*, i1** %142, align 8
  %144 = getelementptr inbounds i1, i1* %143, i32 %138
  %145 = load i1, i1* %144, align 1
  %146 = xor i1 %145, true
  br i1 %146, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %147 = getelementptr %array, %array* %b, i32 0, i32 2
  %148 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %147, i32 0, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = sub i32 1, %150
  %152 = mul i32 1, %151
  %153 = add i32 0, %152
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 3
  %155 = load i32, i32* %154, align 4
  %156 = mul i32 1, %155
  %157 = getelementptr %array, %array* %b, i32 0, i32 0
  %158 = load i1*, i1** %157, align 8
  %159 = getelementptr inbounds i1, i1* %158, i32 %153
  store i1 false, i1* %159, align 1
  store i32 11, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %160 = load i32, i32* %i, align 4
  %161 = add i32 %160, 1
  %162 = icmp sle i32 %161, 14
  br i1 %162, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %163 = load i32, i32* %i, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %i, align 4
  %165 = load i32, i32* %i, align 4
  %166 = sub i32 %165, 10
  %167 = getelementptr %array, %array* %b, i32 0, i32 2
  %168 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %167, i32 0, i32 0
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = sub i32 %166, %170
  %172 = mul i32 1, %171
  %173 = add i32 0, %172
  %174 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = mul i32 1, %175
  %177 = getelementptr %array, %array* %b, i32 0, i32 0
  %178 = load i1*, i1** %177, align 8
  %179 = getelementptr inbounds i1, i1* %178, i32 %173
  %180 = load i32, i32* %i, align 4
  %181 = sub i32 %180, 10
  %182 = sub i32 %181, 1
  %183 = getelementptr %array, %array* %b, i32 0, i32 2
  %184 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %183, i32 0, i32 0
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 %182, %186
  %188 = mul i32 1, %187
  %189 = add i32 0, %188
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 3
  %191 = load i32, i32* %190, align 4
  %192 = mul i32 1, %191
  %193 = getelementptr %array, %array* %b, i32 0, i32 0
  %194 = load i1*, i1** %193, align 8
  %195 = getelementptr inbounds i1, i1* %194, i32 %189
  %196 = load i1, i1* %195, align 1
  %197 = xor i1 %196, true
  store i1 %197, i1* %179, align 1
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %198 = getelementptr %array, %array* %b, i32 0, i32 2
  %199 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %198, i32 0, i32 0
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %199, i32 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = sub i32 1, %201
  %203 = mul i32 1, %202
  %204 = add i32 0, %203
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %199, i32 0, i32 3
  %206 = load i32, i32* %205, align 4
  %207 = mul i32 1, %206
  %208 = getelementptr %array, %array* %b, i32 0, i32 0
  %209 = load i1*, i1** %208, align 8
  %210 = getelementptr inbounds i1, i1* %209, i32 %204
  %211 = load i1, i1* %210, align 1
  br i1 %211, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %212 = getelementptr %array, %array* %b, i32 0, i32 2
  %213 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %212, i32 0, i32 0
  %214 = getelementptr %dimension_descriptor, %dimension_descriptor* %213, i32 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = sub i32 2, %215
  %217 = mul i32 1, %216
  %218 = add i32 0, %217
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %213, i32 0, i32 3
  %220 = load i32, i32* %219, align 4
  %221 = mul i32 1, %220
  %222 = getelementptr %array, %array* %b, i32 0, i32 0
  %223 = load i1*, i1** %222, align 8
  %224 = getelementptr inbounds i1, i1* %223, i32 %218
  %225 = load i1, i1* %224, align 1
  %226 = xor i1 %225, true
  br i1 %226, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %227 = getelementptr %array, %array* %b, i32 0, i32 2
  %228 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %227, i32 0, i32 0
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = sub i32 3, %230
  %232 = mul i32 1, %231
  %233 = add i32 0, %232
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = mul i32 1, %235
  %237 = getelementptr %array, %array* %b, i32 0, i32 0
  %238 = load i1*, i1** %237, align 8
  %239 = getelementptr inbounds i1, i1* %238, i32 %233
  %240 = load i1, i1* %239, align 1
  br i1 %240, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %241 = getelementptr %array, %array* %b, i32 0, i32 2
  %242 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %241, i32 0, i32 0
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = sub i32 4, %244
  %246 = mul i32 1, %245
  %247 = add i32 0, %246
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 3
  %249 = load i32, i32* %248, align 4
  %250 = mul i32 1, %249
  %251 = getelementptr %array, %array* %b, i32 0, i32 0
  %252 = load i1*, i1** %251, align 8
  %253 = getelementptr inbounds i1, i1* %252, i32 %247
  %254 = load i1, i1* %253, align 1
  %255 = xor i1 %254, true
  br i1 %255, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %256 = load i32, i32* %i, align 4
  %257 = add i32 %256, 1
  %258 = icmp sle i32 %257, 3
  br i1 %258, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %259 = load i32, i32* %i, align 4
  %260 = add i32 %259, 1
  store i32 %260, i32* %i, align 4
  %261 = load i32, i32* %i, align 4
  %262 = getelementptr %array, %array* %b, i32 0, i32 2
  %263 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %262, i32 0, i32 0
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = sub i32 %261, %265
  %267 = mul i32 1, %266
  %268 = add i32 0, %267
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = mul i32 1, %270
  %272 = getelementptr %array, %array* %b, i32 0, i32 0
  %273 = load i1*, i1** %272, align 8
  %274 = getelementptr inbounds i1, i1* %273, i32 %268
  %275 = load i32, i32* %i, align 4
  %276 = getelementptr %array, %array* %a, i32 0, i32 2
  %277 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %276, i32 0, i32 0
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 1
  %279 = load i32, i32* %278, align 4
  %280 = sub i32 %275, %279
  %281 = mul i32 1, %280
  %282 = add i32 0, %281
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %277, i32 0, i32 3
  %284 = load i32, i32* %283, align 4
  %285 = mul i32 1, %284
  %286 = getelementptr %array, %array* %a, i32 0, i32 0
  %287 = load i1*, i1** %286, align 8
  %288 = getelementptr inbounds i1, i1* %287, i32 %282
  %289 = load i1, i1* %288, align 1
  %290 = and i1 %289, false
  store i1 %290, i1* %274, align 1
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %291 = getelementptr %array, %array* %b, i32 0, i32 2
  %292 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %291, i32 0, i32 0
  %293 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = sub i32 1, %294
  %296 = mul i32 1, %295
  %297 = add i32 0, %296
  %298 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 3
  %299 = load i32, i32* %298, align 4
  %300 = mul i32 1, %299
  %301 = getelementptr %array, %array* %b, i32 0, i32 0
  %302 = load i1*, i1** %301, align 8
  %303 = getelementptr inbounds i1, i1* %302, i32 %297
  %304 = load i1, i1* %303, align 1
  br i1 %304, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %305 = getelementptr %array, %array* %b, i32 0, i32 2
  %306 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %305, i32 0, i32 0
  %307 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = sub i32 2, %308
  %310 = mul i32 1, %309
  %311 = add i32 0, %310
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %306, i32 0, i32 3
  %313 = load i32, i32* %312, align 4
  %314 = mul i32 1, %313
  %315 = getelementptr %array, %array* %b, i32 0, i32 0
  %316 = load i1*, i1** %315, align 8
  %317 = getelementptr inbounds i1, i1* %316, i32 %311
  %318 = load i1, i1* %317, align 1
  br i1 %318, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %319 = getelementptr %array, %array* %b, i32 0, i32 2
  %320 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %319, i32 0, i32 0
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 1
  %322 = load i32, i32* %321, align 4
  %323 = sub i32 3, %322
  %324 = mul i32 1, %323
  %325 = add i32 0, %324
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 3
  %327 = load i32, i32* %326, align 4
  %328 = mul i32 1, %327
  %329 = getelementptr %array, %array* %b, i32 0, i32 0
  %330 = load i1*, i1** %329, align 8
  %331 = getelementptr inbounds i1, i1* %330, i32 %325
  %332 = load i1, i1* %331, align 1
  br i1 %332, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %333 = getelementptr %array, %array* %b, i32 0, i32 2
  %334 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %333, i32 0, i32 0
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %334, i32 0, i32 1
  %336 = load i32, i32* %335, align 4
  %337 = sub i32 4, %336
  %338 = mul i32 1, %337
  %339 = add i32 0, %338
  %340 = getelementptr %dimension_descriptor, %dimension_descriptor* %334, i32 0, i32 3
  %341 = load i32, i32* %340, align 4
  %342 = mul i32 1, %341
  %343 = getelementptr %array, %array* %b, i32 0, i32 0
  %344 = load i1*, i1** %343, align 8
  %345 = getelementptr inbounds i1, i1* %344, i32 %339
  %346 = getelementptr %array, %array* %b, i32 0, i32 2
  %347 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %346, i32 0, i32 0
  %348 = getelementptr %dimension_descriptor, %dimension_descriptor* %347, i32 0, i32 1
  %349 = load i32, i32* %348, align 4
  %350 = sub i32 1, %349
  %351 = mul i32 1, %350
  %352 = add i32 0, %351
  %353 = getelementptr %dimension_descriptor, %dimension_descriptor* %347, i32 0, i32 3
  %354 = load i32, i32* %353, align 4
  %355 = mul i32 1, %354
  %356 = getelementptr %array, %array* %b, i32 0, i32 0
  %357 = load i1*, i1** %356, align 8
  %358 = getelementptr inbounds i1, i1* %357, i32 %352
  %359 = load i1, i1* %358, align 1
  %360 = getelementptr %array, %array* %b, i32 0, i32 2
  %361 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %360, i32 0, i32 0
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %361, i32 0, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = sub i32 2, %363
  %365 = mul i32 1, %364
  %366 = add i32 0, %365
  %367 = getelementptr %dimension_descriptor, %dimension_descriptor* %361, i32 0, i32 3
  %368 = load i32, i32* %367, align 4
  %369 = mul i32 1, %368
  %370 = getelementptr %array, %array* %b, i32 0, i32 0
  %371 = load i1*, i1** %370, align 8
  %372 = getelementptr inbounds i1, i1* %371, i32 %366
  %373 = load i1, i1* %372, align 1
  %374 = or i1 %359, %373
  %375 = getelementptr %array, %array* %b, i32 0, i32 2
  %376 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %375, i32 0, i32 0
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %376, i32 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = sub i32 3, %378
  %380 = mul i32 1, %379
  %381 = add i32 0, %380
  %382 = getelementptr %dimension_descriptor, %dimension_descriptor* %376, i32 0, i32 3
  %383 = load i32, i32* %382, align 4
  %384 = mul i32 1, %383
  %385 = getelementptr %array, %array* %b, i32 0, i32 0
  %386 = load i1*, i1** %385, align 8
  %387 = getelementptr inbounds i1, i1* %386, i32 %381
  %388 = load i1, i1* %387, align 1
  %389 = or i1 %374, %388
  %390 = getelementptr %array, %array* %a, i32 0, i32 2
  %391 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %390, i32 0, i32 0
  %392 = getelementptr %dimension_descriptor, %dimension_descriptor* %391, i32 0, i32 1
  %393 = load i32, i32* %392, align 4
  %394 = sub i32 1, %393
  %395 = mul i32 1, %394
  %396 = add i32 0, %395
  %397 = getelementptr %dimension_descriptor, %dimension_descriptor* %391, i32 0, i32 3
  %398 = load i32, i32* %397, align 4
  %399 = mul i32 1, %398
  %400 = getelementptr %array, %array* %a, i32 0, i32 0
  %401 = load i1*, i1** %400, align 8
  %402 = getelementptr inbounds i1, i1* %401, i32 %396
  %403 = load i1, i1* %402, align 1
  %404 = or i1 %389, %403
  store i1 %404, i1* %345, align 1
  %405 = getelementptr %array, %array* %b, i32 0, i32 2
  %406 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %405, i32 0, i32 0
  %407 = getelementptr %dimension_descriptor, %dimension_descriptor* %406, i32 0, i32 1
  %408 = load i32, i32* %407, align 4
  %409 = sub i32 4, %408
  %410 = mul i32 1, %409
  %411 = add i32 0, %410
  %412 = getelementptr %dimension_descriptor, %dimension_descriptor* %406, i32 0, i32 3
  %413 = load i32, i32* %412, align 4
  %414 = mul i32 1, %413
  %415 = getelementptr %array, %array* %b, i32 0, i32 0
  %416 = load i1*, i1** %415, align 8
  %417 = getelementptr inbounds i1, i1* %416, i32 %411
  %418 = load i1, i1* %417, align 1
  %419 = xor i1 %418, true
  br i1 %419, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %420 = getelementptr %array, %array* %b, i32 0, i32 2
  %421 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %420, i32 0, i32 0
  %422 = getelementptr %dimension_descriptor, %dimension_descriptor* %421, i32 0, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = sub i32 4, %423
  %425 = mul i32 1, %424
  %426 = add i32 0, %425
  %427 = getelementptr %dimension_descriptor, %dimension_descriptor* %421, i32 0, i32 3
  %428 = load i32, i32* %427, align 4
  %429 = mul i32 1, %428
  %430 = getelementptr %array, %array* %b, i32 0, i32 0
  %431 = load i1*, i1** %430, align 8
  %432 = getelementptr inbounds i1, i1* %431, i32 %426
  %433 = getelementptr %array, %array* %a, i32 0, i32 2
  %434 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %433, i32 0, i32 0
  %435 = getelementptr %dimension_descriptor, %dimension_descriptor* %434, i32 0, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = sub i32 1, %436
  %438 = mul i32 1, %437
  %439 = add i32 0, %438
  %440 = getelementptr %dimension_descriptor, %dimension_descriptor* %434, i32 0, i32 3
  %441 = load i32, i32* %440, align 4
  %442 = mul i32 1, %441
  %443 = getelementptr %array, %array* %a, i32 0, i32 0
  %444 = load i1*, i1** %443, align 8
  %445 = getelementptr inbounds i1, i1* %444, i32 %439
  %446 = load i1, i1* %445, align 1
  store i1 %446, i1* %432, align 1
  %447 = getelementptr %array, %array* %b, i32 0, i32 2
  %448 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %447, i32 0, i32 0
  %449 = getelementptr %dimension_descriptor, %dimension_descriptor* %448, i32 0, i32 1
  %450 = load i32, i32* %449, align 4
  %451 = sub i32 4, %450
  %452 = mul i32 1, %451
  %453 = add i32 0, %452
  %454 = getelementptr %dimension_descriptor, %dimension_descriptor* %448, i32 0, i32 3
  %455 = load i32, i32* %454, align 4
  %456 = mul i32 1, %455
  %457 = getelementptr %array, %array* %b, i32 0, i32 0
  %458 = load i1*, i1** %457, align 8
  %459 = getelementptr inbounds i1, i1* %458, i32 %453
  %460 = load i1, i1* %459, align 1
  %461 = xor i1 %460, true
  br i1 %461, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end47, %ifcont39
  %462 = load i32, i32* %i, align 4
  %463 = add i32 %462, 1
  %464 = icmp sle i32 %463, 2
  br i1 %464, label %loop.body41, label %loop.end48

loop.body41:                                      ; preds = %loop.head40
  %465 = load i32, i32* %i, align 4
  %466 = add i32 %465, 1
  store i32 %466, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %ifcont46, %loop.body41
  %467 = load i32, i32* %j, align 4
  %468 = add i32 %467, 1
  %469 = icmp sle i32 %468, 2
  br i1 %469, label %loop.body43, label %loop.end47

loop.body43:                                      ; preds = %loop.head42
  %470 = load i32, i32* %j, align 4
  %471 = add i32 %470, 1
  store i32 %471, i32* %j, align 4
  %472 = load i32, i32* %i, align 4
  %473 = load i32, i32* %j, align 4
  %474 = add i32 %472, %473
  %475 = load i32, i32* %i, align 4
  %476 = load i32, i32* %j, align 4
  %477 = add i32 %475, %476
  %478 = udiv i32 %477, 2
  %479 = mul i32 2, %478
  %480 = sub i32 %474, %479
  %481 = icmp eq i32 %480, 1
  br i1 %481, label %then44, label %else45

then44:                                           ; preds = %loop.body43
  %482 = load i32, i32* %i, align 4
  %483 = load i32, i32* %j, align 4
  %484 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %485 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %484, i32 0, i32 0
  %486 = getelementptr %dimension_descriptor, %dimension_descriptor* %485, i32 0, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = sub i32 %482, %487
  %489 = mul i32 1, %488
  %490 = add i32 0, %489
  %491 = getelementptr %dimension_descriptor, %dimension_descriptor* %485, i32 0, i32 3
  %492 = load i32, i32* %491, align 4
  %493 = mul i32 1, %492
  %494 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %484, i32 0, i32 1
  %495 = getelementptr %dimension_descriptor, %dimension_descriptor* %494, i32 0, i32 1
  %496 = load i32, i32* %495, align 4
  %497 = sub i32 %483, %496
  %498 = mul i32 %493, %497
  %499 = add i32 %490, %498
  %500 = getelementptr %dimension_descriptor, %dimension_descriptor* %494, i32 0, i32 3
  %501 = load i32, i32* %500, align 4
  %502 = mul i32 %493, %501
  %503 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %504 = load i1*, i1** %503, align 8
  %505 = getelementptr inbounds i1, i1* %504, i32 %499
  store i1 true, i1* %505, align 1
  br label %ifcont46

else45:                                           ; preds = %loop.body43
  %506 = load i32, i32* %i, align 4
  %507 = load i32, i32* %j, align 4
  %508 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %509 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %508, i32 0, i32 0
  %510 = getelementptr %dimension_descriptor, %dimension_descriptor* %509, i32 0, i32 1
  %511 = load i32, i32* %510, align 4
  %512 = sub i32 %506, %511
  %513 = mul i32 1, %512
  %514 = add i32 0, %513
  %515 = getelementptr %dimension_descriptor, %dimension_descriptor* %509, i32 0, i32 3
  %516 = load i32, i32* %515, align 4
  %517 = mul i32 1, %516
  %518 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %508, i32 0, i32 1
  %519 = getelementptr %dimension_descriptor, %dimension_descriptor* %518, i32 0, i32 1
  %520 = load i32, i32* %519, align 4
  %521 = sub i32 %507, %520
  %522 = mul i32 %517, %521
  %523 = add i32 %514, %522
  %524 = getelementptr %dimension_descriptor, %dimension_descriptor* %518, i32 0, i32 3
  %525 = load i32, i32* %524, align 4
  %526 = mul i32 %517, %525
  %527 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %528 = load i1*, i1** %527, align 8
  %529 = getelementptr inbounds i1, i1* %528, i32 %523
  store i1 false, i1* %529, align 1
  br label %ifcont46

ifcont46:                                         ; preds = %else45, %then44
  br label %loop.head42

loop.end47:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end48:                                       ; preds = %loop.head40
  %530 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %531 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %530, i32 0, i32 0
  %532 = getelementptr %dimension_descriptor, %dimension_descriptor* %531, i32 0, i32 1
  %533 = load i32, i32* %532, align 4
  %534 = sub i32 1, %533
  %535 = mul i32 1, %534
  %536 = add i32 0, %535
  %537 = getelementptr %dimension_descriptor, %dimension_descriptor* %531, i32 0, i32 3
  %538 = load i32, i32* %537, align 4
  %539 = mul i32 1, %538
  %540 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %530, i32 0, i32 1
  %541 = getelementptr %dimension_descriptor, %dimension_descriptor* %540, i32 0, i32 1
  %542 = load i32, i32* %541, align 4
  %543 = sub i32 1, %542
  %544 = mul i32 %539, %543
  %545 = add i32 %536, %544
  %546 = getelementptr %dimension_descriptor, %dimension_descriptor* %540, i32 0, i32 3
  %547 = load i32, i32* %546, align 4
  %548 = mul i32 %539, %547
  %549 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %550 = load i1*, i1** %549, align 8
  %551 = getelementptr inbounds i1, i1* %550, i32 %545
  %552 = load i1, i1* %551, align 1
  br i1 %552, label %then49, label %else50

then49:                                           ; preds = %loop.end48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %loop.end48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %553 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %554 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %553, i32 0, i32 0
  %555 = getelementptr %dimension_descriptor, %dimension_descriptor* %554, i32 0, i32 1
  %556 = load i32, i32* %555, align 4
  %557 = sub i32 1, %556
  %558 = mul i32 1, %557
  %559 = add i32 0, %558
  %560 = getelementptr %dimension_descriptor, %dimension_descriptor* %554, i32 0, i32 3
  %561 = load i32, i32* %560, align 4
  %562 = mul i32 1, %561
  %563 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %553, i32 0, i32 1
  %564 = getelementptr %dimension_descriptor, %dimension_descriptor* %563, i32 0, i32 1
  %565 = load i32, i32* %564, align 4
  %566 = sub i32 2, %565
  %567 = mul i32 %562, %566
  %568 = add i32 %559, %567
  %569 = getelementptr %dimension_descriptor, %dimension_descriptor* %563, i32 0, i32 3
  %570 = load i32, i32* %569, align 4
  %571 = mul i32 %562, %570
  %572 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %573 = load i1*, i1** %572, align 8
  %574 = getelementptr inbounds i1, i1* %573, i32 %568
  %575 = load i1, i1* %574, align 1
  %576 = xor i1 %575, true
  br i1 %576, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %577 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %578 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %577, i32 0, i32 0
  %579 = getelementptr %dimension_descriptor, %dimension_descriptor* %578, i32 0, i32 1
  %580 = load i32, i32* %579, align 4
  %581 = sub i32 2, %580
  %582 = mul i32 1, %581
  %583 = add i32 0, %582
  %584 = getelementptr %dimension_descriptor, %dimension_descriptor* %578, i32 0, i32 3
  %585 = load i32, i32* %584, align 4
  %586 = mul i32 1, %585
  %587 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %577, i32 0, i32 1
  %588 = getelementptr %dimension_descriptor, %dimension_descriptor* %587, i32 0, i32 1
  %589 = load i32, i32* %588, align 4
  %590 = sub i32 1, %589
  %591 = mul i32 %586, %590
  %592 = add i32 %583, %591
  %593 = getelementptr %dimension_descriptor, %dimension_descriptor* %587, i32 0, i32 3
  %594 = load i32, i32* %593, align 4
  %595 = mul i32 %586, %594
  %596 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %597 = load i1*, i1** %596, align 8
  %598 = getelementptr inbounds i1, i1* %597, i32 %592
  %599 = load i1, i1* %598, align 1
  %600 = xor i1 %599, true
  br i1 %600, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %601 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %602 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %601, i32 0, i32 0
  %603 = getelementptr %dimension_descriptor, %dimension_descriptor* %602, i32 0, i32 1
  %604 = load i32, i32* %603, align 4
  %605 = sub i32 2, %604
  %606 = mul i32 1, %605
  %607 = add i32 0, %606
  %608 = getelementptr %dimension_descriptor, %dimension_descriptor* %602, i32 0, i32 3
  %609 = load i32, i32* %608, align 4
  %610 = mul i32 1, %609
  %611 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %601, i32 0, i32 1
  %612 = getelementptr %dimension_descriptor, %dimension_descriptor* %611, i32 0, i32 1
  %613 = load i32, i32* %612, align 4
  %614 = sub i32 2, %613
  %615 = mul i32 %610, %614
  %616 = add i32 %607, %615
  %617 = getelementptr %dimension_descriptor, %dimension_descriptor* %611, i32 0, i32 3
  %618 = load i32, i32* %617, align 4
  %619 = mul i32 %610, %618
  %620 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %621 = load i1*, i1** %620, align 8
  %622 = getelementptr inbounds i1, i1* %621, i32 %616
  %623 = load i1, i1* %622, align 1
  br i1 %623, label %then58, label %else59

then58:                                           ; preds = %ifcont57
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont60

else59:                                           ; preds = %ifcont57
  br label %ifcont60

ifcont60:                                         ; preds = %else59, %then58
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
