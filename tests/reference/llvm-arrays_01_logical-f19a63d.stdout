; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i1*, i32, %dimension_descriptor*, i1 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i1*, i32, %dimension_descriptor*, i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %5 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %6 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 0
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 1
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 2
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 3
  store i32 1, i32* %7, align 4
  store i32 1, i32* %8, align 4
  store i32 3, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %8, align 4
  %13 = sub i32 %11, %12
  %14 = add i32 %13, 1
  store i32 %14, i32* %10, align 4
  %15 = alloca i32, align 4
  store i32 3, i32* %15, align 4
  %16 = getelementptr %array, %array* %a, i32 0, i32 0
  %17 = load i32, i32* %15, align 4
  %18 = alloca i1, i32 %17, align 1
  store i1* %18, i1** %16, align 8
  %b = alloca %array, align 8
  %19 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr %array, %array* %b, i32 0, i32 2
  %21 = alloca i32, align 4
  store i32 1, i32* %21, align 4
  %22 = load i32, i32* %21, align 4
  %23 = alloca %dimension_descriptor, i32 %22, align 8
  store %dimension_descriptor* %23, %dimension_descriptor** %20, align 8
  %24 = load %dimension_descriptor*, %dimension_descriptor** %20, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 3
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  store i32 4, i32* %28, align 4
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %27, align 4
  %32 = sub i32 %30, %31
  %33 = add i32 %32, 1
  store i32 %33, i32* %29, align 4
  %34 = alloca i32, align 4
  store i32 4, i32* %34, align 4
  %35 = getelementptr %array, %array* %b, i32 0, i32 0
  %36 = load i32, i32* %34, align 4
  %37 = alloca i1, i32 %36, align 1
  store i1* %37, i1** %35, align 8
  %c = alloca %array.0, align 8
  %38 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %38, align 4
  %39 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %40 = alloca i32, align 4
  store i32 2, i32* %40, align 4
  %41 = load i32, i32* %40, align 4
  %42 = alloca %dimension_descriptor, i32 %41, align 8
  store %dimension_descriptor* %42, %dimension_descriptor** %39, align 8
  %43 = load %dimension_descriptor*, %dimension_descriptor** %39, align 8
  %44 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  store i32 1, i32* %45, align 4
  store i32 1, i32* %46, align 4
  store i32 2, i32* %47, align 4
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %46, align 4
  %51 = sub i32 %49, %50
  %52 = add i32 %51, 1
  store i32 %52, i32* %48, align 4
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 3
  store i32 1, i32* %54, align 4
  store i32 1, i32* %55, align 4
  store i32 2, i32* %56, align 4
  %58 = load i32, i32* %56, align 4
  %59 = load i32, i32* %55, align 4
  %60 = sub i32 %58, %59
  %61 = add i32 %60, 1
  store i32 %61, i32* %57, align 4
  %62 = alloca i32, align 4
  store i32 4, i32* %62, align 4
  %63 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %64 = load i32, i32* %62, align 4
  %65 = alloca i1, i32 %64, align 1
  store i1* %65, i1** %63, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %66 = getelementptr %array, %array* %a, i32 0, i32 2
  %67 = load %dimension_descriptor*, %dimension_descriptor** %66, align 8
  %68 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %67, i32 0
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = sub i32 1, %70
  %72 = mul i32 1, %71
  %73 = add i32 0, %72
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = mul i32 1, %75
  %77 = getelementptr %array, %array* %a, i32 0, i32 0
  %78 = load i1*, i1** %77, align 8
  %79 = getelementptr inbounds i1, i1* %78, i32 %73
  store i1 true, i1* %79, align 1
  store i32 1, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %80 = load i32, i32* %i, align 4
  %81 = add i32 %80, 1
  %82 = icmp sle i32 %81, 3
  br i1 %82, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %83 = load i32, i32* %i, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %i, align 4
  %85 = load i32, i32* %i, align 4
  %86 = getelementptr %array, %array* %a, i32 0, i32 2
  %87 = load %dimension_descriptor*, %dimension_descriptor** %86, align 8
  %88 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %87, i32 0
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sub i32 %85, %90
  %92 = mul i32 1, %91
  %93 = add i32 0, %92
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %88, i32 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = mul i32 1, %95
  %97 = getelementptr %array, %array* %a, i32 0, i32 0
  %98 = load i1*, i1** %97, align 8
  %99 = getelementptr inbounds i1, i1* %98, i32 %93
  %100 = load i32, i32* %i, align 4
  %101 = sub i32 %100, 1
  %102 = getelementptr %array, %array* %a, i32 0, i32 2
  %103 = load %dimension_descriptor*, %dimension_descriptor** %102, align 8
  %104 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %103, i32 0
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sub i32 %101, %106
  %108 = mul i32 1, %107
  %109 = add i32 0, %108
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = mul i32 1, %111
  %113 = getelementptr %array, %array* %a, i32 0, i32 0
  %114 = load i1*, i1** %113, align 8
  %115 = getelementptr inbounds i1, i1* %114, i32 %109
  %116 = load i1, i1* %115, align 1
  %117 = xor i1 %116, true
  store i1 %117, i1* %99, align 1
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %118 = getelementptr %array, %array* %a, i32 0, i32 2
  %119 = load %dimension_descriptor*, %dimension_descriptor** %118, align 8
  %120 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %119, i32 0
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = sub i32 1, %122
  %124 = mul i32 1, %123
  %125 = add i32 0, %124
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %120, i32 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = mul i32 1, %127
  %129 = getelementptr %array, %array* %a, i32 0, i32 0
  %130 = load i1*, i1** %129, align 8
  %131 = getelementptr inbounds i1, i1* %130, i32 %125
  %132 = load i1, i1* %131, align 1
  %133 = xor i1 %132, true
  br i1 %133, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %134 = getelementptr %array, %array* %a, i32 0, i32 2
  %135 = load %dimension_descriptor*, %dimension_descriptor** %134, align 8
  %136 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %135, i32 0
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = sub i32 2, %138
  %140 = mul i32 1, %139
  %141 = add i32 0, %140
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %136, i32 0, i32 3
  %143 = load i32, i32* %142, align 4
  %144 = mul i32 1, %143
  %145 = getelementptr %array, %array* %a, i32 0, i32 0
  %146 = load i1*, i1** %145, align 8
  %147 = getelementptr inbounds i1, i1* %146, i32 %141
  %148 = load i1, i1* %147, align 1
  br i1 %148, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %149 = getelementptr %array, %array* %a, i32 0, i32 2
  %150 = load %dimension_descriptor*, %dimension_descriptor** %149, align 8
  %151 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %150, i32 0
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %151, i32 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = sub i32 3, %153
  %155 = mul i32 1, %154
  %156 = add i32 0, %155
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %151, i32 0, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = mul i32 1, %158
  %160 = getelementptr %array, %array* %a, i32 0, i32 0
  %161 = load i1*, i1** %160, align 8
  %162 = getelementptr inbounds i1, i1* %161, i32 %156
  %163 = load i1, i1* %162, align 1
  %164 = xor i1 %163, true
  br i1 %164, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  %165 = getelementptr %array, %array* %b, i32 0, i32 2
  %166 = load %dimension_descriptor*, %dimension_descriptor** %165, align 8
  %167 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %166, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = sub i32 1, %169
  %171 = mul i32 1, %170
  %172 = add i32 0, %171
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 3
  %174 = load i32, i32* %173, align 4
  %175 = mul i32 1, %174
  %176 = getelementptr %array, %array* %b, i32 0, i32 0
  %177 = load i1*, i1** %176, align 8
  %178 = getelementptr inbounds i1, i1* %177, i32 %172
  store i1 false, i1* %178, align 1
  store i32 11, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %179 = load i32, i32* %i, align 4
  %180 = add i32 %179, 1
  %181 = icmp sle i32 %180, 14
  br i1 %181, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %182 = load i32, i32* %i, align 4
  %183 = add i32 %182, 1
  store i32 %183, i32* %i, align 4
  %184 = load i32, i32* %i, align 4
  %185 = sub i32 %184, 10
  %186 = getelementptr %array, %array* %b, i32 0, i32 2
  %187 = load %dimension_descriptor*, %dimension_descriptor** %186, align 8
  %188 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %187, i32 0
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = sub i32 %185, %190
  %192 = mul i32 1, %191
  %193 = add i32 0, %192
  %194 = getelementptr %dimension_descriptor, %dimension_descriptor* %188, i32 0, i32 3
  %195 = load i32, i32* %194, align 4
  %196 = mul i32 1, %195
  %197 = getelementptr %array, %array* %b, i32 0, i32 0
  %198 = load i1*, i1** %197, align 8
  %199 = getelementptr inbounds i1, i1* %198, i32 %193
  %200 = load i32, i32* %i, align 4
  %201 = sub i32 %200, 10
  %202 = sub i32 %201, 1
  %203 = getelementptr %array, %array* %b, i32 0, i32 2
  %204 = load %dimension_descriptor*, %dimension_descriptor** %203, align 8
  %205 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %204, i32 0
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 %202, %207
  %209 = mul i32 1, %208
  %210 = add i32 0, %209
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = mul i32 1, %212
  %214 = getelementptr %array, %array* %b, i32 0, i32 0
  %215 = load i1*, i1** %214, align 8
  %216 = getelementptr inbounds i1, i1* %215, i32 %210
  %217 = load i1, i1* %216, align 1
  %218 = xor i1 %217, true
  store i1 %218, i1* %199, align 1
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %219 = getelementptr %array, %array* %b, i32 0, i32 2
  %220 = load %dimension_descriptor*, %dimension_descriptor** %219, align 8
  %221 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %220, i32 0
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %221, i32 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = sub i32 1, %223
  %225 = mul i32 1, %224
  %226 = add i32 0, %225
  %227 = getelementptr %dimension_descriptor, %dimension_descriptor* %221, i32 0, i32 3
  %228 = load i32, i32* %227, align 4
  %229 = mul i32 1, %228
  %230 = getelementptr %array, %array* %b, i32 0, i32 0
  %231 = load i1*, i1** %230, align 8
  %232 = getelementptr inbounds i1, i1* %231, i32 %226
  %233 = load i1, i1* %232, align 1
  br i1 %233, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %234 = getelementptr %array, %array* %b, i32 0, i32 2
  %235 = load %dimension_descriptor*, %dimension_descriptor** %234, align 8
  %236 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %235, i32 0
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %236, i32 0, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = sub i32 2, %238
  %240 = mul i32 1, %239
  %241 = add i32 0, %240
  %242 = getelementptr %dimension_descriptor, %dimension_descriptor* %236, i32 0, i32 3
  %243 = load i32, i32* %242, align 4
  %244 = mul i32 1, %243
  %245 = getelementptr %array, %array* %b, i32 0, i32 0
  %246 = load i1*, i1** %245, align 8
  %247 = getelementptr inbounds i1, i1* %246, i32 %241
  %248 = load i1, i1* %247, align 1
  %249 = xor i1 %248, true
  br i1 %249, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %250 = getelementptr %array, %array* %b, i32 0, i32 2
  %251 = load %dimension_descriptor*, %dimension_descriptor** %250, align 8
  %252 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %251, i32 0
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = sub i32 3, %254
  %256 = mul i32 1, %255
  %257 = add i32 0, %256
  %258 = getelementptr %dimension_descriptor, %dimension_descriptor* %252, i32 0, i32 3
  %259 = load i32, i32* %258, align 4
  %260 = mul i32 1, %259
  %261 = getelementptr %array, %array* %b, i32 0, i32 0
  %262 = load i1*, i1** %261, align 8
  %263 = getelementptr inbounds i1, i1* %262, i32 %257
  %264 = load i1, i1* %263, align 1
  br i1 %264, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %265 = getelementptr %array, %array* %b, i32 0, i32 2
  %266 = load %dimension_descriptor*, %dimension_descriptor** %265, align 8
  %267 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %266, i32 0
  %268 = getelementptr %dimension_descriptor, %dimension_descriptor* %267, i32 0, i32 1
  %269 = load i32, i32* %268, align 4
  %270 = sub i32 4, %269
  %271 = mul i32 1, %270
  %272 = add i32 0, %271
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %267, i32 0, i32 3
  %274 = load i32, i32* %273, align 4
  %275 = mul i32 1, %274
  %276 = getelementptr %array, %array* %b, i32 0, i32 0
  %277 = load i1*, i1** %276, align 8
  %278 = getelementptr inbounds i1, i1* %277, i32 %272
  %279 = load i1, i1* %278, align 1
  %280 = xor i1 %279, true
  br i1 %280, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %281 = load i32, i32* %i, align 4
  %282 = add i32 %281, 1
  %283 = icmp sle i32 %282, 3
  br i1 %283, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %284 = load i32, i32* %i, align 4
  %285 = add i32 %284, 1
  store i32 %285, i32* %i, align 4
  %286 = load i32, i32* %i, align 4
  %287 = getelementptr %array, %array* %b, i32 0, i32 2
  %288 = load %dimension_descriptor*, %dimension_descriptor** %287, align 8
  %289 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %288, i32 0
  %290 = getelementptr %dimension_descriptor, %dimension_descriptor* %289, i32 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = sub i32 %286, %291
  %293 = mul i32 1, %292
  %294 = add i32 0, %293
  %295 = getelementptr %dimension_descriptor, %dimension_descriptor* %289, i32 0, i32 3
  %296 = load i32, i32* %295, align 4
  %297 = mul i32 1, %296
  %298 = getelementptr %array, %array* %b, i32 0, i32 0
  %299 = load i1*, i1** %298, align 8
  %300 = getelementptr inbounds i1, i1* %299, i32 %294
  %301 = load i32, i32* %i, align 4
  %302 = getelementptr %array, %array* %a, i32 0, i32 2
  %303 = load %dimension_descriptor*, %dimension_descriptor** %302, align 8
  %304 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %303, i32 0
  %305 = getelementptr %dimension_descriptor, %dimension_descriptor* %304, i32 0, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = sub i32 %301, %306
  %308 = mul i32 1, %307
  %309 = add i32 0, %308
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %304, i32 0, i32 3
  %311 = load i32, i32* %310, align 4
  %312 = mul i32 1, %311
  %313 = getelementptr %array, %array* %a, i32 0, i32 0
  %314 = load i1*, i1** %313, align 8
  %315 = getelementptr inbounds i1, i1* %314, i32 %309
  %316 = load i1, i1* %315, align 1
  %317 = and i1 %316, false
  store i1 %317, i1* %300, align 1
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %318 = getelementptr %array, %array* %b, i32 0, i32 2
  %319 = load %dimension_descriptor*, %dimension_descriptor** %318, align 8
  %320 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %319, i32 0
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 1
  %322 = load i32, i32* %321, align 4
  %323 = sub i32 1, %322
  %324 = mul i32 1, %323
  %325 = add i32 0, %324
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 3
  %327 = load i32, i32* %326, align 4
  %328 = mul i32 1, %327
  %329 = getelementptr %array, %array* %b, i32 0, i32 0
  %330 = load i1*, i1** %329, align 8
  %331 = getelementptr inbounds i1, i1* %330, i32 %325
  %332 = load i1, i1* %331, align 1
  br i1 %332, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %333 = getelementptr %array, %array* %b, i32 0, i32 2
  %334 = load %dimension_descriptor*, %dimension_descriptor** %333, align 8
  %335 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %334, i32 0
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = sub i32 2, %337
  %339 = mul i32 1, %338
  %340 = add i32 0, %339
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 3
  %342 = load i32, i32* %341, align 4
  %343 = mul i32 1, %342
  %344 = getelementptr %array, %array* %b, i32 0, i32 0
  %345 = load i1*, i1** %344, align 8
  %346 = getelementptr inbounds i1, i1* %345, i32 %340
  %347 = load i1, i1* %346, align 1
  br i1 %347, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %348 = getelementptr %array, %array* %b, i32 0, i32 2
  %349 = load %dimension_descriptor*, %dimension_descriptor** %348, align 8
  %350 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %349, i32 0
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = sub i32 3, %352
  %354 = mul i32 1, %353
  %355 = add i32 0, %354
  %356 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = mul i32 1, %357
  %359 = getelementptr %array, %array* %b, i32 0, i32 0
  %360 = load i1*, i1** %359, align 8
  %361 = getelementptr inbounds i1, i1* %360, i32 %355
  %362 = load i1, i1* %361, align 1
  br i1 %362, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %363 = getelementptr %array, %array* %b, i32 0, i32 2
  %364 = load %dimension_descriptor*, %dimension_descriptor** %363, align 8
  %365 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %364, i32 0
  %366 = getelementptr %dimension_descriptor, %dimension_descriptor* %365, i32 0, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = sub i32 4, %367
  %369 = mul i32 1, %368
  %370 = add i32 0, %369
  %371 = getelementptr %dimension_descriptor, %dimension_descriptor* %365, i32 0, i32 3
  %372 = load i32, i32* %371, align 4
  %373 = mul i32 1, %372
  %374 = getelementptr %array, %array* %b, i32 0, i32 0
  %375 = load i1*, i1** %374, align 8
  %376 = getelementptr inbounds i1, i1* %375, i32 %370
  %377 = getelementptr %array, %array* %b, i32 0, i32 2
  %378 = load %dimension_descriptor*, %dimension_descriptor** %377, align 8
  %379 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %378, i32 0
  %380 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 1
  %381 = load i32, i32* %380, align 4
  %382 = sub i32 1, %381
  %383 = mul i32 1, %382
  %384 = add i32 0, %383
  %385 = getelementptr %dimension_descriptor, %dimension_descriptor* %379, i32 0, i32 3
  %386 = load i32, i32* %385, align 4
  %387 = mul i32 1, %386
  %388 = getelementptr %array, %array* %b, i32 0, i32 0
  %389 = load i1*, i1** %388, align 8
  %390 = getelementptr inbounds i1, i1* %389, i32 %384
  %391 = load i1, i1* %390, align 1
  %392 = getelementptr %array, %array* %b, i32 0, i32 2
  %393 = load %dimension_descriptor*, %dimension_descriptor** %392, align 8
  %394 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %393, i32 0
  %395 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = sub i32 2, %396
  %398 = mul i32 1, %397
  %399 = add i32 0, %398
  %400 = getelementptr %dimension_descriptor, %dimension_descriptor* %394, i32 0, i32 3
  %401 = load i32, i32* %400, align 4
  %402 = mul i32 1, %401
  %403 = getelementptr %array, %array* %b, i32 0, i32 0
  %404 = load i1*, i1** %403, align 8
  %405 = getelementptr inbounds i1, i1* %404, i32 %399
  %406 = load i1, i1* %405, align 1
  %407 = or i1 %391, %406
  %408 = getelementptr %array, %array* %b, i32 0, i32 2
  %409 = load %dimension_descriptor*, %dimension_descriptor** %408, align 8
  %410 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %409, i32 0
  %411 = getelementptr %dimension_descriptor, %dimension_descriptor* %410, i32 0, i32 1
  %412 = load i32, i32* %411, align 4
  %413 = sub i32 3, %412
  %414 = mul i32 1, %413
  %415 = add i32 0, %414
  %416 = getelementptr %dimension_descriptor, %dimension_descriptor* %410, i32 0, i32 3
  %417 = load i32, i32* %416, align 4
  %418 = mul i32 1, %417
  %419 = getelementptr %array, %array* %b, i32 0, i32 0
  %420 = load i1*, i1** %419, align 8
  %421 = getelementptr inbounds i1, i1* %420, i32 %415
  %422 = load i1, i1* %421, align 1
  %423 = or i1 %407, %422
  %424 = getelementptr %array, %array* %a, i32 0, i32 2
  %425 = load %dimension_descriptor*, %dimension_descriptor** %424, align 8
  %426 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %425, i32 0
  %427 = getelementptr %dimension_descriptor, %dimension_descriptor* %426, i32 0, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = sub i32 1, %428
  %430 = mul i32 1, %429
  %431 = add i32 0, %430
  %432 = getelementptr %dimension_descriptor, %dimension_descriptor* %426, i32 0, i32 3
  %433 = load i32, i32* %432, align 4
  %434 = mul i32 1, %433
  %435 = getelementptr %array, %array* %a, i32 0, i32 0
  %436 = load i1*, i1** %435, align 8
  %437 = getelementptr inbounds i1, i1* %436, i32 %431
  %438 = load i1, i1* %437, align 1
  %439 = or i1 %423, %438
  store i1 %439, i1* %376, align 1
  %440 = getelementptr %array, %array* %b, i32 0, i32 2
  %441 = load %dimension_descriptor*, %dimension_descriptor** %440, align 8
  %442 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %441, i32 0
  %443 = getelementptr %dimension_descriptor, %dimension_descriptor* %442, i32 0, i32 1
  %444 = load i32, i32* %443, align 4
  %445 = sub i32 4, %444
  %446 = mul i32 1, %445
  %447 = add i32 0, %446
  %448 = getelementptr %dimension_descriptor, %dimension_descriptor* %442, i32 0, i32 3
  %449 = load i32, i32* %448, align 4
  %450 = mul i32 1, %449
  %451 = getelementptr %array, %array* %b, i32 0, i32 0
  %452 = load i1*, i1** %451, align 8
  %453 = getelementptr inbounds i1, i1* %452, i32 %447
  %454 = load i1, i1* %453, align 1
  %455 = xor i1 %454, true
  br i1 %455, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %456 = getelementptr %array, %array* %b, i32 0, i32 2
  %457 = load %dimension_descriptor*, %dimension_descriptor** %456, align 8
  %458 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %457, i32 0
  %459 = getelementptr %dimension_descriptor, %dimension_descriptor* %458, i32 0, i32 1
  %460 = load i32, i32* %459, align 4
  %461 = sub i32 4, %460
  %462 = mul i32 1, %461
  %463 = add i32 0, %462
  %464 = getelementptr %dimension_descriptor, %dimension_descriptor* %458, i32 0, i32 3
  %465 = load i32, i32* %464, align 4
  %466 = mul i32 1, %465
  %467 = getelementptr %array, %array* %b, i32 0, i32 0
  %468 = load i1*, i1** %467, align 8
  %469 = getelementptr inbounds i1, i1* %468, i32 %463
  %470 = getelementptr %array, %array* %a, i32 0, i32 2
  %471 = load %dimension_descriptor*, %dimension_descriptor** %470, align 8
  %472 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %471, i32 0
  %473 = getelementptr %dimension_descriptor, %dimension_descriptor* %472, i32 0, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = sub i32 1, %474
  %476 = mul i32 1, %475
  %477 = add i32 0, %476
  %478 = getelementptr %dimension_descriptor, %dimension_descriptor* %472, i32 0, i32 3
  %479 = load i32, i32* %478, align 4
  %480 = mul i32 1, %479
  %481 = getelementptr %array, %array* %a, i32 0, i32 0
  %482 = load i1*, i1** %481, align 8
  %483 = getelementptr inbounds i1, i1* %482, i32 %477
  %484 = load i1, i1* %483, align 1
  store i1 %484, i1* %469, align 1
  %485 = getelementptr %array, %array* %b, i32 0, i32 2
  %486 = load %dimension_descriptor*, %dimension_descriptor** %485, align 8
  %487 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %486, i32 0
  %488 = getelementptr %dimension_descriptor, %dimension_descriptor* %487, i32 0, i32 1
  %489 = load i32, i32* %488, align 4
  %490 = sub i32 4, %489
  %491 = mul i32 1, %490
  %492 = add i32 0, %491
  %493 = getelementptr %dimension_descriptor, %dimension_descriptor* %487, i32 0, i32 3
  %494 = load i32, i32* %493, align 4
  %495 = mul i32 1, %494
  %496 = getelementptr %array, %array* %b, i32 0, i32 0
  %497 = load i1*, i1** %496, align 8
  %498 = getelementptr inbounds i1, i1* %497, i32 %492
  %499 = load i1, i1* %498, align 1
  %500 = xor i1 %499, true
  br i1 %500, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end47, %ifcont39
  %501 = load i32, i32* %i, align 4
  %502 = add i32 %501, 1
  %503 = icmp sle i32 %502, 2
  br i1 %503, label %loop.body41, label %loop.end48

loop.body41:                                      ; preds = %loop.head40
  %504 = load i32, i32* %i, align 4
  %505 = add i32 %504, 1
  store i32 %505, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %ifcont46, %loop.body41
  %506 = load i32, i32* %j, align 4
  %507 = add i32 %506, 1
  %508 = icmp sle i32 %507, 2
  br i1 %508, label %loop.body43, label %loop.end47

loop.body43:                                      ; preds = %loop.head42
  %509 = load i32, i32* %j, align 4
  %510 = add i32 %509, 1
  store i32 %510, i32* %j, align 4
  %511 = load i32, i32* %i, align 4
  %512 = load i32, i32* %j, align 4
  %513 = add i32 %511, %512
  %514 = load i32, i32* %i, align 4
  %515 = load i32, i32* %j, align 4
  %516 = add i32 %514, %515
  %517 = udiv i32 %516, 2
  %518 = mul i32 2, %517
  %519 = sub i32 %513, %518
  %520 = icmp eq i32 %519, 1
  br i1 %520, label %then44, label %else45

then44:                                           ; preds = %loop.body43
  %521 = load i32, i32* %i, align 4
  %522 = load i32, i32* %j, align 4
  %523 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %524 = load %dimension_descriptor*, %dimension_descriptor** %523, align 8
  %525 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %524, i32 0
  %526 = getelementptr %dimension_descriptor, %dimension_descriptor* %525, i32 0, i32 1
  %527 = load i32, i32* %526, align 4
  %528 = sub i32 %521, %527
  %529 = mul i32 1, %528
  %530 = add i32 0, %529
  %531 = getelementptr %dimension_descriptor, %dimension_descriptor* %525, i32 0, i32 3
  %532 = load i32, i32* %531, align 4
  %533 = mul i32 1, %532
  %534 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %524, i32 1
  %535 = getelementptr %dimension_descriptor, %dimension_descriptor* %534, i32 0, i32 1
  %536 = load i32, i32* %535, align 4
  %537 = sub i32 %522, %536
  %538 = mul i32 %533, %537
  %539 = add i32 %530, %538
  %540 = getelementptr %dimension_descriptor, %dimension_descriptor* %534, i32 0, i32 3
  %541 = load i32, i32* %540, align 4
  %542 = mul i32 %533, %541
  %543 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %544 = load i1*, i1** %543, align 8
  %545 = getelementptr inbounds i1, i1* %544, i32 %539
  store i1 true, i1* %545, align 1
  br label %ifcont46

else45:                                           ; preds = %loop.body43
  %546 = load i32, i32* %i, align 4
  %547 = load i32, i32* %j, align 4
  %548 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %549 = load %dimension_descriptor*, %dimension_descriptor** %548, align 8
  %550 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %549, i32 0
  %551 = getelementptr %dimension_descriptor, %dimension_descriptor* %550, i32 0, i32 1
  %552 = load i32, i32* %551, align 4
  %553 = sub i32 %546, %552
  %554 = mul i32 1, %553
  %555 = add i32 0, %554
  %556 = getelementptr %dimension_descriptor, %dimension_descriptor* %550, i32 0, i32 3
  %557 = load i32, i32* %556, align 4
  %558 = mul i32 1, %557
  %559 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %549, i32 1
  %560 = getelementptr %dimension_descriptor, %dimension_descriptor* %559, i32 0, i32 1
  %561 = load i32, i32* %560, align 4
  %562 = sub i32 %547, %561
  %563 = mul i32 %558, %562
  %564 = add i32 %555, %563
  %565 = getelementptr %dimension_descriptor, %dimension_descriptor* %559, i32 0, i32 3
  %566 = load i32, i32* %565, align 4
  %567 = mul i32 %558, %566
  %568 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %569 = load i1*, i1** %568, align 8
  %570 = getelementptr inbounds i1, i1* %569, i32 %564
  store i1 false, i1* %570, align 1
  br label %ifcont46

ifcont46:                                         ; preds = %else45, %then44
  br label %loop.head42

loop.end47:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end48:                                       ; preds = %loop.head40
  %571 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %572 = load %dimension_descriptor*, %dimension_descriptor** %571, align 8
  %573 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %572, i32 0
  %574 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 1
  %575 = load i32, i32* %574, align 4
  %576 = sub i32 1, %575
  %577 = mul i32 1, %576
  %578 = add i32 0, %577
  %579 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 3
  %580 = load i32, i32* %579, align 4
  %581 = mul i32 1, %580
  %582 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %572, i32 1
  %583 = getelementptr %dimension_descriptor, %dimension_descriptor* %582, i32 0, i32 1
  %584 = load i32, i32* %583, align 4
  %585 = sub i32 1, %584
  %586 = mul i32 %581, %585
  %587 = add i32 %578, %586
  %588 = getelementptr %dimension_descriptor, %dimension_descriptor* %582, i32 0, i32 3
  %589 = load i32, i32* %588, align 4
  %590 = mul i32 %581, %589
  %591 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %592 = load i1*, i1** %591, align 8
  %593 = getelementptr inbounds i1, i1* %592, i32 %587
  %594 = load i1, i1* %593, align 1
  br i1 %594, label %then49, label %else50

then49:                                           ; preds = %loop.end48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %loop.end48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %595 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %596 = load %dimension_descriptor*, %dimension_descriptor** %595, align 8
  %597 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %596, i32 0
  %598 = getelementptr %dimension_descriptor, %dimension_descriptor* %597, i32 0, i32 1
  %599 = load i32, i32* %598, align 4
  %600 = sub i32 1, %599
  %601 = mul i32 1, %600
  %602 = add i32 0, %601
  %603 = getelementptr %dimension_descriptor, %dimension_descriptor* %597, i32 0, i32 3
  %604 = load i32, i32* %603, align 4
  %605 = mul i32 1, %604
  %606 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %596, i32 1
  %607 = getelementptr %dimension_descriptor, %dimension_descriptor* %606, i32 0, i32 1
  %608 = load i32, i32* %607, align 4
  %609 = sub i32 2, %608
  %610 = mul i32 %605, %609
  %611 = add i32 %602, %610
  %612 = getelementptr %dimension_descriptor, %dimension_descriptor* %606, i32 0, i32 3
  %613 = load i32, i32* %612, align 4
  %614 = mul i32 %605, %613
  %615 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %616 = load i1*, i1** %615, align 8
  %617 = getelementptr inbounds i1, i1* %616, i32 %611
  %618 = load i1, i1* %617, align 1
  %619 = xor i1 %618, true
  br i1 %619, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %620 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %621 = load %dimension_descriptor*, %dimension_descriptor** %620, align 8
  %622 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %621, i32 0
  %623 = getelementptr %dimension_descriptor, %dimension_descriptor* %622, i32 0, i32 1
  %624 = load i32, i32* %623, align 4
  %625 = sub i32 2, %624
  %626 = mul i32 1, %625
  %627 = add i32 0, %626
  %628 = getelementptr %dimension_descriptor, %dimension_descriptor* %622, i32 0, i32 3
  %629 = load i32, i32* %628, align 4
  %630 = mul i32 1, %629
  %631 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %621, i32 1
  %632 = getelementptr %dimension_descriptor, %dimension_descriptor* %631, i32 0, i32 1
  %633 = load i32, i32* %632, align 4
  %634 = sub i32 1, %633
  %635 = mul i32 %630, %634
  %636 = add i32 %627, %635
  %637 = getelementptr %dimension_descriptor, %dimension_descriptor* %631, i32 0, i32 3
  %638 = load i32, i32* %637, align 4
  %639 = mul i32 %630, %638
  %640 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %641 = load i1*, i1** %640, align 8
  %642 = getelementptr inbounds i1, i1* %641, i32 %636
  %643 = load i1, i1* %642, align 1
  %644 = xor i1 %643, true
  br i1 %644, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  %645 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %646 = load %dimension_descriptor*, %dimension_descriptor** %645, align 8
  %647 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %646, i32 0
  %648 = getelementptr %dimension_descriptor, %dimension_descriptor* %647, i32 0, i32 1
  %649 = load i32, i32* %648, align 4
  %650 = sub i32 2, %649
  %651 = mul i32 1, %650
  %652 = add i32 0, %651
  %653 = getelementptr %dimension_descriptor, %dimension_descriptor* %647, i32 0, i32 3
  %654 = load i32, i32* %653, align 4
  %655 = mul i32 1, %654
  %656 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %646, i32 1
  %657 = getelementptr %dimension_descriptor, %dimension_descriptor* %656, i32 0, i32 1
  %658 = load i32, i32* %657, align 4
  %659 = sub i32 2, %658
  %660 = mul i32 %655, %659
  %661 = add i32 %652, %660
  %662 = getelementptr %dimension_descriptor, %dimension_descriptor* %656, i32 0, i32 3
  %663 = load i32, i32* %662, align 4
  %664 = mul i32 %655, %663
  %665 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %666 = load i1*, i1** %665, align 8
  %667 = getelementptr inbounds i1, i1* %666, i32 %661
  %668 = load i1, i1* %667, align 1
  br i1 %668, label %then58, label %else59

then58:                                           ; preds = %ifcont57
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont60

else59:                                           ; preds = %ifcont57
  br label %ifcont60

ifcont60:                                         ; preds = %else59, %then58
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
