; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { %complex_4*, i32, [3 x %dimension_descriptor], i1 }
%complex_4 = type { float, float }
%array.1 = type { i32*, i32, [3 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define void @check(%array.0* %c, i32* %op_code) {
.entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %left = alloca float, align 4
  %right = alloca float, align 4
  %0 = alloca %dimension_descriptor*, align 8
  %1 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  store %dimension_descriptor* %2, %dimension_descriptor** %0, align 8
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %0, i32* %3)
  %5 = sub i32 %4, 1
  store i32 %5, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end14, %.entry
  %6 = load i32, i32* %i, align 4
  %7 = add i32 %6, 1
  %8 = alloca %dimension_descriptor*, align 8
  %9 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %10 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %9, i32 0, i32 0
  store %dimension_descriptor* %10, %dimension_descriptor** %8, align 8
  %11 = alloca i32, align 4
  store i32 1, i32* %11, align 4
  %12 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %8, i32* %11)
  %13 = icmp sle i32 %7, %12
  br i1 %13, label %loop.body, label %loop.end15

loop.body:                                        ; preds = %loop.head
  %14 = load i32, i32* %i, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %i, align 4
  %16 = alloca %dimension_descriptor*, align 8
  %17 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %18 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %17, i32 0, i32 0
  store %dimension_descriptor* %18, %dimension_descriptor** %16, align 8
  %19 = alloca i32, align 4
  store i32 2, i32* %19, align 4
  %20 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %16, i32* %19)
  %21 = sub i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %22 = load i32, i32* %j, align 4
  %23 = add i32 %22, 1
  %24 = alloca %dimension_descriptor*, align 8
  %25 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %26 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %25, i32 0, i32 0
  store %dimension_descriptor* %26, %dimension_descriptor** %24, align 8
  %27 = alloca i32, align 4
  store i32 2, i32* %27, align 4
  %28 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %24, i32* %27)
  %29 = icmp sle i32 %23, %28
  br i1 %29, label %loop.body2, label %loop.end14

loop.body2:                                       ; preds = %loop.head1
  %30 = load i32, i32* %j, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %j, align 4
  %32 = alloca %dimension_descriptor*, align 8
  %33 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %34 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %33, i32 0, i32 0
  store %dimension_descriptor* %34, %dimension_descriptor** %32, align 8
  %35 = alloca i32, align 4
  store i32 3, i32* %35, align 4
  %36 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %32, i32* %35)
  %37 = sub i32 %36, 1
  store i32 %37, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %ifcont13, %loop.body2
  %38 = load i32, i32* %k, align 4
  %39 = add i32 %38, 1
  %40 = alloca %dimension_descriptor*, align 8
  %41 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %42 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %41, i32 0, i32 0
  store %dimension_descriptor* %42, %dimension_descriptor** %40, align 8
  %43 = alloca i32, align 4
  store i32 3, i32* %43, align 4
  %44 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %40, i32* %43)
  %45 = icmp sle i32 %39, %44
  br i1 %45, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %46 = load i32, i32* %k, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %k, align 4
  %48 = load i32, i32* %op_code, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %then, label %else6

then:                                             ; preds = %loop.body4
  %50 = load i32, i32* %i, align 4
  %51 = load i32, i32* %j, align 4
  %52 = add i32 %50, %51
  %53 = load i32, i32* %k, align 4
  %54 = add i32 %52, %53
  %55 = sitofp i32 %54 to float
  store float %55, float* %left, align 4
  %56 = load i32, i32* %i, align 4
  %57 = load i32, i32* %j, align 4
  %58 = mul i32 %56, %57
  %59 = load i32, i32* %k, align 4
  %60 = mul i32 %58, %59
  %61 = sitofp i32 %60 to float
  store float %61, float* %right, align 4
  %62 = load i32, i32* %i, align 4
  %63 = load i32, i32* %j, align 4
  %64 = load i32, i32* %k, align 4
  %65 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %66 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %65, i32 0, i32 0
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = sub i32 %62, %68
  %70 = mul i32 1, %69
  %71 = add i32 0, %70
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %66, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = mul i32 1, %73
  %75 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %65, i32 0, i32 1
  %76 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub i32 %63, %77
  %79 = mul i32 %74, %78
  %80 = add i32 %71, %79
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %75, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = mul i32 %74, %82
  %84 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %65, i32 0, i32 2
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sub i32 %64, %86
  %88 = mul i32 %83, %87
  %89 = add i32 %80, %88
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 %83, %91
  %93 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %94 = load %complex_4*, %complex_4** %93, align 8
  %95 = getelementptr inbounds %complex_4, %complex_4* %94, i32 %89
  %96 = load %complex_4, %complex_4* %95, align 4
  %97 = load float, float* %left, align 4
  %98 = alloca %complex_4, align 8
  %99 = getelementptr %complex_4, %complex_4* %98, i32 0, i32 0
  %100 = getelementptr %complex_4, %complex_4* %98, i32 0, i32 1
  store float %97, float* %99, align 4
  store float 0.000000e+00, float* %100, align 4
  %101 = load %complex_4, %complex_4* %98, align 4
  %102 = load float, float* %right, align 4
  %103 = alloca %complex_4, align 8
  %104 = getelementptr %complex_4, %complex_4* %103, i32 0, i32 0
  %105 = getelementptr %complex_4, %complex_4* %103, i32 0, i32 1
  store float %102, float* %104, align 4
  store float 0.000000e+00, float* %105, align 4
  %106 = load %complex_4, %complex_4* %103, align 4
  %107 = alloca %complex_4, align 8
  %108 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 0
  %109 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 1
  store float 0.000000e+00, float* %108, align 4
  store float 1.000000e+00, float* %109, align 4
  %110 = load %complex_4, %complex_4* %107, align 4
  %111 = alloca %complex_4, align 8
  store %complex_4 %106, %complex_4* %111, align 4
  %112 = alloca %complex_4, align 8
  store %complex_4 %110, %complex_4* %112, align 4
  %113 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %111, %complex_4* %112, %complex_4* %113)
  %114 = load %complex_4, %complex_4* %113, align 4
  %115 = alloca %complex_4, align 8
  store %complex_4 %101, %complex_4* %115, align 4
  %116 = alloca %complex_4, align 8
  store %complex_4 %114, %complex_4* %116, align 4
  %117 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %115, %complex_4* %116, %complex_4* %117)
  %118 = load %complex_4, %complex_4* %117, align 4
  %119 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %119, align 4
  %120 = getelementptr %complex_4, %complex_4* %119, i32 0, i32 0
  %121 = load float, float* %120, align 4
  %122 = alloca %complex_4, align 8
  store %complex_4 %118, %complex_4* %122, align 4
  %123 = getelementptr %complex_4, %complex_4* %122, i32 0, i32 0
  %124 = load float, float* %123, align 4
  %125 = alloca %complex_4, align 8
  store %complex_4 %96, %complex_4* %125, align 4
  %126 = getelementptr %complex_4, %complex_4* %125, i32 0, i32 1
  %127 = load float, float* %126, align 4
  %128 = alloca %complex_4, align 8
  store %complex_4 %118, %complex_4* %128, align 4
  %129 = getelementptr %complex_4, %complex_4* %128, i32 0, i32 1
  %130 = load float, float* %129, align 4
  %131 = fcmp une float %121, %124
  %132 = fcmp une float %127, %130
  %133 = and i1 %131, %132
  br i1 %133, label %then5, label %else

then5:                                            ; preds = %then
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %then
  br label %ifcont

ifcont:                                           ; preds = %else, %then5
  br label %ifcont13

else6:                                            ; preds = %loop.body4
  %134 = load i32, i32* %op_code, align 4
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %then7, label %else11

then7:                                            ; preds = %else6
  %136 = load i32, i32* %i, align 4
  %137 = load i32, i32* %j, align 4
  %138 = add i32 %136, %137
  %139 = load i32, i32* %k, align 4
  %140 = add i32 %138, %139
  %141 = sitofp i32 %140 to float
  store float %141, float* %left, align 4
  %142 = load i32, i32* %i, align 4
  %143 = load i32, i32* %j, align 4
  %144 = mul i32 %142, %143
  %145 = load i32, i32* %k, align 4
  %146 = mul i32 %144, %145
  %147 = sitofp i32 %146 to float
  store float %147, float* %right, align 4
  %148 = load i32, i32* %i, align 4
  %149 = load i32, i32* %j, align 4
  %150 = load i32, i32* %k, align 4
  %151 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %152 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %151, i32 0, i32 0
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %148, %154
  %156 = mul i32 1, %155
  %157 = add i32 0, %156
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 3
  %159 = load i32, i32* %158, align 4
  %160 = mul i32 1, %159
  %161 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %151, i32 0, i32 1
  %162 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = sub i32 %149, %163
  %165 = mul i32 %160, %164
  %166 = add i32 %157, %165
  %167 = getelementptr %dimension_descriptor, %dimension_descriptor* %161, i32 0, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = mul i32 %160, %168
  %170 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %151, i32 0, i32 2
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sub i32 %150, %172
  %174 = mul i32 %169, %173
  %175 = add i32 %166, %174
  %176 = getelementptr %dimension_descriptor, %dimension_descriptor* %170, i32 0, i32 3
  %177 = load i32, i32* %176, align 4
  %178 = mul i32 %169, %177
  %179 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %180 = load %complex_4*, %complex_4** %179, align 8
  %181 = getelementptr inbounds %complex_4, %complex_4* %180, i32 %175
  %182 = load %complex_4, %complex_4* %181, align 4
  %183 = load float, float* %left, align 4
  %184 = fsub float 0.000000e+00, %183
  %185 = alloca %complex_4, align 8
  %186 = getelementptr %complex_4, %complex_4* %185, i32 0, i32 0
  %187 = getelementptr %complex_4, %complex_4* %185, i32 0, i32 1
  store float %184, float* %186, align 4
  store float 0.000000e+00, float* %187, align 4
  %188 = load %complex_4, %complex_4* %185, align 4
  %189 = load float, float* %right, align 4
  %190 = alloca %complex_4, align 8
  %191 = getelementptr %complex_4, %complex_4* %190, i32 0, i32 0
  %192 = getelementptr %complex_4, %complex_4* %190, i32 0, i32 1
  store float %189, float* %191, align 4
  store float 0.000000e+00, float* %192, align 4
  %193 = load %complex_4, %complex_4* %190, align 4
  %194 = alloca %complex_4, align 8
  %195 = getelementptr %complex_4, %complex_4* %194, i32 0, i32 0
  %196 = getelementptr %complex_4, %complex_4* %194, i32 0, i32 1
  store float 0.000000e+00, float* %195, align 4
  store float 1.000000e+00, float* %196, align 4
  %197 = load %complex_4, %complex_4* %194, align 4
  %198 = alloca %complex_4, align 8
  store %complex_4 %193, %complex_4* %198, align 4
  %199 = alloca %complex_4, align 8
  store %complex_4 %197, %complex_4* %199, align 4
  %200 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %198, %complex_4* %199, %complex_4* %200)
  %201 = load %complex_4, %complex_4* %200, align 4
  %202 = alloca %complex_4, align 8
  store %complex_4 %188, %complex_4* %202, align 4
  %203 = alloca %complex_4, align 8
  store %complex_4 %201, %complex_4* %203, align 4
  %204 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_sub(%complex_4* %202, %complex_4* %203, %complex_4* %204)
  %205 = load %complex_4, %complex_4* %204, align 4
  %206 = alloca %complex_4, align 8
  store %complex_4 %182, %complex_4* %206, align 4
  %207 = getelementptr %complex_4, %complex_4* %206, i32 0, i32 0
  %208 = load float, float* %207, align 4
  %209 = alloca %complex_4, align 8
  store %complex_4 %205, %complex_4* %209, align 4
  %210 = getelementptr %complex_4, %complex_4* %209, i32 0, i32 0
  %211 = load float, float* %210, align 4
  %212 = alloca %complex_4, align 8
  store %complex_4 %182, %complex_4* %212, align 4
  %213 = getelementptr %complex_4, %complex_4* %212, i32 0, i32 1
  %214 = load float, float* %213, align 4
  %215 = alloca %complex_4, align 8
  store %complex_4 %205, %complex_4* %215, align 4
  %216 = getelementptr %complex_4, %complex_4* %215, i32 0, i32 1
  %217 = load float, float* %216, align 4
  %218 = fcmp une float %208, %211
  %219 = fcmp une float %214, %217
  %220 = and i1 %218, %219
  br i1 %220, label %then8, label %else9

then8:                                            ; preds = %then7
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont10

else9:                                            ; preds = %then7
  br label %ifcont10

ifcont10:                                         ; preds = %else9, %then8
  br label %ifcont12

else11:                                           ; preds = %else6
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %ifcont10
  br label %ifcont13

ifcont13:                                         ; preds = %ifcont12, %ifcont
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end14:                                       ; preds = %loop.head1
  br label %loop.head

loop.end15:                                       ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end15
  ret void
}

declare void @_lfortran_complex_mul(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub(%complex_4*, %complex_4*, %complex_4*, ...)

define i32 @main() {
.entry:
  %call_arg_value97 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %"1_k" = alloca i32, align 4
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %"2_k" = alloca i32, align 4
  %"2_t" = alloca i32, align 4
  %"2_v" = alloca i32, align 4
  %"3_k" = alloca i32, align 4
  %"3_t" = alloca i32, align 4
  %"3_v" = alloca i32, align 4
  %a = alloca %array.1, align 8
  %0 = getelementptr %array.1, %array.1* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %2 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 2, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 1
  %12 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 0
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 1
  %14 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 2
  %15 = getelementptr %dimension_descriptor, %dimension_descriptor* %11, i32 0, i32 3
  store i32 1, i32* %12, align 4
  store i32 1, i32* %13, align 4
  store i32 2, i32* %14, align 4
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %13, align 4
  %18 = sub i32 %16, %17
  %19 = add i32 %18, 1
  store i32 %19, i32* %15, align 4
  %20 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 0
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 1
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 2
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %20, i32 0, i32 3
  store i32 1, i32* %21, align 4
  store i32 1, i32* %22, align 4
  store i32 1, i32* %23, align 4
  %25 = load i32, i32* %23, align 4
  %26 = load i32, i32* %22, align 4
  %27 = sub i32 %25, %26
  %28 = add i32 %27, 1
  store i32 %28, i32* %24, align 4
  %29 = alloca i32, align 4
  store i32 4, i32* %29, align 4
  %30 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %31 = load i32, i32* %29, align 4
  %32 = alloca i32, i32 %31, align 4
  store i32* %32, i32** %30, align 8
  %b = alloca %array.1, align 8
  %33 = getelementptr %array.1, %array.1* %b, i32 0, i32 1
  store i32 0, i32* %33, align 4
  %34 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %35 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %34, i32 0, i32 0
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 0
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 1
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 2
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %35, i32 0, i32 3
  store i32 1, i32* %36, align 4
  store i32 1, i32* %37, align 4
  store i32 2, i32* %38, align 4
  %40 = load i32, i32* %38, align 4
  %41 = load i32, i32* %37, align 4
  %42 = sub i32 %40, %41
  %43 = add i32 %42, 1
  store i32 %43, i32* %39, align 4
  %44 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %34, i32 0, i32 1
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  store i32 1, i32* %45, align 4
  store i32 1, i32* %46, align 4
  store i32 2, i32* %47, align 4
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %46, align 4
  %51 = sub i32 %49, %50
  %52 = add i32 %51, 1
  store i32 %52, i32* %48, align 4
  %53 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %34, i32 0, i32 2
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 3
  store i32 1, i32* %54, align 4
  store i32 1, i32* %55, align 4
  store i32 1, i32* %56, align 4
  %58 = load i32, i32* %56, align 4
  %59 = load i32, i32* %55, align 4
  %60 = sub i32 %58, %59
  %61 = add i32 %60, 1
  store i32 %61, i32* %57, align 4
  %62 = alloca i32, align 4
  store i32 4, i32* %62, align 4
  %63 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %64 = load i32, i32* %62, align 4
  %65 = alloca i32, i32 %64, align 4
  store i32* %65, i32** %63, align 8
  %c = alloca %array.0, align 8
  %66 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %66, align 4
  %67 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %68 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %67, i32 0, i32 0
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 2
  %72 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  store i32 1, i32* %69, align 4
  store i32 1, i32* %70, align 4
  store i32 2, i32* %71, align 4
  %73 = load i32, i32* %71, align 4
  %74 = load i32, i32* %70, align 4
  %75 = sub i32 %73, %74
  %76 = add i32 %75, 1
  store i32 %76, i32* %72, align 4
  %77 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %67, i32 0, i32 1
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 1
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 2
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 3
  store i32 1, i32* %78, align 4
  store i32 1, i32* %79, align 4
  store i32 2, i32* %80, align 4
  %82 = load i32, i32* %80, align 4
  %83 = load i32, i32* %79, align 4
  %84 = sub i32 %82, %83
  %85 = add i32 %84, 1
  store i32 %85, i32* %81, align 4
  %86 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %67, i32 0, i32 2
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 0
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 1
  %89 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 2
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %86, i32 0, i32 3
  store i32 1, i32* %87, align 4
  store i32 1, i32* %88, align 4
  store i32 1, i32* %89, align 4
  %91 = load i32, i32* %89, align 4
  %92 = load i32, i32* %88, align 4
  %93 = sub i32 %91, %92
  %94 = add i32 %93, 1
  store i32 %94, i32* %90, align 4
  %95 = alloca i32, align 4
  store i32 4, i32* %95, align 4
  %96 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %97 = load i32, i32* %95, align 4
  %98 = alloca %complex_4, i32 %97, align 8
  store %complex_4* %98, %complex_4** %96, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %"~0_implicit_cast_res" = alloca %array.0, align 8
  %99 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %99, align 4
  %100 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 2
  %101 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %100, i32 0, i32 0
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 0
  %103 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 1
  %104 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 2
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 3
  store i32 1, i32* %102, align 4
  store i32 1, i32* %103, align 4
  store i32 2, i32* %104, align 4
  %106 = load i32, i32* %104, align 4
  %107 = load i32, i32* %103, align 4
  %108 = sub i32 %106, %107
  %109 = add i32 %108, 1
  store i32 %109, i32* %105, align 4
  %110 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %100, i32 0, i32 1
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 0
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 1
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 2
  %114 = getelementptr %dimension_descriptor, %dimension_descriptor* %110, i32 0, i32 3
  store i32 1, i32* %111, align 4
  store i32 1, i32* %112, align 4
  store i32 2, i32* %113, align 4
  %115 = load i32, i32* %113, align 4
  %116 = load i32, i32* %112, align 4
  %117 = sub i32 %115, %116
  %118 = add i32 %117, 1
  store i32 %118, i32* %114, align 4
  %119 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %100, i32 0, i32 2
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 0
  %121 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 1
  %122 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 2
  %123 = getelementptr %dimension_descriptor, %dimension_descriptor* %119, i32 0, i32 3
  store i32 1, i32* %120, align 4
  store i32 1, i32* %121, align 4
  store i32 1, i32* %122, align 4
  %124 = load i32, i32* %122, align 4
  %125 = load i32, i32* %121, align 4
  %126 = sub i32 %124, %125
  %127 = add i32 %126, 1
  store i32 %127, i32* %123, align 4
  %128 = alloca i32, align 4
  store i32 4, i32* %128, align 4
  %129 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 0
  %130 = load i32, i32* %128, align 4
  %131 = alloca %complex_4, i32 %130, align 8
  store %complex_4* %131, %complex_4** %129, align 8
  %"~1_implicit_cast_res" = alloca %array.0, align 8
  %132 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %132, align 4
  %133 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 2
  %134 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %133, i32 0, i32 0
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 0
  %136 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 1
  %137 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 2
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %134, i32 0, i32 3
  store i32 1, i32* %135, align 4
  store i32 1, i32* %136, align 4
  store i32 2, i32* %137, align 4
  %139 = load i32, i32* %137, align 4
  %140 = load i32, i32* %136, align 4
  %141 = sub i32 %139, %140
  %142 = add i32 %141, 1
  store i32 %142, i32* %138, align 4
  %143 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %133, i32 0, i32 1
  %144 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 0
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 1
  %146 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 2
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %143, i32 0, i32 3
  store i32 1, i32* %144, align 4
  store i32 1, i32* %145, align 4
  store i32 2, i32* %146, align 4
  %148 = load i32, i32* %146, align 4
  %149 = load i32, i32* %145, align 4
  %150 = sub i32 %148, %149
  %151 = add i32 %150, 1
  store i32 %151, i32* %147, align 4
  %152 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %133, i32 0, i32 2
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 0
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 2
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 3
  store i32 1, i32* %153, align 4
  store i32 1, i32* %154, align 4
  store i32 1, i32* %155, align 4
  %157 = load i32, i32* %155, align 4
  %158 = load i32, i32* %154, align 4
  %159 = sub i32 %157, %158
  %160 = add i32 %159, 1
  store i32 %160, i32* %156, align 4
  %161 = alloca i32, align 4
  store i32 4, i32* %161, align 4
  %162 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 0
  %163 = load i32, i32* %161, align 4
  %164 = alloca %complex_4, i32 %163, align 8
  store %complex_4* %164, %complex_4** %162, align 8
  %"~2_bin_op_res" = alloca %array.0, align 8
  %165 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 1
  store i32 0, i32* %165, align 4
  %166 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %167 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %166, i32 0, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 0
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 2
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 3
  store i32 1, i32* %168, align 4
  store i32 1, i32* %169, align 4
  store i32 2, i32* %170, align 4
  %172 = load i32, i32* %170, align 4
  %173 = load i32, i32* %169, align 4
  %174 = sub i32 %172, %173
  %175 = add i32 %174, 1
  store i32 %175, i32* %171, align 4
  %176 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %166, i32 0, i32 1
  %177 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 0
  %178 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 1
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 2
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %176, i32 0, i32 3
  store i32 1, i32* %177, align 4
  store i32 1, i32* %178, align 4
  store i32 2, i32* %179, align 4
  %181 = load i32, i32* %179, align 4
  %182 = load i32, i32* %178, align 4
  %183 = sub i32 %181, %182
  %184 = add i32 %183, 1
  store i32 %184, i32* %180, align 4
  %185 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %166, i32 0, i32 2
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 0
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 1
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 2
  %189 = getelementptr %dimension_descriptor, %dimension_descriptor* %185, i32 0, i32 3
  store i32 1, i32* %186, align 4
  store i32 1, i32* %187, align 4
  store i32 1, i32* %188, align 4
  %190 = load i32, i32* %188, align 4
  %191 = load i32, i32* %187, align 4
  %192 = sub i32 %190, %191
  %193 = add i32 %192, 1
  store i32 %193, i32* %189, align 4
  %194 = alloca i32, align 4
  store i32 4, i32* %194, align 4
  %195 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 0
  %196 = load i32, i32* %194, align 4
  %197 = alloca %complex_4, i32 %196, align 8
  store %complex_4* %197, %complex_4** %195, align 8
  %"~3_unary_op_res" = alloca %array.1, align 8
  %198 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 1
  store i32 0, i32* %198, align 4
  %199 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %200 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %199, i32 0, i32 0
  %201 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 0
  %202 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 1
  %203 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 2
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %200, i32 0, i32 3
  store i32 1, i32* %201, align 4
  store i32 1, i32* %202, align 4
  store i32 2, i32* %203, align 4
  %205 = load i32, i32* %203, align 4
  %206 = load i32, i32* %202, align 4
  %207 = sub i32 %205, %206
  %208 = add i32 %207, 1
  store i32 %208, i32* %204, align 4
  %209 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %199, i32 0, i32 1
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 0
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 1
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 2
  %213 = getelementptr %dimension_descriptor, %dimension_descriptor* %209, i32 0, i32 3
  store i32 1, i32* %210, align 4
  store i32 1, i32* %211, align 4
  store i32 2, i32* %212, align 4
  %214 = load i32, i32* %212, align 4
  %215 = load i32, i32* %211, align 4
  %216 = sub i32 %214, %215
  %217 = add i32 %216, 1
  store i32 %217, i32* %213, align 4
  %218 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %199, i32 0, i32 2
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 0
  %220 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %221 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 2
  %222 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 3
  store i32 1, i32* %219, align 4
  store i32 1, i32* %220, align 4
  store i32 1, i32* %221, align 4
  %223 = load i32, i32* %221, align 4
  %224 = load i32, i32* %220, align 4
  %225 = sub i32 %223, %224
  %226 = add i32 %225, 1
  store i32 %226, i32* %222, align 4
  %227 = alloca i32, align 4
  store i32 4, i32* %227, align 4
  %228 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 0
  %229 = load i32, i32* %227, align 4
  %230 = alloca i32, i32 %229, align 4
  store i32* %230, i32** %228, align 8
  %"~4_implicit_cast_res" = alloca %array.0, align 8
  %231 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %231, align 4
  %232 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 2
  %233 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %232, i32 0, i32 0
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 0
  %235 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 1
  %236 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 2
  %237 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 3
  store i32 1, i32* %234, align 4
  store i32 1, i32* %235, align 4
  store i32 2, i32* %236, align 4
  %238 = load i32, i32* %236, align 4
  %239 = load i32, i32* %235, align 4
  %240 = sub i32 %238, %239
  %241 = add i32 %240, 1
  store i32 %241, i32* %237, align 4
  %242 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %232, i32 0, i32 1
  %243 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 0
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 1
  %245 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 2
  %246 = getelementptr %dimension_descriptor, %dimension_descriptor* %242, i32 0, i32 3
  store i32 1, i32* %243, align 4
  store i32 1, i32* %244, align 4
  store i32 2, i32* %245, align 4
  %247 = load i32, i32* %245, align 4
  %248 = load i32, i32* %244, align 4
  %249 = sub i32 %247, %248
  %250 = add i32 %249, 1
  store i32 %250, i32* %246, align 4
  %251 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %232, i32 0, i32 2
  %252 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 0
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 1
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 2
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %251, i32 0, i32 3
  store i32 1, i32* %252, align 4
  store i32 1, i32* %253, align 4
  store i32 1, i32* %254, align 4
  %256 = load i32, i32* %254, align 4
  %257 = load i32, i32* %253, align 4
  %258 = sub i32 %256, %257
  %259 = add i32 %258, 1
  store i32 %259, i32* %255, align 4
  %260 = alloca i32, align 4
  store i32 4, i32* %260, align 4
  %261 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 0
  %262 = load i32, i32* %260, align 4
  %263 = alloca %complex_4, i32 %262, align 8
  store %complex_4* %263, %complex_4** %261, align 8
  %"~5_unary_op_res" = alloca %array.1, align 8
  %264 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 1
  store i32 0, i32* %264, align 4
  %265 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %266 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %265, i32 0, i32 0
  %267 = getelementptr %dimension_descriptor, %dimension_descriptor* %266, i32 0, i32 0
  %268 = getelementptr %dimension_descriptor, %dimension_descriptor* %266, i32 0, i32 1
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %266, i32 0, i32 2
  %270 = getelementptr %dimension_descriptor, %dimension_descriptor* %266, i32 0, i32 3
  store i32 1, i32* %267, align 4
  store i32 1, i32* %268, align 4
  store i32 2, i32* %269, align 4
  %271 = load i32, i32* %269, align 4
  %272 = load i32, i32* %268, align 4
  %273 = sub i32 %271, %272
  %274 = add i32 %273, 1
  store i32 %274, i32* %270, align 4
  %275 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %265, i32 0, i32 1
  %276 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 0
  %277 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 1
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 2
  %279 = getelementptr %dimension_descriptor, %dimension_descriptor* %275, i32 0, i32 3
  store i32 1, i32* %276, align 4
  store i32 1, i32* %277, align 4
  store i32 2, i32* %278, align 4
  %280 = load i32, i32* %278, align 4
  %281 = load i32, i32* %277, align 4
  %282 = sub i32 %280, %281
  %283 = add i32 %282, 1
  store i32 %283, i32* %279, align 4
  %284 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %265, i32 0, i32 2
  %285 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 0
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 1
  %287 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 2
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 3
  store i32 1, i32* %285, align 4
  store i32 1, i32* %286, align 4
  store i32 1, i32* %287, align 4
  %289 = load i32, i32* %287, align 4
  %290 = load i32, i32* %286, align 4
  %291 = sub i32 %289, %290
  %292 = add i32 %291, 1
  store i32 %292, i32* %288, align 4
  %293 = alloca i32, align 4
  store i32 4, i32* %293, align 4
  %294 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 0
  %295 = load i32, i32* %293, align 4
  %296 = alloca i32, i32 %295, align 4
  store i32* %296, i32** %294, align 8
  %"~6_implicit_cast_res" = alloca %array.0, align 8
  %297 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 1
  store i32 0, i32* %297, align 4
  %298 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 2
  %299 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %298, i32 0, i32 0
  %300 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 0
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 1
  %302 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 2
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %299, i32 0, i32 3
  store i32 1, i32* %300, align 4
  store i32 1, i32* %301, align 4
  store i32 2, i32* %302, align 4
  %304 = load i32, i32* %302, align 4
  %305 = load i32, i32* %301, align 4
  %306 = sub i32 %304, %305
  %307 = add i32 %306, 1
  store i32 %307, i32* %303, align 4
  %308 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %298, i32 0, i32 1
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 0
  %310 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 1
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 2
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 3
  store i32 1, i32* %309, align 4
  store i32 1, i32* %310, align 4
  store i32 2, i32* %311, align 4
  %313 = load i32, i32* %311, align 4
  %314 = load i32, i32* %310, align 4
  %315 = sub i32 %313, %314
  %316 = add i32 %315, 1
  store i32 %316, i32* %312, align 4
  %317 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %298, i32 0, i32 2
  %318 = getelementptr %dimension_descriptor, %dimension_descriptor* %317, i32 0, i32 0
  %319 = getelementptr %dimension_descriptor, %dimension_descriptor* %317, i32 0, i32 1
  %320 = getelementptr %dimension_descriptor, %dimension_descriptor* %317, i32 0, i32 2
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %317, i32 0, i32 3
  store i32 1, i32* %318, align 4
  store i32 1, i32* %319, align 4
  store i32 1, i32* %320, align 4
  %322 = load i32, i32* %320, align 4
  %323 = load i32, i32* %319, align 4
  %324 = sub i32 %322, %323
  %325 = add i32 %324, 1
  store i32 %325, i32* %321, align 4
  %326 = alloca i32, align 4
  store i32 4, i32* %326, align 4
  %327 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 0
  %328 = load i32, i32* %326, align 4
  %329 = alloca %complex_4, i32 %328, align 8
  store %complex_4* %329, %complex_4** %327, align 8
  %"~7_bin_op_res" = alloca %array.0, align 8
  %330 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 1
  store i32 0, i32* %330, align 4
  %331 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 2
  %332 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %331, i32 0, i32 0
  %333 = getelementptr %dimension_descriptor, %dimension_descriptor* %332, i32 0, i32 0
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %332, i32 0, i32 1
  %335 = getelementptr %dimension_descriptor, %dimension_descriptor* %332, i32 0, i32 2
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %332, i32 0, i32 3
  store i32 1, i32* %333, align 4
  store i32 1, i32* %334, align 4
  store i32 2, i32* %335, align 4
  %337 = load i32, i32* %335, align 4
  %338 = load i32, i32* %334, align 4
  %339 = sub i32 %337, %338
  %340 = add i32 %339, 1
  store i32 %340, i32* %336, align 4
  %341 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %331, i32 0, i32 1
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 0
  %343 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 1
  %344 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 2
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 3
  store i32 1, i32* %342, align 4
  store i32 1, i32* %343, align 4
  store i32 2, i32* %344, align 4
  %346 = load i32, i32* %344, align 4
  %347 = load i32, i32* %343, align 4
  %348 = sub i32 %346, %347
  %349 = add i32 %348, 1
  store i32 %349, i32* %345, align 4
  %350 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %331, i32 0, i32 2
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 0
  %352 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 1
  %353 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 2
  %354 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 3
  store i32 1, i32* %351, align 4
  store i32 1, i32* %352, align 4
  store i32 1, i32* %353, align 4
  %355 = load i32, i32* %353, align 4
  %356 = load i32, i32* %352, align 4
  %357 = sub i32 %355, %356
  %358 = add i32 %357, 1
  store i32 %358, i32* %354, align 4
  %359 = alloca i32, align 4
  store i32 4, i32* %359, align 4
  %360 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 0
  %361 = load i32, i32* %359, align 4
  %362 = alloca %complex_4, i32 %361, align 8
  store %complex_4* %362, %complex_4** %360, align 8
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.end5, %.entry
  %363 = load i32, i32* %i, align 4
  %364 = add i32 %363, 1
  %365 = icmp sle i32 %364, 2
  br i1 %365, label %loop.body, label %loop.end6

loop.body:                                        ; preds = %loop.head
  %366 = load i32, i32* %i, align 4
  %367 = add i32 %366, 1
  store i32 %367, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.end, %loop.body
  %368 = load i32, i32* %j, align 4
  %369 = add i32 %368, 1
  %370 = icmp sle i32 %369, 2
  br i1 %370, label %loop.body2, label %loop.end5

loop.body2:                                       ; preds = %loop.head1
  %371 = load i32, i32* %j, align 4
  %372 = add i32 %371, 1
  store i32 %372, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %loop.head3

loop.head3:                                       ; preds = %loop.body4, %loop.body2
  %373 = load i32, i32* %k, align 4
  %374 = add i32 %373, 1
  %375 = icmp sle i32 %374, 1
  br i1 %375, label %loop.body4, label %loop.end

loop.body4:                                       ; preds = %loop.head3
  %376 = load i32, i32* %k, align 4
  %377 = add i32 %376, 1
  store i32 %377, i32* %k, align 4
  %378 = load i32, i32* %i, align 4
  %379 = load i32, i32* %j, align 4
  %380 = load i32, i32* %k, align 4
  %381 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %382 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %381, i32 0, i32 0
  %383 = getelementptr %dimension_descriptor, %dimension_descriptor* %382, i32 0, i32 1
  %384 = load i32, i32* %383, align 4
  %385 = sub i32 %378, %384
  %386 = mul i32 1, %385
  %387 = add i32 0, %386
  %388 = getelementptr %dimension_descriptor, %dimension_descriptor* %382, i32 0, i32 3
  %389 = load i32, i32* %388, align 4
  %390 = mul i32 1, %389
  %391 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %381, i32 0, i32 1
  %392 = getelementptr %dimension_descriptor, %dimension_descriptor* %391, i32 0, i32 1
  %393 = load i32, i32* %392, align 4
  %394 = sub i32 %379, %393
  %395 = mul i32 %390, %394
  %396 = add i32 %387, %395
  %397 = getelementptr %dimension_descriptor, %dimension_descriptor* %391, i32 0, i32 3
  %398 = load i32, i32* %397, align 4
  %399 = mul i32 %390, %398
  %400 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %381, i32 0, i32 2
  %401 = getelementptr %dimension_descriptor, %dimension_descriptor* %400, i32 0, i32 1
  %402 = load i32, i32* %401, align 4
  %403 = sub i32 %380, %402
  %404 = mul i32 %399, %403
  %405 = add i32 %396, %404
  %406 = getelementptr %dimension_descriptor, %dimension_descriptor* %400, i32 0, i32 3
  %407 = load i32, i32* %406, align 4
  %408 = mul i32 %399, %407
  %409 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %410 = load i32*, i32** %409, align 8
  %411 = getelementptr inbounds i32, i32* %410, i32 %405
  %412 = load i32, i32* %i, align 4
  %413 = load i32, i32* %j, align 4
  %414 = add i32 %412, %413
  %415 = load i32, i32* %k, align 4
  %416 = add i32 %414, %415
  store i32 %416, i32* %411, align 4
  %417 = load i32, i32* %i, align 4
  %418 = load i32, i32* %j, align 4
  %419 = load i32, i32* %k, align 4
  %420 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %421 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %420, i32 0, i32 0
  %422 = getelementptr %dimension_descriptor, %dimension_descriptor* %421, i32 0, i32 1
  %423 = load i32, i32* %422, align 4
  %424 = sub i32 %417, %423
  %425 = mul i32 1, %424
  %426 = add i32 0, %425
  %427 = getelementptr %dimension_descriptor, %dimension_descriptor* %421, i32 0, i32 3
  %428 = load i32, i32* %427, align 4
  %429 = mul i32 1, %428
  %430 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %420, i32 0, i32 1
  %431 = getelementptr %dimension_descriptor, %dimension_descriptor* %430, i32 0, i32 1
  %432 = load i32, i32* %431, align 4
  %433 = sub i32 %418, %432
  %434 = mul i32 %429, %433
  %435 = add i32 %426, %434
  %436 = getelementptr %dimension_descriptor, %dimension_descriptor* %430, i32 0, i32 3
  %437 = load i32, i32* %436, align 4
  %438 = mul i32 %429, %437
  %439 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %420, i32 0, i32 2
  %440 = getelementptr %dimension_descriptor, %dimension_descriptor* %439, i32 0, i32 1
  %441 = load i32, i32* %440, align 4
  %442 = sub i32 %419, %441
  %443 = mul i32 %438, %442
  %444 = add i32 %435, %443
  %445 = getelementptr %dimension_descriptor, %dimension_descriptor* %439, i32 0, i32 3
  %446 = load i32, i32* %445, align 4
  %447 = mul i32 %438, %446
  %448 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %449 = load i32*, i32** %448, align 8
  %450 = getelementptr inbounds i32, i32* %449, i32 %444
  %451 = load i32, i32* %i, align 4
  %452 = load i32, i32* %j, align 4
  %453 = mul i32 %451, %452
  %454 = load i32, i32* %k, align 4
  %455 = mul i32 %453, %454
  store i32 %455, i32* %450, align 4
  br label %loop.head3

loop.end:                                         ; preds = %loop.head3
  br label %loop.head1

loop.end5:                                        ; preds = %loop.head1
  br label %loop.head

loop.end6:                                        ; preds = %loop.head
  %456 = alloca %dimension_descriptor*, align 8
  %457 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 2
  %458 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %457, i32 0, i32 0
  store %dimension_descriptor* %458, %dimension_descriptor** %456, align 8
  %459 = alloca i32, align 4
  store i32 1, i32* %459, align 4
  %460 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %456, i32* %459)
  %461 = sub i32 %460, 1
  store i32 %461, i32* %"1_k", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.end14, %loop.end6
  %462 = load i32, i32* %"1_k", align 4
  %463 = add i32 %462, 1
  %464 = alloca %dimension_descriptor*, align 8
  %465 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 2
  %466 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %465, i32 0, i32 0
  store %dimension_descriptor* %466, %dimension_descriptor** %464, align 8
  %467 = alloca i32, align 4
  store i32 1, i32* %467, align 4
  %468 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %464, i32* %467)
  %469 = icmp sle i32 %463, %468
  br i1 %469, label %loop.body8, label %loop.end15

loop.body8:                                       ; preds = %loop.head7
  %470 = load i32, i32* %"1_k", align 4
  %471 = add i32 %470, 1
  store i32 %471, i32* %"1_k", align 4
  %472 = alloca %dimension_descriptor*, align 8
  %473 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 2
  %474 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %473, i32 0, i32 0
  store %dimension_descriptor* %474, %dimension_descriptor** %472, align 8
  %475 = alloca i32, align 4
  store i32 2, i32* %475, align 4
  %476 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %472, i32* %475)
  %477 = sub i32 %476, 1
  store i32 %477, i32* %"2_k", align 4
  br label %loop.head9

loop.head9:                                       ; preds = %loop.end13, %loop.body8
  %478 = load i32, i32* %"2_k", align 4
  %479 = add i32 %478, 1
  %480 = alloca %dimension_descriptor*, align 8
  %481 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 2
  %482 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %481, i32 0, i32 0
  store %dimension_descriptor* %482, %dimension_descriptor** %480, align 8
  %483 = alloca i32, align 4
  store i32 2, i32* %483, align 4
  %484 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %480, i32* %483)
  %485 = icmp sle i32 %479, %484
  br i1 %485, label %loop.body10, label %loop.end14

loop.body10:                                      ; preds = %loop.head9
  %486 = load i32, i32* %"2_k", align 4
  %487 = add i32 %486, 1
  store i32 %487, i32* %"2_k", align 4
  %488 = alloca %dimension_descriptor*, align 8
  %489 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 2
  %490 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %489, i32 0, i32 0
  store %dimension_descriptor* %490, %dimension_descriptor** %488, align 8
  %491 = alloca i32, align 4
  store i32 3, i32* %491, align 4
  %492 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %488, i32* %491)
  %493 = sub i32 %492, 1
  store i32 %493, i32* %"3_k", align 4
  br label %loop.head11

loop.head11:                                      ; preds = %loop.body12, %loop.body10
  %494 = load i32, i32* %"3_k", align 4
  %495 = add i32 %494, 1
  %496 = alloca %dimension_descriptor*, align 8
  %497 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 2
  %498 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %497, i32 0, i32 0
  store %dimension_descriptor* %498, %dimension_descriptor** %496, align 8
  %499 = alloca i32, align 4
  store i32 3, i32* %499, align 4
  %500 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %496, i32* %499)
  %501 = icmp sle i32 %495, %500
  br i1 %501, label %loop.body12, label %loop.end13

loop.body12:                                      ; preds = %loop.head11
  %502 = load i32, i32* %"3_k", align 4
  %503 = add i32 %502, 1
  store i32 %503, i32* %"3_k", align 4
  %504 = load i32, i32* %"1_k", align 4
  %505 = load i32, i32* %"2_k", align 4
  %506 = load i32, i32* %"3_k", align 4
  %507 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 2
  %508 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %507, i32 0, i32 0
  %509 = getelementptr %dimension_descriptor, %dimension_descriptor* %508, i32 0, i32 1
  %510 = load i32, i32* %509, align 4
  %511 = sub i32 %504, %510
  %512 = mul i32 1, %511
  %513 = add i32 0, %512
  %514 = getelementptr %dimension_descriptor, %dimension_descriptor* %508, i32 0, i32 3
  %515 = load i32, i32* %514, align 4
  %516 = mul i32 1, %515
  %517 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %507, i32 0, i32 1
  %518 = getelementptr %dimension_descriptor, %dimension_descriptor* %517, i32 0, i32 1
  %519 = load i32, i32* %518, align 4
  %520 = sub i32 %505, %519
  %521 = mul i32 %516, %520
  %522 = add i32 %513, %521
  %523 = getelementptr %dimension_descriptor, %dimension_descriptor* %517, i32 0, i32 3
  %524 = load i32, i32* %523, align 4
  %525 = mul i32 %516, %524
  %526 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %507, i32 0, i32 2
  %527 = getelementptr %dimension_descriptor, %dimension_descriptor* %526, i32 0, i32 1
  %528 = load i32, i32* %527, align 4
  %529 = sub i32 %506, %528
  %530 = mul i32 %525, %529
  %531 = add i32 %522, %530
  %532 = getelementptr %dimension_descriptor, %dimension_descriptor* %526, i32 0, i32 3
  %533 = load i32, i32* %532, align 4
  %534 = mul i32 %525, %533
  %535 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 0
  %536 = load %complex_4*, %complex_4** %535, align 8
  %537 = getelementptr inbounds %complex_4, %complex_4* %536, i32 %531
  %538 = load i32, i32* %"1_k", align 4
  %539 = load i32, i32* %"2_k", align 4
  %540 = load i32, i32* %"3_k", align 4
  %541 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %542 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %541, i32 0, i32 0
  %543 = getelementptr %dimension_descriptor, %dimension_descriptor* %542, i32 0, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = sub i32 %538, %544
  %546 = mul i32 1, %545
  %547 = add i32 0, %546
  %548 = getelementptr %dimension_descriptor, %dimension_descriptor* %542, i32 0, i32 3
  %549 = load i32, i32* %548, align 4
  %550 = mul i32 1, %549
  %551 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %541, i32 0, i32 1
  %552 = getelementptr %dimension_descriptor, %dimension_descriptor* %551, i32 0, i32 1
  %553 = load i32, i32* %552, align 4
  %554 = sub i32 %539, %553
  %555 = mul i32 %550, %554
  %556 = add i32 %547, %555
  %557 = getelementptr %dimension_descriptor, %dimension_descriptor* %551, i32 0, i32 3
  %558 = load i32, i32* %557, align 4
  %559 = mul i32 %550, %558
  %560 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %541, i32 0, i32 2
  %561 = getelementptr %dimension_descriptor, %dimension_descriptor* %560, i32 0, i32 1
  %562 = load i32, i32* %561, align 4
  %563 = sub i32 %540, %562
  %564 = mul i32 %559, %563
  %565 = add i32 %556, %564
  %566 = getelementptr %dimension_descriptor, %dimension_descriptor* %560, i32 0, i32 3
  %567 = load i32, i32* %566, align 4
  %568 = mul i32 %559, %567
  %569 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %570 = load i32*, i32** %569, align 8
  %571 = getelementptr inbounds i32, i32* %570, i32 %565
  %572 = load i32, i32* %571, align 4
  %573 = sitofp i32 %572 to float
  %574 = alloca %complex_4, align 8
  %575 = getelementptr %complex_4, %complex_4* %574, i32 0, i32 0
  %576 = getelementptr %complex_4, %complex_4* %574, i32 0, i32 1
  store float %573, float* %575, align 4
  store float 0.000000e+00, float* %576, align 4
  %577 = load %complex_4, %complex_4* %574, align 4
  store %complex_4 %577, %complex_4* %537, align 4
  br label %loop.head11

loop.end13:                                       ; preds = %loop.head11
  br label %loop.head9

loop.end14:                                       ; preds = %loop.head9
  br label %loop.head7

loop.end15:                                       ; preds = %loop.head7
  %578 = alloca %dimension_descriptor*, align 8
  %579 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 2
  %580 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %579, i32 0, i32 0
  store %dimension_descriptor* %580, %dimension_descriptor** %578, align 8
  %581 = alloca i32, align 4
  store i32 1, i32* %581, align 4
  %582 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %578, i32* %581)
  %583 = sub i32 %582, 1
  store i32 %583, i32* %"1_k", align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.end23, %loop.end15
  %584 = load i32, i32* %"1_k", align 4
  %585 = add i32 %584, 1
  %586 = alloca %dimension_descriptor*, align 8
  %587 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 2
  %588 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %587, i32 0, i32 0
  store %dimension_descriptor* %588, %dimension_descriptor** %586, align 8
  %589 = alloca i32, align 4
  store i32 1, i32* %589, align 4
  %590 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %586, i32* %589)
  %591 = icmp sle i32 %585, %590
  br i1 %591, label %loop.body17, label %loop.end24

loop.body17:                                      ; preds = %loop.head16
  %592 = load i32, i32* %"1_k", align 4
  %593 = add i32 %592, 1
  store i32 %593, i32* %"1_k", align 4
  %594 = alloca %dimension_descriptor*, align 8
  %595 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 2
  %596 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %595, i32 0, i32 0
  store %dimension_descriptor* %596, %dimension_descriptor** %594, align 8
  %597 = alloca i32, align 4
  store i32 2, i32* %597, align 4
  %598 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %594, i32* %597)
  %599 = sub i32 %598, 1
  store i32 %599, i32* %"2_k", align 4
  br label %loop.head18

loop.head18:                                      ; preds = %loop.end22, %loop.body17
  %600 = load i32, i32* %"2_k", align 4
  %601 = add i32 %600, 1
  %602 = alloca %dimension_descriptor*, align 8
  %603 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 2
  %604 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %603, i32 0, i32 0
  store %dimension_descriptor* %604, %dimension_descriptor** %602, align 8
  %605 = alloca i32, align 4
  store i32 2, i32* %605, align 4
  %606 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %602, i32* %605)
  %607 = icmp sle i32 %601, %606
  br i1 %607, label %loop.body19, label %loop.end23

loop.body19:                                      ; preds = %loop.head18
  %608 = load i32, i32* %"2_k", align 4
  %609 = add i32 %608, 1
  store i32 %609, i32* %"2_k", align 4
  %610 = alloca %dimension_descriptor*, align 8
  %611 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 2
  %612 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %611, i32 0, i32 0
  store %dimension_descriptor* %612, %dimension_descriptor** %610, align 8
  %613 = alloca i32, align 4
  store i32 3, i32* %613, align 4
  %614 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %610, i32* %613)
  %615 = sub i32 %614, 1
  store i32 %615, i32* %"3_k", align 4
  br label %loop.head20

loop.head20:                                      ; preds = %loop.body21, %loop.body19
  %616 = load i32, i32* %"3_k", align 4
  %617 = add i32 %616, 1
  %618 = alloca %dimension_descriptor*, align 8
  %619 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 2
  %620 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %619, i32 0, i32 0
  store %dimension_descriptor* %620, %dimension_descriptor** %618, align 8
  %621 = alloca i32, align 4
  store i32 3, i32* %621, align 4
  %622 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %618, i32* %621)
  %623 = icmp sle i32 %617, %622
  br i1 %623, label %loop.body21, label %loop.end22

loop.body21:                                      ; preds = %loop.head20
  %624 = load i32, i32* %"3_k", align 4
  %625 = add i32 %624, 1
  store i32 %625, i32* %"3_k", align 4
  %626 = load i32, i32* %"1_k", align 4
  %627 = load i32, i32* %"2_k", align 4
  %628 = load i32, i32* %"3_k", align 4
  %629 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 2
  %630 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %629, i32 0, i32 0
  %631 = getelementptr %dimension_descriptor, %dimension_descriptor* %630, i32 0, i32 1
  %632 = load i32, i32* %631, align 4
  %633 = sub i32 %626, %632
  %634 = mul i32 1, %633
  %635 = add i32 0, %634
  %636 = getelementptr %dimension_descriptor, %dimension_descriptor* %630, i32 0, i32 3
  %637 = load i32, i32* %636, align 4
  %638 = mul i32 1, %637
  %639 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %629, i32 0, i32 1
  %640 = getelementptr %dimension_descriptor, %dimension_descriptor* %639, i32 0, i32 1
  %641 = load i32, i32* %640, align 4
  %642 = sub i32 %627, %641
  %643 = mul i32 %638, %642
  %644 = add i32 %635, %643
  %645 = getelementptr %dimension_descriptor, %dimension_descriptor* %639, i32 0, i32 3
  %646 = load i32, i32* %645, align 4
  %647 = mul i32 %638, %646
  %648 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %629, i32 0, i32 2
  %649 = getelementptr %dimension_descriptor, %dimension_descriptor* %648, i32 0, i32 1
  %650 = load i32, i32* %649, align 4
  %651 = sub i32 %628, %650
  %652 = mul i32 %647, %651
  %653 = add i32 %644, %652
  %654 = getelementptr %dimension_descriptor, %dimension_descriptor* %648, i32 0, i32 3
  %655 = load i32, i32* %654, align 4
  %656 = mul i32 %647, %655
  %657 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 0
  %658 = load %complex_4*, %complex_4** %657, align 8
  %659 = getelementptr inbounds %complex_4, %complex_4* %658, i32 %653
  %660 = load i32, i32* %"1_k", align 4
  %661 = load i32, i32* %"2_k", align 4
  %662 = load i32, i32* %"3_k", align 4
  %663 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %664 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %663, i32 0, i32 0
  %665 = getelementptr %dimension_descriptor, %dimension_descriptor* %664, i32 0, i32 1
  %666 = load i32, i32* %665, align 4
  %667 = sub i32 %660, %666
  %668 = mul i32 1, %667
  %669 = add i32 0, %668
  %670 = getelementptr %dimension_descriptor, %dimension_descriptor* %664, i32 0, i32 3
  %671 = load i32, i32* %670, align 4
  %672 = mul i32 1, %671
  %673 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %663, i32 0, i32 1
  %674 = getelementptr %dimension_descriptor, %dimension_descriptor* %673, i32 0, i32 1
  %675 = load i32, i32* %674, align 4
  %676 = sub i32 %661, %675
  %677 = mul i32 %672, %676
  %678 = add i32 %669, %677
  %679 = getelementptr %dimension_descriptor, %dimension_descriptor* %673, i32 0, i32 3
  %680 = load i32, i32* %679, align 4
  %681 = mul i32 %672, %680
  %682 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %663, i32 0, i32 2
  %683 = getelementptr %dimension_descriptor, %dimension_descriptor* %682, i32 0, i32 1
  %684 = load i32, i32* %683, align 4
  %685 = sub i32 %662, %684
  %686 = mul i32 %681, %685
  %687 = add i32 %678, %686
  %688 = getelementptr %dimension_descriptor, %dimension_descriptor* %682, i32 0, i32 3
  %689 = load i32, i32* %688, align 4
  %690 = mul i32 %681, %689
  %691 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %692 = load i32*, i32** %691, align 8
  %693 = getelementptr inbounds i32, i32* %692, i32 %687
  %694 = load i32, i32* %693, align 4
  %695 = sitofp i32 %694 to float
  %696 = alloca %complex_4, align 8
  %697 = getelementptr %complex_4, %complex_4* %696, i32 0, i32 0
  %698 = getelementptr %complex_4, %complex_4* %696, i32 0, i32 1
  store float %695, float* %697, align 4
  store float 0.000000e+00, float* %698, align 4
  %699 = load %complex_4, %complex_4* %696, align 4
  store %complex_4 %699, %complex_4* %659, align 4
  br label %loop.head20

loop.end22:                                       ; preds = %loop.head20
  br label %loop.head18

loop.end23:                                       ; preds = %loop.head18
  br label %loop.head16

loop.end24:                                       ; preds = %loop.head16
  store i32 1, i32* %"1_v", align 4
  %700 = alloca %dimension_descriptor*, align 8
  %701 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %702 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %701, i32 0, i32 0
  store %dimension_descriptor* %702, %dimension_descriptor** %700, align 8
  %703 = alloca i32, align 4
  store i32 1, i32* %703, align 4
  %704 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %700, i32* %703)
  %705 = sub i32 %704, 1
  store i32 %705, i32* %"1_t", align 4
  br label %loop.head25

loop.head25:                                      ; preds = %loop.end32, %loop.end24
  %706 = load i32, i32* %"1_t", align 4
  %707 = add i32 %706, 1
  %708 = alloca %dimension_descriptor*, align 8
  %709 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %710 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %709, i32 0, i32 0
  store %dimension_descriptor* %710, %dimension_descriptor** %708, align 8
  %711 = alloca i32, align 4
  store i32 1, i32* %711, align 4
  %712 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %708, i32* %711)
  %713 = icmp sle i32 %707, %712
  br i1 %713, label %loop.body26, label %loop.end33

loop.body26:                                      ; preds = %loop.head25
  %714 = load i32, i32* %"1_t", align 4
  %715 = add i32 %714, 1
  store i32 %715, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %716 = alloca %dimension_descriptor*, align 8
  %717 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %718 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %717, i32 0, i32 0
  store %dimension_descriptor* %718, %dimension_descriptor** %716, align 8
  %719 = alloca i32, align 4
  store i32 2, i32* %719, align 4
  %720 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %716, i32* %719)
  %721 = sub i32 %720, 1
  store i32 %721, i32* %"2_t", align 4
  br label %loop.head27

loop.head27:                                      ; preds = %loop.end31, %loop.body26
  %722 = load i32, i32* %"2_t", align 4
  %723 = add i32 %722, 1
  %724 = alloca %dimension_descriptor*, align 8
  %725 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %726 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %725, i32 0, i32 0
  store %dimension_descriptor* %726, %dimension_descriptor** %724, align 8
  %727 = alloca i32, align 4
  store i32 2, i32* %727, align 4
  %728 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %724, i32* %727)
  %729 = icmp sle i32 %723, %728
  br i1 %729, label %loop.body28, label %loop.end32

loop.body28:                                      ; preds = %loop.head27
  %730 = load i32, i32* %"2_t", align 4
  %731 = add i32 %730, 1
  store i32 %731, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %732 = alloca %dimension_descriptor*, align 8
  %733 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %734 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %733, i32 0, i32 0
  store %dimension_descriptor* %734, %dimension_descriptor** %732, align 8
  %735 = alloca i32, align 4
  store i32 3, i32* %735, align 4
  %736 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %732, i32* %735)
  %737 = sub i32 %736, 1
  store i32 %737, i32* %"3_t", align 4
  br label %loop.head29

loop.head29:                                      ; preds = %loop.body30, %loop.body28
  %738 = load i32, i32* %"3_t", align 4
  %739 = add i32 %738, 1
  %740 = alloca %dimension_descriptor*, align 8
  %741 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %742 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %741, i32 0, i32 0
  store %dimension_descriptor* %742, %dimension_descriptor** %740, align 8
  %743 = alloca i32, align 4
  store i32 3, i32* %743, align 4
  %744 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %740, i32* %743)
  %745 = icmp sle i32 %739, %744
  br i1 %745, label %loop.body30, label %loop.end31

loop.body30:                                      ; preds = %loop.head29
  %746 = load i32, i32* %"3_t", align 4
  %747 = add i32 %746, 1
  store i32 %747, i32* %"3_t", align 4
  %748 = load i32, i32* %"1_t", align 4
  %749 = load i32, i32* %"2_t", align 4
  %750 = load i32, i32* %"3_t", align 4
  %751 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %752 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %751, i32 0, i32 0
  %753 = getelementptr %dimension_descriptor, %dimension_descriptor* %752, i32 0, i32 1
  %754 = load i32, i32* %753, align 4
  %755 = sub i32 %748, %754
  %756 = mul i32 1, %755
  %757 = add i32 0, %756
  %758 = getelementptr %dimension_descriptor, %dimension_descriptor* %752, i32 0, i32 3
  %759 = load i32, i32* %758, align 4
  %760 = mul i32 1, %759
  %761 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %751, i32 0, i32 1
  %762 = getelementptr %dimension_descriptor, %dimension_descriptor* %761, i32 0, i32 1
  %763 = load i32, i32* %762, align 4
  %764 = sub i32 %749, %763
  %765 = mul i32 %760, %764
  %766 = add i32 %757, %765
  %767 = getelementptr %dimension_descriptor, %dimension_descriptor* %761, i32 0, i32 3
  %768 = load i32, i32* %767, align 4
  %769 = mul i32 %760, %768
  %770 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %751, i32 0, i32 2
  %771 = getelementptr %dimension_descriptor, %dimension_descriptor* %770, i32 0, i32 1
  %772 = load i32, i32* %771, align 4
  %773 = sub i32 %750, %772
  %774 = mul i32 %769, %773
  %775 = add i32 %766, %774
  %776 = getelementptr %dimension_descriptor, %dimension_descriptor* %770, i32 0, i32 3
  %777 = load i32, i32* %776, align 4
  %778 = mul i32 %769, %777
  %779 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 0
  %780 = load %complex_4*, %complex_4** %779, align 8
  %781 = getelementptr inbounds %complex_4, %complex_4* %780, i32 %775
  %782 = load i32, i32* %"1_v", align 4
  %783 = load i32, i32* %"2_v", align 4
  %784 = load i32, i32* %"3_v", align 4
  %785 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 2
  %786 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %785, i32 0, i32 0
  %787 = getelementptr %dimension_descriptor, %dimension_descriptor* %786, i32 0, i32 1
  %788 = load i32, i32* %787, align 4
  %789 = sub i32 %782, %788
  %790 = mul i32 1, %789
  %791 = add i32 0, %790
  %792 = getelementptr %dimension_descriptor, %dimension_descriptor* %786, i32 0, i32 3
  %793 = load i32, i32* %792, align 4
  %794 = mul i32 1, %793
  %795 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %785, i32 0, i32 1
  %796 = getelementptr %dimension_descriptor, %dimension_descriptor* %795, i32 0, i32 1
  %797 = load i32, i32* %796, align 4
  %798 = sub i32 %783, %797
  %799 = mul i32 %794, %798
  %800 = add i32 %791, %799
  %801 = getelementptr %dimension_descriptor, %dimension_descriptor* %795, i32 0, i32 3
  %802 = load i32, i32* %801, align 4
  %803 = mul i32 %794, %802
  %804 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %785, i32 0, i32 2
  %805 = getelementptr %dimension_descriptor, %dimension_descriptor* %804, i32 0, i32 1
  %806 = load i32, i32* %805, align 4
  %807 = sub i32 %784, %806
  %808 = mul i32 %803, %807
  %809 = add i32 %800, %808
  %810 = getelementptr %dimension_descriptor, %dimension_descriptor* %804, i32 0, i32 3
  %811 = load i32, i32* %810, align 4
  %812 = mul i32 %803, %811
  %813 = getelementptr %array.0, %array.0* %"~1_implicit_cast_res", i32 0, i32 0
  %814 = load %complex_4*, %complex_4** %813, align 8
  %815 = getelementptr inbounds %complex_4, %complex_4* %814, i32 %809
  %816 = load %complex_4, %complex_4* %815, align 4
  %817 = alloca %complex_4, align 8
  %818 = getelementptr %complex_4, %complex_4* %817, i32 0, i32 0
  %819 = getelementptr %complex_4, %complex_4* %817, i32 0, i32 1
  store float 0.000000e+00, float* %818, align 4
  store float 1.000000e+00, float* %819, align 4
  %820 = load %complex_4, %complex_4* %817, align 4
  %821 = alloca %complex_4, align 8
  store %complex_4 %816, %complex_4* %821, align 4
  %822 = alloca %complex_4, align 8
  store %complex_4 %820, %complex_4* %822, align 4
  %823 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %821, %complex_4* %822, %complex_4* %823)
  %824 = load %complex_4, %complex_4* %823, align 4
  store %complex_4 %824, %complex_4* %781, align 4
  %825 = load i32, i32* %"3_v", align 4
  %826 = add i32 %825, 1
  store i32 %826, i32* %"3_v", align 4
  br label %loop.head29

loop.end31:                                       ; preds = %loop.head29
  %827 = load i32, i32* %"2_v", align 4
  %828 = add i32 %827, 1
  store i32 %828, i32* %"2_v", align 4
  br label %loop.head27

loop.end32:                                       ; preds = %loop.head27
  %829 = load i32, i32* %"1_v", align 4
  %830 = add i32 %829, 1
  store i32 %830, i32* %"1_v", align 4
  br label %loop.head25

loop.end33:                                       ; preds = %loop.head25
  store i32 1, i32* %"1_v", align 4
  %831 = alloca %dimension_descriptor*, align 8
  %832 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %833 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %832, i32 0, i32 0
  store %dimension_descriptor* %833, %dimension_descriptor** %831, align 8
  %834 = alloca i32, align 4
  store i32 1, i32* %834, align 4
  %835 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %831, i32* %834)
  %836 = sub i32 %835, 1
  store i32 %836, i32* %"1_t", align 4
  br label %loop.head34

loop.head34:                                      ; preds = %loop.end41, %loop.end33
  %837 = load i32, i32* %"1_t", align 4
  %838 = add i32 %837, 1
  %839 = alloca %dimension_descriptor*, align 8
  %840 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %841 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %840, i32 0, i32 0
  store %dimension_descriptor* %841, %dimension_descriptor** %839, align 8
  %842 = alloca i32, align 4
  store i32 1, i32* %842, align 4
  %843 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %839, i32* %842)
  %844 = icmp sle i32 %838, %843
  br i1 %844, label %loop.body35, label %loop.end42

loop.body35:                                      ; preds = %loop.head34
  %845 = load i32, i32* %"1_t", align 4
  %846 = add i32 %845, 1
  store i32 %846, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %847 = alloca %dimension_descriptor*, align 8
  %848 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %849 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %848, i32 0, i32 0
  store %dimension_descriptor* %849, %dimension_descriptor** %847, align 8
  %850 = alloca i32, align 4
  store i32 2, i32* %850, align 4
  %851 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %847, i32* %850)
  %852 = sub i32 %851, 1
  store i32 %852, i32* %"2_t", align 4
  br label %loop.head36

loop.head36:                                      ; preds = %loop.end40, %loop.body35
  %853 = load i32, i32* %"2_t", align 4
  %854 = add i32 %853, 1
  %855 = alloca %dimension_descriptor*, align 8
  %856 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %857 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %856, i32 0, i32 0
  store %dimension_descriptor* %857, %dimension_descriptor** %855, align 8
  %858 = alloca i32, align 4
  store i32 2, i32* %858, align 4
  %859 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %855, i32* %858)
  %860 = icmp sle i32 %854, %859
  br i1 %860, label %loop.body37, label %loop.end41

loop.body37:                                      ; preds = %loop.head36
  %861 = load i32, i32* %"2_t", align 4
  %862 = add i32 %861, 1
  store i32 %862, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %863 = alloca %dimension_descriptor*, align 8
  %864 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %865 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %864, i32 0, i32 0
  store %dimension_descriptor* %865, %dimension_descriptor** %863, align 8
  %866 = alloca i32, align 4
  store i32 3, i32* %866, align 4
  %867 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %863, i32* %866)
  %868 = sub i32 %867, 1
  store i32 %868, i32* %"3_t", align 4
  br label %loop.head38

loop.head38:                                      ; preds = %loop.body39, %loop.body37
  %869 = load i32, i32* %"3_t", align 4
  %870 = add i32 %869, 1
  %871 = alloca %dimension_descriptor*, align 8
  %872 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %873 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %872, i32 0, i32 0
  store %dimension_descriptor* %873, %dimension_descriptor** %871, align 8
  %874 = alloca i32, align 4
  store i32 3, i32* %874, align 4
  %875 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %871, i32* %874)
  %876 = icmp sle i32 %870, %875
  br i1 %876, label %loop.body39, label %loop.end40

loop.body39:                                      ; preds = %loop.head38
  %877 = load i32, i32* %"3_t", align 4
  %878 = add i32 %877, 1
  store i32 %878, i32* %"3_t", align 4
  %879 = load i32, i32* %"1_t", align 4
  %880 = load i32, i32* %"2_t", align 4
  %881 = load i32, i32* %"3_t", align 4
  %882 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %883 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %882, i32 0, i32 0
  %884 = getelementptr %dimension_descriptor, %dimension_descriptor* %883, i32 0, i32 1
  %885 = load i32, i32* %884, align 4
  %886 = sub i32 %879, %885
  %887 = mul i32 1, %886
  %888 = add i32 0, %887
  %889 = getelementptr %dimension_descriptor, %dimension_descriptor* %883, i32 0, i32 3
  %890 = load i32, i32* %889, align 4
  %891 = mul i32 1, %890
  %892 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %882, i32 0, i32 1
  %893 = getelementptr %dimension_descriptor, %dimension_descriptor* %892, i32 0, i32 1
  %894 = load i32, i32* %893, align 4
  %895 = sub i32 %880, %894
  %896 = mul i32 %891, %895
  %897 = add i32 %888, %896
  %898 = getelementptr %dimension_descriptor, %dimension_descriptor* %892, i32 0, i32 3
  %899 = load i32, i32* %898, align 4
  %900 = mul i32 %891, %899
  %901 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %882, i32 0, i32 2
  %902 = getelementptr %dimension_descriptor, %dimension_descriptor* %901, i32 0, i32 1
  %903 = load i32, i32* %902, align 4
  %904 = sub i32 %881, %903
  %905 = mul i32 %900, %904
  %906 = add i32 %897, %905
  %907 = getelementptr %dimension_descriptor, %dimension_descriptor* %901, i32 0, i32 3
  %908 = load i32, i32* %907, align 4
  %909 = mul i32 %900, %908
  %910 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %911 = load %complex_4*, %complex_4** %910, align 8
  %912 = getelementptr inbounds %complex_4, %complex_4* %911, i32 %906
  %913 = load i32, i32* %"1_v", align 4
  %914 = load i32, i32* %"2_v", align 4
  %915 = load i32, i32* %"3_v", align 4
  %916 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 2
  %917 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %916, i32 0, i32 0
  %918 = getelementptr %dimension_descriptor, %dimension_descriptor* %917, i32 0, i32 1
  %919 = load i32, i32* %918, align 4
  %920 = sub i32 %913, %919
  %921 = mul i32 1, %920
  %922 = add i32 0, %921
  %923 = getelementptr %dimension_descriptor, %dimension_descriptor* %917, i32 0, i32 3
  %924 = load i32, i32* %923, align 4
  %925 = mul i32 1, %924
  %926 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %916, i32 0, i32 1
  %927 = getelementptr %dimension_descriptor, %dimension_descriptor* %926, i32 0, i32 1
  %928 = load i32, i32* %927, align 4
  %929 = sub i32 %914, %928
  %930 = mul i32 %925, %929
  %931 = add i32 %922, %930
  %932 = getelementptr %dimension_descriptor, %dimension_descriptor* %926, i32 0, i32 3
  %933 = load i32, i32* %932, align 4
  %934 = mul i32 %925, %933
  %935 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %916, i32 0, i32 2
  %936 = getelementptr %dimension_descriptor, %dimension_descriptor* %935, i32 0, i32 1
  %937 = load i32, i32* %936, align 4
  %938 = sub i32 %915, %937
  %939 = mul i32 %934, %938
  %940 = add i32 %931, %939
  %941 = getelementptr %dimension_descriptor, %dimension_descriptor* %935, i32 0, i32 3
  %942 = load i32, i32* %941, align 4
  %943 = mul i32 %934, %942
  %944 = getelementptr %array.0, %array.0* %"~0_implicit_cast_res", i32 0, i32 0
  %945 = load %complex_4*, %complex_4** %944, align 8
  %946 = getelementptr inbounds %complex_4, %complex_4* %945, i32 %940
  %947 = load %complex_4, %complex_4* %946, align 4
  %948 = load i32, i32* %"1_v", align 4
  %949 = load i32, i32* %"2_v", align 4
  %950 = load i32, i32* %"3_v", align 4
  %951 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %952 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %951, i32 0, i32 0
  %953 = getelementptr %dimension_descriptor, %dimension_descriptor* %952, i32 0, i32 1
  %954 = load i32, i32* %953, align 4
  %955 = sub i32 %948, %954
  %956 = mul i32 1, %955
  %957 = add i32 0, %956
  %958 = getelementptr %dimension_descriptor, %dimension_descriptor* %952, i32 0, i32 3
  %959 = load i32, i32* %958, align 4
  %960 = mul i32 1, %959
  %961 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %951, i32 0, i32 1
  %962 = getelementptr %dimension_descriptor, %dimension_descriptor* %961, i32 0, i32 1
  %963 = load i32, i32* %962, align 4
  %964 = sub i32 %949, %963
  %965 = mul i32 %960, %964
  %966 = add i32 %957, %965
  %967 = getelementptr %dimension_descriptor, %dimension_descriptor* %961, i32 0, i32 3
  %968 = load i32, i32* %967, align 4
  %969 = mul i32 %960, %968
  %970 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %951, i32 0, i32 2
  %971 = getelementptr %dimension_descriptor, %dimension_descriptor* %970, i32 0, i32 1
  %972 = load i32, i32* %971, align 4
  %973 = sub i32 %950, %972
  %974 = mul i32 %969, %973
  %975 = add i32 %966, %974
  %976 = getelementptr %dimension_descriptor, %dimension_descriptor* %970, i32 0, i32 3
  %977 = load i32, i32* %976, align 4
  %978 = mul i32 %969, %977
  %979 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 0
  %980 = load %complex_4*, %complex_4** %979, align 8
  %981 = getelementptr inbounds %complex_4, %complex_4* %980, i32 %975
  %982 = load %complex_4, %complex_4* %981, align 4
  %983 = alloca %complex_4, align 8
  store %complex_4 %947, %complex_4* %983, align 4
  %984 = alloca %complex_4, align 8
  store %complex_4 %982, %complex_4* %984, align 4
  %985 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %983, %complex_4* %984, %complex_4* %985)
  %986 = load %complex_4, %complex_4* %985, align 4
  store %complex_4 %986, %complex_4* %912, align 4
  %987 = load i32, i32* %"3_v", align 4
  %988 = add i32 %987, 1
  store i32 %988, i32* %"3_v", align 4
  br label %loop.head38

loop.end40:                                       ; preds = %loop.head38
  %989 = load i32, i32* %"2_v", align 4
  %990 = add i32 %989, 1
  store i32 %990, i32* %"2_v", align 4
  br label %loop.head36

loop.end41:                                       ; preds = %loop.head36
  %991 = load i32, i32* %"1_v", align 4
  %992 = add i32 %991, 1
  store i32 %992, i32* %"1_v", align 4
  br label %loop.head34

loop.end42:                                       ; preds = %loop.head34
  %993 = alloca %array.0, align 8
  store i32 0, i32* %call_arg_value, align 4
  call void @check(%array.0* %c, i32* %call_arg_value)
  %994 = alloca %dimension_descriptor*, align 8
  %995 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %996 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %995, i32 0, i32 0
  store %dimension_descriptor* %996, %dimension_descriptor** %994, align 8
  %997 = alloca i32, align 4
  store i32 1, i32* %997, align 4
  %998 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %994, i32* %997)
  %999 = sub i32 %998, 1
  store i32 %999, i32* %"1_k", align 4
  br label %loop.head43

loop.head43:                                      ; preds = %loop.end50, %loop.end42
  %1000 = load i32, i32* %"1_k", align 4
  %1001 = add i32 %1000, 1
  %1002 = alloca %dimension_descriptor*, align 8
  %1003 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1004 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1003, i32 0, i32 0
  store %dimension_descriptor* %1004, %dimension_descriptor** %1002, align 8
  %1005 = alloca i32, align 4
  store i32 1, i32* %1005, align 4
  %1006 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1002, i32* %1005)
  %1007 = icmp sle i32 %1001, %1006
  br i1 %1007, label %loop.body44, label %loop.end51

loop.body44:                                      ; preds = %loop.head43
  %1008 = load i32, i32* %"1_k", align 4
  %1009 = add i32 %1008, 1
  store i32 %1009, i32* %"1_k", align 4
  %1010 = alloca %dimension_descriptor*, align 8
  %1011 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1012 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1011, i32 0, i32 0
  store %dimension_descriptor* %1012, %dimension_descriptor** %1010, align 8
  %1013 = alloca i32, align 4
  store i32 2, i32* %1013, align 4
  %1014 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1010, i32* %1013)
  %1015 = sub i32 %1014, 1
  store i32 %1015, i32* %"2_k", align 4
  br label %loop.head45

loop.head45:                                      ; preds = %loop.end49, %loop.body44
  %1016 = load i32, i32* %"2_k", align 4
  %1017 = add i32 %1016, 1
  %1018 = alloca %dimension_descriptor*, align 8
  %1019 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1020 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1019, i32 0, i32 0
  store %dimension_descriptor* %1020, %dimension_descriptor** %1018, align 8
  %1021 = alloca i32, align 4
  store i32 2, i32* %1021, align 4
  %1022 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1018, i32* %1021)
  %1023 = icmp sle i32 %1017, %1022
  br i1 %1023, label %loop.body46, label %loop.end50

loop.body46:                                      ; preds = %loop.head45
  %1024 = load i32, i32* %"2_k", align 4
  %1025 = add i32 %1024, 1
  store i32 %1025, i32* %"2_k", align 4
  %1026 = alloca %dimension_descriptor*, align 8
  %1027 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1028 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1027, i32 0, i32 0
  store %dimension_descriptor* %1028, %dimension_descriptor** %1026, align 8
  %1029 = alloca i32, align 4
  store i32 3, i32* %1029, align 4
  %1030 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1026, i32* %1029)
  %1031 = sub i32 %1030, 1
  store i32 %1031, i32* %"3_k", align 4
  br label %loop.head47

loop.head47:                                      ; preds = %loop.body48, %loop.body46
  %1032 = load i32, i32* %"3_k", align 4
  %1033 = add i32 %1032, 1
  %1034 = alloca %dimension_descriptor*, align 8
  %1035 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1036 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1035, i32 0, i32 0
  store %dimension_descriptor* %1036, %dimension_descriptor** %1034, align 8
  %1037 = alloca i32, align 4
  store i32 3, i32* %1037, align 4
  %1038 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1034, i32* %1037)
  %1039 = icmp sle i32 %1033, %1038
  br i1 %1039, label %loop.body48, label %loop.end49

loop.body48:                                      ; preds = %loop.head47
  %1040 = load i32, i32* %"3_k", align 4
  %1041 = add i32 %1040, 1
  store i32 %1041, i32* %"3_k", align 4
  %1042 = load i32, i32* %"1_k", align 4
  %1043 = load i32, i32* %"2_k", align 4
  %1044 = load i32, i32* %"3_k", align 4
  %1045 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1046 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1045, i32 0, i32 0
  %1047 = getelementptr %dimension_descriptor, %dimension_descriptor* %1046, i32 0, i32 1
  %1048 = load i32, i32* %1047, align 4
  %1049 = sub i32 %1042, %1048
  %1050 = mul i32 1, %1049
  %1051 = add i32 0, %1050
  %1052 = getelementptr %dimension_descriptor, %dimension_descriptor* %1046, i32 0, i32 3
  %1053 = load i32, i32* %1052, align 4
  %1054 = mul i32 1, %1053
  %1055 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1045, i32 0, i32 1
  %1056 = getelementptr %dimension_descriptor, %dimension_descriptor* %1055, i32 0, i32 1
  %1057 = load i32, i32* %1056, align 4
  %1058 = sub i32 %1043, %1057
  %1059 = mul i32 %1054, %1058
  %1060 = add i32 %1051, %1059
  %1061 = getelementptr %dimension_descriptor, %dimension_descriptor* %1055, i32 0, i32 3
  %1062 = load i32, i32* %1061, align 4
  %1063 = mul i32 %1054, %1062
  %1064 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1045, i32 0, i32 2
  %1065 = getelementptr %dimension_descriptor, %dimension_descriptor* %1064, i32 0, i32 1
  %1066 = load i32, i32* %1065, align 4
  %1067 = sub i32 %1044, %1066
  %1068 = mul i32 %1063, %1067
  %1069 = add i32 %1060, %1068
  %1070 = getelementptr %dimension_descriptor, %dimension_descriptor* %1064, i32 0, i32 3
  %1071 = load i32, i32* %1070, align 4
  %1072 = mul i32 %1063, %1071
  %1073 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 0
  %1074 = load i32*, i32** %1073, align 8
  %1075 = getelementptr inbounds i32, i32* %1074, i32 %1069
  %1076 = load i32, i32* %"1_k", align 4
  %1077 = load i32, i32* %"2_k", align 4
  %1078 = load i32, i32* %"3_k", align 4
  %1079 = getelementptr %array.1, %array.1* %a, i32 0, i32 2
  %1080 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1079, i32 0, i32 0
  %1081 = getelementptr %dimension_descriptor, %dimension_descriptor* %1080, i32 0, i32 1
  %1082 = load i32, i32* %1081, align 4
  %1083 = sub i32 %1076, %1082
  %1084 = mul i32 1, %1083
  %1085 = add i32 0, %1084
  %1086 = getelementptr %dimension_descriptor, %dimension_descriptor* %1080, i32 0, i32 3
  %1087 = load i32, i32* %1086, align 4
  %1088 = mul i32 1, %1087
  %1089 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1079, i32 0, i32 1
  %1090 = getelementptr %dimension_descriptor, %dimension_descriptor* %1089, i32 0, i32 1
  %1091 = load i32, i32* %1090, align 4
  %1092 = sub i32 %1077, %1091
  %1093 = mul i32 %1088, %1092
  %1094 = add i32 %1085, %1093
  %1095 = getelementptr %dimension_descriptor, %dimension_descriptor* %1089, i32 0, i32 3
  %1096 = load i32, i32* %1095, align 4
  %1097 = mul i32 %1088, %1096
  %1098 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1079, i32 0, i32 2
  %1099 = getelementptr %dimension_descriptor, %dimension_descriptor* %1098, i32 0, i32 1
  %1100 = load i32, i32* %1099, align 4
  %1101 = sub i32 %1078, %1100
  %1102 = mul i32 %1097, %1101
  %1103 = add i32 %1094, %1102
  %1104 = getelementptr %dimension_descriptor, %dimension_descriptor* %1098, i32 0, i32 3
  %1105 = load i32, i32* %1104, align 4
  %1106 = mul i32 %1097, %1105
  %1107 = getelementptr %array.1, %array.1* %a, i32 0, i32 0
  %1108 = load i32*, i32** %1107, align 8
  %1109 = getelementptr inbounds i32, i32* %1108, i32 %1103
  %1110 = load i32, i32* %1109, align 4
  %1111 = sub i32 0, %1110
  store i32 %1111, i32* %1075, align 4
  br label %loop.head47

loop.end49:                                       ; preds = %loop.head47
  br label %loop.head45

loop.end50:                                       ; preds = %loop.head45
  br label %loop.head43

loop.end51:                                       ; preds = %loop.head43
  %1112 = alloca %dimension_descriptor*, align 8
  %1113 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 2
  %1114 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1113, i32 0, i32 0
  store %dimension_descriptor* %1114, %dimension_descriptor** %1112, align 8
  %1115 = alloca i32, align 4
  store i32 1, i32* %1115, align 4
  %1116 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1112, i32* %1115)
  %1117 = sub i32 %1116, 1
  store i32 %1117, i32* %"1_k", align 4
  br label %loop.head52

loop.head52:                                      ; preds = %loop.end59, %loop.end51
  %1118 = load i32, i32* %"1_k", align 4
  %1119 = add i32 %1118, 1
  %1120 = alloca %dimension_descriptor*, align 8
  %1121 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 2
  %1122 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1121, i32 0, i32 0
  store %dimension_descriptor* %1122, %dimension_descriptor** %1120, align 8
  %1123 = alloca i32, align 4
  store i32 1, i32* %1123, align 4
  %1124 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1120, i32* %1123)
  %1125 = icmp sle i32 %1119, %1124
  br i1 %1125, label %loop.body53, label %loop.end60

loop.body53:                                      ; preds = %loop.head52
  %1126 = load i32, i32* %"1_k", align 4
  %1127 = add i32 %1126, 1
  store i32 %1127, i32* %"1_k", align 4
  %1128 = alloca %dimension_descriptor*, align 8
  %1129 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 2
  %1130 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1129, i32 0, i32 0
  store %dimension_descriptor* %1130, %dimension_descriptor** %1128, align 8
  %1131 = alloca i32, align 4
  store i32 2, i32* %1131, align 4
  %1132 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1128, i32* %1131)
  %1133 = sub i32 %1132, 1
  store i32 %1133, i32* %"2_k", align 4
  br label %loop.head54

loop.head54:                                      ; preds = %loop.end58, %loop.body53
  %1134 = load i32, i32* %"2_k", align 4
  %1135 = add i32 %1134, 1
  %1136 = alloca %dimension_descriptor*, align 8
  %1137 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 2
  %1138 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1137, i32 0, i32 0
  store %dimension_descriptor* %1138, %dimension_descriptor** %1136, align 8
  %1139 = alloca i32, align 4
  store i32 2, i32* %1139, align 4
  %1140 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1136, i32* %1139)
  %1141 = icmp sle i32 %1135, %1140
  br i1 %1141, label %loop.body55, label %loop.end59

loop.body55:                                      ; preds = %loop.head54
  %1142 = load i32, i32* %"2_k", align 4
  %1143 = add i32 %1142, 1
  store i32 %1143, i32* %"2_k", align 4
  %1144 = alloca %dimension_descriptor*, align 8
  %1145 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 2
  %1146 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1145, i32 0, i32 0
  store %dimension_descriptor* %1146, %dimension_descriptor** %1144, align 8
  %1147 = alloca i32, align 4
  store i32 3, i32* %1147, align 4
  %1148 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1144, i32* %1147)
  %1149 = sub i32 %1148, 1
  store i32 %1149, i32* %"3_k", align 4
  br label %loop.head56

loop.head56:                                      ; preds = %loop.body57, %loop.body55
  %1150 = load i32, i32* %"3_k", align 4
  %1151 = add i32 %1150, 1
  %1152 = alloca %dimension_descriptor*, align 8
  %1153 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 2
  %1154 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1153, i32 0, i32 0
  store %dimension_descriptor* %1154, %dimension_descriptor** %1152, align 8
  %1155 = alloca i32, align 4
  store i32 3, i32* %1155, align 4
  %1156 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1152, i32* %1155)
  %1157 = icmp sle i32 %1151, %1156
  br i1 %1157, label %loop.body57, label %loop.end58

loop.body57:                                      ; preds = %loop.head56
  %1158 = load i32, i32* %"3_k", align 4
  %1159 = add i32 %1158, 1
  store i32 %1159, i32* %"3_k", align 4
  %1160 = load i32, i32* %"1_k", align 4
  %1161 = load i32, i32* %"2_k", align 4
  %1162 = load i32, i32* %"3_k", align 4
  %1163 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 2
  %1164 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1163, i32 0, i32 0
  %1165 = getelementptr %dimension_descriptor, %dimension_descriptor* %1164, i32 0, i32 1
  %1166 = load i32, i32* %1165, align 4
  %1167 = sub i32 %1160, %1166
  %1168 = mul i32 1, %1167
  %1169 = add i32 0, %1168
  %1170 = getelementptr %dimension_descriptor, %dimension_descriptor* %1164, i32 0, i32 3
  %1171 = load i32, i32* %1170, align 4
  %1172 = mul i32 1, %1171
  %1173 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1163, i32 0, i32 1
  %1174 = getelementptr %dimension_descriptor, %dimension_descriptor* %1173, i32 0, i32 1
  %1175 = load i32, i32* %1174, align 4
  %1176 = sub i32 %1161, %1175
  %1177 = mul i32 %1172, %1176
  %1178 = add i32 %1169, %1177
  %1179 = getelementptr %dimension_descriptor, %dimension_descriptor* %1173, i32 0, i32 3
  %1180 = load i32, i32* %1179, align 4
  %1181 = mul i32 %1172, %1180
  %1182 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1163, i32 0, i32 2
  %1183 = getelementptr %dimension_descriptor, %dimension_descriptor* %1182, i32 0, i32 1
  %1184 = load i32, i32* %1183, align 4
  %1185 = sub i32 %1162, %1184
  %1186 = mul i32 %1181, %1185
  %1187 = add i32 %1178, %1186
  %1188 = getelementptr %dimension_descriptor, %dimension_descriptor* %1182, i32 0, i32 3
  %1189 = load i32, i32* %1188, align 4
  %1190 = mul i32 %1181, %1189
  %1191 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 0
  %1192 = load %complex_4*, %complex_4** %1191, align 8
  %1193 = getelementptr inbounds %complex_4, %complex_4* %1192, i32 %1187
  %1194 = load i32, i32* %"1_k", align 4
  %1195 = load i32, i32* %"2_k", align 4
  %1196 = load i32, i32* %"3_k", align 4
  %1197 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 2
  %1198 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1197, i32 0, i32 0
  %1199 = getelementptr %dimension_descriptor, %dimension_descriptor* %1198, i32 0, i32 1
  %1200 = load i32, i32* %1199, align 4
  %1201 = sub i32 %1194, %1200
  %1202 = mul i32 1, %1201
  %1203 = add i32 0, %1202
  %1204 = getelementptr %dimension_descriptor, %dimension_descriptor* %1198, i32 0, i32 3
  %1205 = load i32, i32* %1204, align 4
  %1206 = mul i32 1, %1205
  %1207 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1197, i32 0, i32 1
  %1208 = getelementptr %dimension_descriptor, %dimension_descriptor* %1207, i32 0, i32 1
  %1209 = load i32, i32* %1208, align 4
  %1210 = sub i32 %1195, %1209
  %1211 = mul i32 %1206, %1210
  %1212 = add i32 %1203, %1211
  %1213 = getelementptr %dimension_descriptor, %dimension_descriptor* %1207, i32 0, i32 3
  %1214 = load i32, i32* %1213, align 4
  %1215 = mul i32 %1206, %1214
  %1216 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1197, i32 0, i32 2
  %1217 = getelementptr %dimension_descriptor, %dimension_descriptor* %1216, i32 0, i32 1
  %1218 = load i32, i32* %1217, align 4
  %1219 = sub i32 %1196, %1218
  %1220 = mul i32 %1215, %1219
  %1221 = add i32 %1212, %1220
  %1222 = getelementptr %dimension_descriptor, %dimension_descriptor* %1216, i32 0, i32 3
  %1223 = load i32, i32* %1222, align 4
  %1224 = mul i32 %1215, %1223
  %1225 = getelementptr %array.1, %array.1* %"~3_unary_op_res", i32 0, i32 0
  %1226 = load i32*, i32** %1225, align 8
  %1227 = getelementptr inbounds i32, i32* %1226, i32 %1221
  %1228 = load i32, i32* %1227, align 4
  %1229 = sitofp i32 %1228 to float
  %1230 = alloca %complex_4, align 8
  %1231 = getelementptr %complex_4, %complex_4* %1230, i32 0, i32 0
  %1232 = getelementptr %complex_4, %complex_4* %1230, i32 0, i32 1
  store float %1229, float* %1231, align 4
  store float 0.000000e+00, float* %1232, align 4
  %1233 = load %complex_4, %complex_4* %1230, align 4
  store %complex_4 %1233, %complex_4* %1193, align 4
  br label %loop.head56

loop.end58:                                       ; preds = %loop.head56
  br label %loop.head54

loop.end59:                                       ; preds = %loop.head54
  br label %loop.head52

loop.end60:                                       ; preds = %loop.head52
  %1234 = alloca %dimension_descriptor*, align 8
  %1235 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1236 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1235, i32 0, i32 0
  store %dimension_descriptor* %1236, %dimension_descriptor** %1234, align 8
  %1237 = alloca i32, align 4
  store i32 1, i32* %1237, align 4
  %1238 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1234, i32* %1237)
  %1239 = sub i32 %1238, 1
  store i32 %1239, i32* %"1_k", align 4
  br label %loop.head61

loop.head61:                                      ; preds = %loop.end68, %loop.end60
  %1240 = load i32, i32* %"1_k", align 4
  %1241 = add i32 %1240, 1
  %1242 = alloca %dimension_descriptor*, align 8
  %1243 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1244 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1243, i32 0, i32 0
  store %dimension_descriptor* %1244, %dimension_descriptor** %1242, align 8
  %1245 = alloca i32, align 4
  store i32 1, i32* %1245, align 4
  %1246 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1242, i32* %1245)
  %1247 = icmp sle i32 %1241, %1246
  br i1 %1247, label %loop.body62, label %loop.end69

loop.body62:                                      ; preds = %loop.head61
  %1248 = load i32, i32* %"1_k", align 4
  %1249 = add i32 %1248, 1
  store i32 %1249, i32* %"1_k", align 4
  %1250 = alloca %dimension_descriptor*, align 8
  %1251 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1252 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1251, i32 0, i32 0
  store %dimension_descriptor* %1252, %dimension_descriptor** %1250, align 8
  %1253 = alloca i32, align 4
  store i32 2, i32* %1253, align 4
  %1254 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1250, i32* %1253)
  %1255 = sub i32 %1254, 1
  store i32 %1255, i32* %"2_k", align 4
  br label %loop.head63

loop.head63:                                      ; preds = %loop.end67, %loop.body62
  %1256 = load i32, i32* %"2_k", align 4
  %1257 = add i32 %1256, 1
  %1258 = alloca %dimension_descriptor*, align 8
  %1259 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1260 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1259, i32 0, i32 0
  store %dimension_descriptor* %1260, %dimension_descriptor** %1258, align 8
  %1261 = alloca i32, align 4
  store i32 2, i32* %1261, align 4
  %1262 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1258, i32* %1261)
  %1263 = icmp sle i32 %1257, %1262
  br i1 %1263, label %loop.body64, label %loop.end68

loop.body64:                                      ; preds = %loop.head63
  %1264 = load i32, i32* %"2_k", align 4
  %1265 = add i32 %1264, 1
  store i32 %1265, i32* %"2_k", align 4
  %1266 = alloca %dimension_descriptor*, align 8
  %1267 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1268 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1267, i32 0, i32 0
  store %dimension_descriptor* %1268, %dimension_descriptor** %1266, align 8
  %1269 = alloca i32, align 4
  store i32 3, i32* %1269, align 4
  %1270 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1266, i32* %1269)
  %1271 = sub i32 %1270, 1
  store i32 %1271, i32* %"3_k", align 4
  br label %loop.head65

loop.head65:                                      ; preds = %loop.body66, %loop.body64
  %1272 = load i32, i32* %"3_k", align 4
  %1273 = add i32 %1272, 1
  %1274 = alloca %dimension_descriptor*, align 8
  %1275 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1276 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1275, i32 0, i32 0
  store %dimension_descriptor* %1276, %dimension_descriptor** %1274, align 8
  %1277 = alloca i32, align 4
  store i32 3, i32* %1277, align 4
  %1278 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1274, i32* %1277)
  %1279 = icmp sle i32 %1273, %1278
  br i1 %1279, label %loop.body66, label %loop.end67

loop.body66:                                      ; preds = %loop.head65
  %1280 = load i32, i32* %"3_k", align 4
  %1281 = add i32 %1280, 1
  store i32 %1281, i32* %"3_k", align 4
  %1282 = load i32, i32* %"1_k", align 4
  %1283 = load i32, i32* %"2_k", align 4
  %1284 = load i32, i32* %"3_k", align 4
  %1285 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1286 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1285, i32 0, i32 0
  %1287 = getelementptr %dimension_descriptor, %dimension_descriptor* %1286, i32 0, i32 1
  %1288 = load i32, i32* %1287, align 4
  %1289 = sub i32 %1282, %1288
  %1290 = mul i32 1, %1289
  %1291 = add i32 0, %1290
  %1292 = getelementptr %dimension_descriptor, %dimension_descriptor* %1286, i32 0, i32 3
  %1293 = load i32, i32* %1292, align 4
  %1294 = mul i32 1, %1293
  %1295 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1285, i32 0, i32 1
  %1296 = getelementptr %dimension_descriptor, %dimension_descriptor* %1295, i32 0, i32 1
  %1297 = load i32, i32* %1296, align 4
  %1298 = sub i32 %1283, %1297
  %1299 = mul i32 %1294, %1298
  %1300 = add i32 %1291, %1299
  %1301 = getelementptr %dimension_descriptor, %dimension_descriptor* %1295, i32 0, i32 3
  %1302 = load i32, i32* %1301, align 4
  %1303 = mul i32 %1294, %1302
  %1304 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1285, i32 0, i32 2
  %1305 = getelementptr %dimension_descriptor, %dimension_descriptor* %1304, i32 0, i32 1
  %1306 = load i32, i32* %1305, align 4
  %1307 = sub i32 %1284, %1306
  %1308 = mul i32 %1303, %1307
  %1309 = add i32 %1300, %1308
  %1310 = getelementptr %dimension_descriptor, %dimension_descriptor* %1304, i32 0, i32 3
  %1311 = load i32, i32* %1310, align 4
  %1312 = mul i32 %1303, %1311
  %1313 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 0
  %1314 = load i32*, i32** %1313, align 8
  %1315 = getelementptr inbounds i32, i32* %1314, i32 %1309
  %1316 = load i32, i32* %"1_k", align 4
  %1317 = load i32, i32* %"2_k", align 4
  %1318 = load i32, i32* %"3_k", align 4
  %1319 = getelementptr %array.1, %array.1* %b, i32 0, i32 2
  %1320 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1319, i32 0, i32 0
  %1321 = getelementptr %dimension_descriptor, %dimension_descriptor* %1320, i32 0, i32 1
  %1322 = load i32, i32* %1321, align 4
  %1323 = sub i32 %1316, %1322
  %1324 = mul i32 1, %1323
  %1325 = add i32 0, %1324
  %1326 = getelementptr %dimension_descriptor, %dimension_descriptor* %1320, i32 0, i32 3
  %1327 = load i32, i32* %1326, align 4
  %1328 = mul i32 1, %1327
  %1329 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1319, i32 0, i32 1
  %1330 = getelementptr %dimension_descriptor, %dimension_descriptor* %1329, i32 0, i32 1
  %1331 = load i32, i32* %1330, align 4
  %1332 = sub i32 %1317, %1331
  %1333 = mul i32 %1328, %1332
  %1334 = add i32 %1325, %1333
  %1335 = getelementptr %dimension_descriptor, %dimension_descriptor* %1329, i32 0, i32 3
  %1336 = load i32, i32* %1335, align 4
  %1337 = mul i32 %1328, %1336
  %1338 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1319, i32 0, i32 2
  %1339 = getelementptr %dimension_descriptor, %dimension_descriptor* %1338, i32 0, i32 1
  %1340 = load i32, i32* %1339, align 4
  %1341 = sub i32 %1318, %1340
  %1342 = mul i32 %1337, %1341
  %1343 = add i32 %1334, %1342
  %1344 = getelementptr %dimension_descriptor, %dimension_descriptor* %1338, i32 0, i32 3
  %1345 = load i32, i32* %1344, align 4
  %1346 = mul i32 %1337, %1345
  %1347 = getelementptr %array.1, %array.1* %b, i32 0, i32 0
  %1348 = load i32*, i32** %1347, align 8
  %1349 = getelementptr inbounds i32, i32* %1348, i32 %1343
  %1350 = load i32, i32* %1349, align 4
  %1351 = sub i32 0, %1350
  store i32 %1351, i32* %1315, align 4
  br label %loop.head65

loop.end67:                                       ; preds = %loop.head65
  br label %loop.head63

loop.end68:                                       ; preds = %loop.head63
  br label %loop.head61

loop.end69:                                       ; preds = %loop.head61
  %1352 = alloca %dimension_descriptor*, align 8
  %1353 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 2
  %1354 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1353, i32 0, i32 0
  store %dimension_descriptor* %1354, %dimension_descriptor** %1352, align 8
  %1355 = alloca i32, align 4
  store i32 1, i32* %1355, align 4
  %1356 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1352, i32* %1355)
  %1357 = sub i32 %1356, 1
  store i32 %1357, i32* %"1_k", align 4
  br label %loop.head70

loop.head70:                                      ; preds = %loop.end77, %loop.end69
  %1358 = load i32, i32* %"1_k", align 4
  %1359 = add i32 %1358, 1
  %1360 = alloca %dimension_descriptor*, align 8
  %1361 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 2
  %1362 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1361, i32 0, i32 0
  store %dimension_descriptor* %1362, %dimension_descriptor** %1360, align 8
  %1363 = alloca i32, align 4
  store i32 1, i32* %1363, align 4
  %1364 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1360, i32* %1363)
  %1365 = icmp sle i32 %1359, %1364
  br i1 %1365, label %loop.body71, label %loop.end78

loop.body71:                                      ; preds = %loop.head70
  %1366 = load i32, i32* %"1_k", align 4
  %1367 = add i32 %1366, 1
  store i32 %1367, i32* %"1_k", align 4
  %1368 = alloca %dimension_descriptor*, align 8
  %1369 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 2
  %1370 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1369, i32 0, i32 0
  store %dimension_descriptor* %1370, %dimension_descriptor** %1368, align 8
  %1371 = alloca i32, align 4
  store i32 2, i32* %1371, align 4
  %1372 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1368, i32* %1371)
  %1373 = sub i32 %1372, 1
  store i32 %1373, i32* %"2_k", align 4
  br label %loop.head72

loop.head72:                                      ; preds = %loop.end76, %loop.body71
  %1374 = load i32, i32* %"2_k", align 4
  %1375 = add i32 %1374, 1
  %1376 = alloca %dimension_descriptor*, align 8
  %1377 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 2
  %1378 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1377, i32 0, i32 0
  store %dimension_descriptor* %1378, %dimension_descriptor** %1376, align 8
  %1379 = alloca i32, align 4
  store i32 2, i32* %1379, align 4
  %1380 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1376, i32* %1379)
  %1381 = icmp sle i32 %1375, %1380
  br i1 %1381, label %loop.body73, label %loop.end77

loop.body73:                                      ; preds = %loop.head72
  %1382 = load i32, i32* %"2_k", align 4
  %1383 = add i32 %1382, 1
  store i32 %1383, i32* %"2_k", align 4
  %1384 = alloca %dimension_descriptor*, align 8
  %1385 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 2
  %1386 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1385, i32 0, i32 0
  store %dimension_descriptor* %1386, %dimension_descriptor** %1384, align 8
  %1387 = alloca i32, align 4
  store i32 3, i32* %1387, align 4
  %1388 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1384, i32* %1387)
  %1389 = sub i32 %1388, 1
  store i32 %1389, i32* %"3_k", align 4
  br label %loop.head74

loop.head74:                                      ; preds = %loop.body75, %loop.body73
  %1390 = load i32, i32* %"3_k", align 4
  %1391 = add i32 %1390, 1
  %1392 = alloca %dimension_descriptor*, align 8
  %1393 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 2
  %1394 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1393, i32 0, i32 0
  store %dimension_descriptor* %1394, %dimension_descriptor** %1392, align 8
  %1395 = alloca i32, align 4
  store i32 3, i32* %1395, align 4
  %1396 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1392, i32* %1395)
  %1397 = icmp sle i32 %1391, %1396
  br i1 %1397, label %loop.body75, label %loop.end76

loop.body75:                                      ; preds = %loop.head74
  %1398 = load i32, i32* %"3_k", align 4
  %1399 = add i32 %1398, 1
  store i32 %1399, i32* %"3_k", align 4
  %1400 = load i32, i32* %"1_k", align 4
  %1401 = load i32, i32* %"2_k", align 4
  %1402 = load i32, i32* %"3_k", align 4
  %1403 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 2
  %1404 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1403, i32 0, i32 0
  %1405 = getelementptr %dimension_descriptor, %dimension_descriptor* %1404, i32 0, i32 1
  %1406 = load i32, i32* %1405, align 4
  %1407 = sub i32 %1400, %1406
  %1408 = mul i32 1, %1407
  %1409 = add i32 0, %1408
  %1410 = getelementptr %dimension_descriptor, %dimension_descriptor* %1404, i32 0, i32 3
  %1411 = load i32, i32* %1410, align 4
  %1412 = mul i32 1, %1411
  %1413 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1403, i32 0, i32 1
  %1414 = getelementptr %dimension_descriptor, %dimension_descriptor* %1413, i32 0, i32 1
  %1415 = load i32, i32* %1414, align 4
  %1416 = sub i32 %1401, %1415
  %1417 = mul i32 %1412, %1416
  %1418 = add i32 %1409, %1417
  %1419 = getelementptr %dimension_descriptor, %dimension_descriptor* %1413, i32 0, i32 3
  %1420 = load i32, i32* %1419, align 4
  %1421 = mul i32 %1412, %1420
  %1422 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1403, i32 0, i32 2
  %1423 = getelementptr %dimension_descriptor, %dimension_descriptor* %1422, i32 0, i32 1
  %1424 = load i32, i32* %1423, align 4
  %1425 = sub i32 %1402, %1424
  %1426 = mul i32 %1421, %1425
  %1427 = add i32 %1418, %1426
  %1428 = getelementptr %dimension_descriptor, %dimension_descriptor* %1422, i32 0, i32 3
  %1429 = load i32, i32* %1428, align 4
  %1430 = mul i32 %1421, %1429
  %1431 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 0
  %1432 = load %complex_4*, %complex_4** %1431, align 8
  %1433 = getelementptr inbounds %complex_4, %complex_4* %1432, i32 %1427
  %1434 = load i32, i32* %"1_k", align 4
  %1435 = load i32, i32* %"2_k", align 4
  %1436 = load i32, i32* %"3_k", align 4
  %1437 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 2
  %1438 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1437, i32 0, i32 0
  %1439 = getelementptr %dimension_descriptor, %dimension_descriptor* %1438, i32 0, i32 1
  %1440 = load i32, i32* %1439, align 4
  %1441 = sub i32 %1434, %1440
  %1442 = mul i32 1, %1441
  %1443 = add i32 0, %1442
  %1444 = getelementptr %dimension_descriptor, %dimension_descriptor* %1438, i32 0, i32 3
  %1445 = load i32, i32* %1444, align 4
  %1446 = mul i32 1, %1445
  %1447 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1437, i32 0, i32 1
  %1448 = getelementptr %dimension_descriptor, %dimension_descriptor* %1447, i32 0, i32 1
  %1449 = load i32, i32* %1448, align 4
  %1450 = sub i32 %1435, %1449
  %1451 = mul i32 %1446, %1450
  %1452 = add i32 %1443, %1451
  %1453 = getelementptr %dimension_descriptor, %dimension_descriptor* %1447, i32 0, i32 3
  %1454 = load i32, i32* %1453, align 4
  %1455 = mul i32 %1446, %1454
  %1456 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1437, i32 0, i32 2
  %1457 = getelementptr %dimension_descriptor, %dimension_descriptor* %1456, i32 0, i32 1
  %1458 = load i32, i32* %1457, align 4
  %1459 = sub i32 %1436, %1458
  %1460 = mul i32 %1455, %1459
  %1461 = add i32 %1452, %1460
  %1462 = getelementptr %dimension_descriptor, %dimension_descriptor* %1456, i32 0, i32 3
  %1463 = load i32, i32* %1462, align 4
  %1464 = mul i32 %1455, %1463
  %1465 = getelementptr %array.1, %array.1* %"~5_unary_op_res", i32 0, i32 0
  %1466 = load i32*, i32** %1465, align 8
  %1467 = getelementptr inbounds i32, i32* %1466, i32 %1461
  %1468 = load i32, i32* %1467, align 4
  %1469 = sitofp i32 %1468 to float
  %1470 = alloca %complex_4, align 8
  %1471 = getelementptr %complex_4, %complex_4* %1470, i32 0, i32 0
  %1472 = getelementptr %complex_4, %complex_4* %1470, i32 0, i32 1
  store float %1469, float* %1471, align 4
  store float 0.000000e+00, float* %1472, align 4
  %1473 = load %complex_4, %complex_4* %1470, align 4
  store %complex_4 %1473, %complex_4* %1433, align 4
  br label %loop.head74

loop.end76:                                       ; preds = %loop.head74
  br label %loop.head72

loop.end77:                                       ; preds = %loop.head72
  br label %loop.head70

loop.end78:                                       ; preds = %loop.head70
  store i32 1, i32* %"1_v", align 4
  %1474 = alloca %dimension_descriptor*, align 8
  %1475 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 2
  %1476 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1475, i32 0, i32 0
  store %dimension_descriptor* %1476, %dimension_descriptor** %1474, align 8
  %1477 = alloca i32, align 4
  store i32 1, i32* %1477, align 4
  %1478 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1474, i32* %1477)
  %1479 = sub i32 %1478, 1
  store i32 %1479, i32* %"1_t", align 4
  br label %loop.head79

loop.head79:                                      ; preds = %loop.end86, %loop.end78
  %1480 = load i32, i32* %"1_t", align 4
  %1481 = add i32 %1480, 1
  %1482 = alloca %dimension_descriptor*, align 8
  %1483 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 2
  %1484 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1483, i32 0, i32 0
  store %dimension_descriptor* %1484, %dimension_descriptor** %1482, align 8
  %1485 = alloca i32, align 4
  store i32 1, i32* %1485, align 4
  %1486 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1482, i32* %1485)
  %1487 = icmp sle i32 %1481, %1486
  br i1 %1487, label %loop.body80, label %loop.end87

loop.body80:                                      ; preds = %loop.head79
  %1488 = load i32, i32* %"1_t", align 4
  %1489 = add i32 %1488, 1
  store i32 %1489, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %1490 = alloca %dimension_descriptor*, align 8
  %1491 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 2
  %1492 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1491, i32 0, i32 0
  store %dimension_descriptor* %1492, %dimension_descriptor** %1490, align 8
  %1493 = alloca i32, align 4
  store i32 2, i32* %1493, align 4
  %1494 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1490, i32* %1493)
  %1495 = sub i32 %1494, 1
  store i32 %1495, i32* %"2_t", align 4
  br label %loop.head81

loop.head81:                                      ; preds = %loop.end85, %loop.body80
  %1496 = load i32, i32* %"2_t", align 4
  %1497 = add i32 %1496, 1
  %1498 = alloca %dimension_descriptor*, align 8
  %1499 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 2
  %1500 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1499, i32 0, i32 0
  store %dimension_descriptor* %1500, %dimension_descriptor** %1498, align 8
  %1501 = alloca i32, align 4
  store i32 2, i32* %1501, align 4
  %1502 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1498, i32* %1501)
  %1503 = icmp sle i32 %1497, %1502
  br i1 %1503, label %loop.body82, label %loop.end86

loop.body82:                                      ; preds = %loop.head81
  %1504 = load i32, i32* %"2_t", align 4
  %1505 = add i32 %1504, 1
  store i32 %1505, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %1506 = alloca %dimension_descriptor*, align 8
  %1507 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 2
  %1508 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1507, i32 0, i32 0
  store %dimension_descriptor* %1508, %dimension_descriptor** %1506, align 8
  %1509 = alloca i32, align 4
  store i32 3, i32* %1509, align 4
  %1510 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1506, i32* %1509)
  %1511 = sub i32 %1510, 1
  store i32 %1511, i32* %"3_t", align 4
  br label %loop.head83

loop.head83:                                      ; preds = %loop.body84, %loop.body82
  %1512 = load i32, i32* %"3_t", align 4
  %1513 = add i32 %1512, 1
  %1514 = alloca %dimension_descriptor*, align 8
  %1515 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 2
  %1516 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1515, i32 0, i32 0
  store %dimension_descriptor* %1516, %dimension_descriptor** %1514, align 8
  %1517 = alloca i32, align 4
  store i32 3, i32* %1517, align 4
  %1518 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1514, i32* %1517)
  %1519 = icmp sle i32 %1513, %1518
  br i1 %1519, label %loop.body84, label %loop.end85

loop.body84:                                      ; preds = %loop.head83
  %1520 = load i32, i32* %"3_t", align 4
  %1521 = add i32 %1520, 1
  store i32 %1521, i32* %"3_t", align 4
  %1522 = load i32, i32* %"1_t", align 4
  %1523 = load i32, i32* %"2_t", align 4
  %1524 = load i32, i32* %"3_t", align 4
  %1525 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 2
  %1526 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1525, i32 0, i32 0
  %1527 = getelementptr %dimension_descriptor, %dimension_descriptor* %1526, i32 0, i32 1
  %1528 = load i32, i32* %1527, align 4
  %1529 = sub i32 %1522, %1528
  %1530 = mul i32 1, %1529
  %1531 = add i32 0, %1530
  %1532 = getelementptr %dimension_descriptor, %dimension_descriptor* %1526, i32 0, i32 3
  %1533 = load i32, i32* %1532, align 4
  %1534 = mul i32 1, %1533
  %1535 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1525, i32 0, i32 1
  %1536 = getelementptr %dimension_descriptor, %dimension_descriptor* %1535, i32 0, i32 1
  %1537 = load i32, i32* %1536, align 4
  %1538 = sub i32 %1523, %1537
  %1539 = mul i32 %1534, %1538
  %1540 = add i32 %1531, %1539
  %1541 = getelementptr %dimension_descriptor, %dimension_descriptor* %1535, i32 0, i32 3
  %1542 = load i32, i32* %1541, align 4
  %1543 = mul i32 %1534, %1542
  %1544 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1525, i32 0, i32 2
  %1545 = getelementptr %dimension_descriptor, %dimension_descriptor* %1544, i32 0, i32 1
  %1546 = load i32, i32* %1545, align 4
  %1547 = sub i32 %1524, %1546
  %1548 = mul i32 %1543, %1547
  %1549 = add i32 %1540, %1548
  %1550 = getelementptr %dimension_descriptor, %dimension_descriptor* %1544, i32 0, i32 3
  %1551 = load i32, i32* %1550, align 4
  %1552 = mul i32 %1543, %1551
  %1553 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 0
  %1554 = load %complex_4*, %complex_4** %1553, align 8
  %1555 = getelementptr inbounds %complex_4, %complex_4* %1554, i32 %1549
  %1556 = load i32, i32* %"1_v", align 4
  %1557 = load i32, i32* %"2_v", align 4
  %1558 = load i32, i32* %"3_v", align 4
  %1559 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 2
  %1560 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1559, i32 0, i32 0
  %1561 = getelementptr %dimension_descriptor, %dimension_descriptor* %1560, i32 0, i32 1
  %1562 = load i32, i32* %1561, align 4
  %1563 = sub i32 %1556, %1562
  %1564 = mul i32 1, %1563
  %1565 = add i32 0, %1564
  %1566 = getelementptr %dimension_descriptor, %dimension_descriptor* %1560, i32 0, i32 3
  %1567 = load i32, i32* %1566, align 4
  %1568 = mul i32 1, %1567
  %1569 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1559, i32 0, i32 1
  %1570 = getelementptr %dimension_descriptor, %dimension_descriptor* %1569, i32 0, i32 1
  %1571 = load i32, i32* %1570, align 4
  %1572 = sub i32 %1557, %1571
  %1573 = mul i32 %1568, %1572
  %1574 = add i32 %1565, %1573
  %1575 = getelementptr %dimension_descriptor, %dimension_descriptor* %1569, i32 0, i32 3
  %1576 = load i32, i32* %1575, align 4
  %1577 = mul i32 %1568, %1576
  %1578 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1559, i32 0, i32 2
  %1579 = getelementptr %dimension_descriptor, %dimension_descriptor* %1578, i32 0, i32 1
  %1580 = load i32, i32* %1579, align 4
  %1581 = sub i32 %1558, %1580
  %1582 = mul i32 %1577, %1581
  %1583 = add i32 %1574, %1582
  %1584 = getelementptr %dimension_descriptor, %dimension_descriptor* %1578, i32 0, i32 3
  %1585 = load i32, i32* %1584, align 4
  %1586 = mul i32 %1577, %1585
  %1587 = getelementptr %array.0, %array.0* %"~6_implicit_cast_res", i32 0, i32 0
  %1588 = load %complex_4*, %complex_4** %1587, align 8
  %1589 = getelementptr inbounds %complex_4, %complex_4* %1588, i32 %1583
  %1590 = load %complex_4, %complex_4* %1589, align 4
  %1591 = alloca %complex_4, align 8
  %1592 = getelementptr %complex_4, %complex_4* %1591, i32 0, i32 0
  %1593 = getelementptr %complex_4, %complex_4* %1591, i32 0, i32 1
  store float 0.000000e+00, float* %1592, align 4
  store float 1.000000e+00, float* %1593, align 4
  %1594 = load %complex_4, %complex_4* %1591, align 4
  %1595 = alloca %complex_4, align 8
  store %complex_4 %1590, %complex_4* %1595, align 4
  %1596 = alloca %complex_4, align 8
  store %complex_4 %1594, %complex_4* %1596, align 4
  %1597 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_mul(%complex_4* %1595, %complex_4* %1596, %complex_4* %1597)
  %1598 = load %complex_4, %complex_4* %1597, align 4
  store %complex_4 %1598, %complex_4* %1555, align 4
  %1599 = load i32, i32* %"3_v", align 4
  %1600 = add i32 %1599, 1
  store i32 %1600, i32* %"3_v", align 4
  br label %loop.head83

loop.end85:                                       ; preds = %loop.head83
  %1601 = load i32, i32* %"2_v", align 4
  %1602 = add i32 %1601, 1
  store i32 %1602, i32* %"2_v", align 4
  br label %loop.head81

loop.end86:                                       ; preds = %loop.head81
  %1603 = load i32, i32* %"1_v", align 4
  %1604 = add i32 %1603, 1
  store i32 %1604, i32* %"1_v", align 4
  br label %loop.head79

loop.end87:                                       ; preds = %loop.head79
  store i32 1, i32* %"1_v", align 4
  %1605 = alloca %dimension_descriptor*, align 8
  %1606 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %1607 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1606, i32 0, i32 0
  store %dimension_descriptor* %1607, %dimension_descriptor** %1605, align 8
  %1608 = alloca i32, align 4
  store i32 1, i32* %1608, align 4
  %1609 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1605, i32* %1608)
  %1610 = sub i32 %1609, 1
  store i32 %1610, i32* %"1_t", align 4
  br label %loop.head88

loop.head88:                                      ; preds = %loop.end95, %loop.end87
  %1611 = load i32, i32* %"1_t", align 4
  %1612 = add i32 %1611, 1
  %1613 = alloca %dimension_descriptor*, align 8
  %1614 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %1615 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1614, i32 0, i32 0
  store %dimension_descriptor* %1615, %dimension_descriptor** %1613, align 8
  %1616 = alloca i32, align 4
  store i32 1, i32* %1616, align 4
  %1617 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1613, i32* %1616)
  %1618 = icmp sle i32 %1612, %1617
  br i1 %1618, label %loop.body89, label %loop.end96

loop.body89:                                      ; preds = %loop.head88
  %1619 = load i32, i32* %"1_t", align 4
  %1620 = add i32 %1619, 1
  store i32 %1620, i32* %"1_t", align 4
  store i32 1, i32* %"2_v", align 4
  %1621 = alloca %dimension_descriptor*, align 8
  %1622 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %1623 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1622, i32 0, i32 0
  store %dimension_descriptor* %1623, %dimension_descriptor** %1621, align 8
  %1624 = alloca i32, align 4
  store i32 2, i32* %1624, align 4
  %1625 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1621, i32* %1624)
  %1626 = sub i32 %1625, 1
  store i32 %1626, i32* %"2_t", align 4
  br label %loop.head90

loop.head90:                                      ; preds = %loop.end94, %loop.body89
  %1627 = load i32, i32* %"2_t", align 4
  %1628 = add i32 %1627, 1
  %1629 = alloca %dimension_descriptor*, align 8
  %1630 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %1631 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1630, i32 0, i32 0
  store %dimension_descriptor* %1631, %dimension_descriptor** %1629, align 8
  %1632 = alloca i32, align 4
  store i32 2, i32* %1632, align 4
  %1633 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1629, i32* %1632)
  %1634 = icmp sle i32 %1628, %1633
  br i1 %1634, label %loop.body91, label %loop.end95

loop.body91:                                      ; preds = %loop.head90
  %1635 = load i32, i32* %"2_t", align 4
  %1636 = add i32 %1635, 1
  store i32 %1636, i32* %"2_t", align 4
  store i32 1, i32* %"3_v", align 4
  %1637 = alloca %dimension_descriptor*, align 8
  %1638 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %1639 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1638, i32 0, i32 0
  store %dimension_descriptor* %1639, %dimension_descriptor** %1637, align 8
  %1640 = alloca i32, align 4
  store i32 3, i32* %1640, align 4
  %1641 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %1637, i32* %1640)
  %1642 = sub i32 %1641, 1
  store i32 %1642, i32* %"3_t", align 4
  br label %loop.head92

loop.head92:                                      ; preds = %loop.body93, %loop.body91
  %1643 = load i32, i32* %"3_t", align 4
  %1644 = add i32 %1643, 1
  %1645 = alloca %dimension_descriptor*, align 8
  %1646 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %1647 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1646, i32 0, i32 0
  store %dimension_descriptor* %1647, %dimension_descriptor** %1645, align 8
  %1648 = alloca i32, align 4
  store i32 3, i32* %1648, align 4
  %1649 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %1645, i32* %1648)
  %1650 = icmp sle i32 %1644, %1649
  br i1 %1650, label %loop.body93, label %loop.end94

loop.body93:                                      ; preds = %loop.head92
  %1651 = load i32, i32* %"3_t", align 4
  %1652 = add i32 %1651, 1
  store i32 %1652, i32* %"3_t", align 4
  %1653 = load i32, i32* %"1_t", align 4
  %1654 = load i32, i32* %"2_t", align 4
  %1655 = load i32, i32* %"3_t", align 4
  %1656 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %1657 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1656, i32 0, i32 0
  %1658 = getelementptr %dimension_descriptor, %dimension_descriptor* %1657, i32 0, i32 1
  %1659 = load i32, i32* %1658, align 4
  %1660 = sub i32 %1653, %1659
  %1661 = mul i32 1, %1660
  %1662 = add i32 0, %1661
  %1663 = getelementptr %dimension_descriptor, %dimension_descriptor* %1657, i32 0, i32 3
  %1664 = load i32, i32* %1663, align 4
  %1665 = mul i32 1, %1664
  %1666 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1656, i32 0, i32 1
  %1667 = getelementptr %dimension_descriptor, %dimension_descriptor* %1666, i32 0, i32 1
  %1668 = load i32, i32* %1667, align 4
  %1669 = sub i32 %1654, %1668
  %1670 = mul i32 %1665, %1669
  %1671 = add i32 %1662, %1670
  %1672 = getelementptr %dimension_descriptor, %dimension_descriptor* %1666, i32 0, i32 3
  %1673 = load i32, i32* %1672, align 4
  %1674 = mul i32 %1665, %1673
  %1675 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1656, i32 0, i32 2
  %1676 = getelementptr %dimension_descriptor, %dimension_descriptor* %1675, i32 0, i32 1
  %1677 = load i32, i32* %1676, align 4
  %1678 = sub i32 %1655, %1677
  %1679 = mul i32 %1674, %1678
  %1680 = add i32 %1671, %1679
  %1681 = getelementptr %dimension_descriptor, %dimension_descriptor* %1675, i32 0, i32 3
  %1682 = load i32, i32* %1681, align 4
  %1683 = mul i32 %1674, %1682
  %1684 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %1685 = load %complex_4*, %complex_4** %1684, align 8
  %1686 = getelementptr inbounds %complex_4, %complex_4* %1685, i32 %1680
  %1687 = load i32, i32* %"1_v", align 4
  %1688 = load i32, i32* %"2_v", align 4
  %1689 = load i32, i32* %"3_v", align 4
  %1690 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 2
  %1691 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1690, i32 0, i32 0
  %1692 = getelementptr %dimension_descriptor, %dimension_descriptor* %1691, i32 0, i32 1
  %1693 = load i32, i32* %1692, align 4
  %1694 = sub i32 %1687, %1693
  %1695 = mul i32 1, %1694
  %1696 = add i32 0, %1695
  %1697 = getelementptr %dimension_descriptor, %dimension_descriptor* %1691, i32 0, i32 3
  %1698 = load i32, i32* %1697, align 4
  %1699 = mul i32 1, %1698
  %1700 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1690, i32 0, i32 1
  %1701 = getelementptr %dimension_descriptor, %dimension_descriptor* %1700, i32 0, i32 1
  %1702 = load i32, i32* %1701, align 4
  %1703 = sub i32 %1688, %1702
  %1704 = mul i32 %1699, %1703
  %1705 = add i32 %1696, %1704
  %1706 = getelementptr %dimension_descriptor, %dimension_descriptor* %1700, i32 0, i32 3
  %1707 = load i32, i32* %1706, align 4
  %1708 = mul i32 %1699, %1707
  %1709 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1690, i32 0, i32 2
  %1710 = getelementptr %dimension_descriptor, %dimension_descriptor* %1709, i32 0, i32 1
  %1711 = load i32, i32* %1710, align 4
  %1712 = sub i32 %1689, %1711
  %1713 = mul i32 %1708, %1712
  %1714 = add i32 %1705, %1713
  %1715 = getelementptr %dimension_descriptor, %dimension_descriptor* %1709, i32 0, i32 3
  %1716 = load i32, i32* %1715, align 4
  %1717 = mul i32 %1708, %1716
  %1718 = getelementptr %array.0, %array.0* %"~4_implicit_cast_res", i32 0, i32 0
  %1719 = load %complex_4*, %complex_4** %1718, align 8
  %1720 = getelementptr inbounds %complex_4, %complex_4* %1719, i32 %1714
  %1721 = load %complex_4, %complex_4* %1720, align 4
  %1722 = load i32, i32* %"1_v", align 4
  %1723 = load i32, i32* %"2_v", align 4
  %1724 = load i32, i32* %"3_v", align 4
  %1725 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 2
  %1726 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1725, i32 0, i32 0
  %1727 = getelementptr %dimension_descriptor, %dimension_descriptor* %1726, i32 0, i32 1
  %1728 = load i32, i32* %1727, align 4
  %1729 = sub i32 %1722, %1728
  %1730 = mul i32 1, %1729
  %1731 = add i32 0, %1730
  %1732 = getelementptr %dimension_descriptor, %dimension_descriptor* %1726, i32 0, i32 3
  %1733 = load i32, i32* %1732, align 4
  %1734 = mul i32 1, %1733
  %1735 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1725, i32 0, i32 1
  %1736 = getelementptr %dimension_descriptor, %dimension_descriptor* %1735, i32 0, i32 1
  %1737 = load i32, i32* %1736, align 4
  %1738 = sub i32 %1723, %1737
  %1739 = mul i32 %1734, %1738
  %1740 = add i32 %1731, %1739
  %1741 = getelementptr %dimension_descriptor, %dimension_descriptor* %1735, i32 0, i32 3
  %1742 = load i32, i32* %1741, align 4
  %1743 = mul i32 %1734, %1742
  %1744 = getelementptr [3 x %dimension_descriptor], [3 x %dimension_descriptor]* %1725, i32 0, i32 2
  %1745 = getelementptr %dimension_descriptor, %dimension_descriptor* %1744, i32 0, i32 1
  %1746 = load i32, i32* %1745, align 4
  %1747 = sub i32 %1724, %1746
  %1748 = mul i32 %1743, %1747
  %1749 = add i32 %1740, %1748
  %1750 = getelementptr %dimension_descriptor, %dimension_descriptor* %1744, i32 0, i32 3
  %1751 = load i32, i32* %1750, align 4
  %1752 = mul i32 %1743, %1751
  %1753 = getelementptr %array.0, %array.0* %"~7_bin_op_res", i32 0, i32 0
  %1754 = load %complex_4*, %complex_4** %1753, align 8
  %1755 = getelementptr inbounds %complex_4, %complex_4* %1754, i32 %1749
  %1756 = load %complex_4, %complex_4* %1755, align 4
  %1757 = alloca %complex_4, align 8
  store %complex_4 %1721, %complex_4* %1757, align 4
  %1758 = alloca %complex_4, align 8
  store %complex_4 %1756, %complex_4* %1758, align 4
  %1759 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %1757, %complex_4* %1758, %complex_4* %1759)
  %1760 = load %complex_4, %complex_4* %1759, align 4
  store %complex_4 %1760, %complex_4* %1686, align 4
  %1761 = load i32, i32* %"3_v", align 4
  %1762 = add i32 %1761, 1
  store i32 %1762, i32* %"3_v", align 4
  br label %loop.head92

loop.end94:                                       ; preds = %loop.head92
  %1763 = load i32, i32* %"2_v", align 4
  %1764 = add i32 %1763, 1
  store i32 %1764, i32* %"2_v", align 4
  br label %loop.head90

loop.end95:                                       ; preds = %loop.head90
  %1765 = load i32, i32* %"1_v", align 4
  %1766 = add i32 %1765, 1
  store i32 %1766, i32* %"1_v", align 4
  br label %loop.head88

loop.end96:                                       ; preds = %loop.head88
  %1767 = alloca %array.0, align 8
  store i32 1, i32* %call_arg_value97, align 4
  call void @check(%array.0* %c, i32* %call_arg_value97)
  ret i32 0
}
