; ModuleID = 'LFortran'
source_filename = "LFortran"

%size_arg = type { %dimension_descriptor*, i32 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array = type { i32*, i32, [1 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %x, i32* %dim, i32* %kind) {
.entry:
  %size = alloca i32, align 4
  %0 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 0
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr %size_arg, %size_arg* %x, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  store i32 1, i32* %size, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %size, align 4
  %9 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 %7
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %8, %11
  store i32 %12, i32* %size, align 4
  %13 = add i32 %7, 1
  store i32 %13, i32* %4, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  %14 = load i32, i32* %size, align 4
  ret i32 %14
}

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = alloca i32, align 4
  store i32 3, i32* %11, align 4
  %12 = getelementptr %array, %array* %a, i32 0, i32 0
  %13 = load i32, i32* %11, align 4
  %14 = alloca i32, i32 %13, align 4
  store i32* %14, i32** %12, align 8
  %b = alloca %array, align 8
  %15 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr %array, %array* %b, i32 0, i32 2
  %17 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 3
  store i32 1, i32* %18, align 4
  store i32 1, i32* %19, align 4
  store i32 4, i32* %20, align 4
  %22 = load i32, i32* %20, align 4
  %23 = load i32, i32* %19, align 4
  %24 = sub i32 %22, %23
  %25 = add i32 %24, 1
  store i32 %25, i32* %21, align 4
  %26 = alloca i32, align 4
  store i32 4, i32* %26, align 4
  %27 = getelementptr %array, %array* %b, i32 0, i32 0
  %28 = load i32, i32* %26, align 4
  %29 = alloca i32, i32 %28, align 4
  store i32* %29, i32** %27, align 8
  %i = alloca i32, align 4
  %size_a = alloca i32, align 4
  %size_b = alloca i32, align 4
  %30 = alloca %size_arg, align 8
  %31 = getelementptr %array, %array* %a, i32 0, i32 2
  %32 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %31, i32 0, i32 0
  %33 = getelementptr %size_arg, %size_arg* %30, i32 0, i32 0
  store %dimension_descriptor* %32, %dimension_descriptor** %33, align 8
  %34 = getelementptr %size_arg, %size_arg* %30, i32 0, i32 1
  store i32 1, i32* %34, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %30, i32* %35, i32* %36)
  store i32 %37, i32* %size_a, align 4
  %38 = alloca %size_arg, align 8
  %39 = getelementptr %array, %array* %b, i32 0, i32 2
  %40 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %39, i32 0, i32 0
  %41 = getelementptr %size_arg, %size_arg* %38, i32 0, i32 0
  store %dimension_descriptor* %40, %dimension_descriptor** %41, align 8
  %42 = getelementptr %size_arg, %size_arg* %38, i32 0, i32 1
  store i32 1, i32* %42, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = call i32 @__module_lfortran_intrinsic_builtin_size(%size_arg* %38, i32* %43, i32* %44)
  store i32 %45, i32* %size_b, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %46 = load i32, i32* %i, align 4
  %47 = add i32 %46, 1
  %48 = load i32, i32* %size_a, align 4
  %49 = icmp sle i32 %47, %48
  br i1 %49, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %50 = load i32, i32* %i, align 4
  %51 = add i32 %50, 1
  store i32 %51, i32* %i, align 4
  %52 = load i32, i32* %i, align 4
  %53 = getelementptr %array, %array* %a, i32 0, i32 2
  %54 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %53, i32 0, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = sub i32 %52, %56
  %58 = mul i32 1, %57
  %59 = add i32 0, %58
  %60 = getelementptr %dimension_descriptor, %dimension_descriptor* %54, i32 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = mul i32 1, %61
  %63 = getelementptr %array, %array* %a, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = getelementptr inbounds i32, i32* %64, i32 %59
  %66 = load i32, i32* %i, align 4
  %67 = add i32 %66, 10
  store i32 %67, i32* %65, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %68 = getelementptr %array, %array* %a, i32 0, i32 2
  %69 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %68, i32 0, i32 0
  %70 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 1, %71
  %73 = mul i32 1, %72
  %74 = add i32 0, %73
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %69, i32 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = mul i32 1, %76
  %78 = getelementptr %array, %array* %a, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds i32, i32* %79, i32 %74
  %81 = load i32, i32* %80, align 4
  %82 = icmp ne i32 %81, 11
  br i1 %82, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %83 = getelementptr %array, %array* %a, i32 0, i32 2
  %84 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %83, i32 0, i32 0
  %85 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = sub i32 2, %86
  %88 = mul i32 1, %87
  %89 = add i32 0, %88
  %90 = getelementptr %dimension_descriptor, %dimension_descriptor* %84, i32 0, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = mul i32 1, %91
  %93 = getelementptr %array, %array* %a, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = getelementptr inbounds i32, i32* %94, i32 %89
  %96 = load i32, i32* %95, align 4
  %97 = icmp ne i32 %96, 12
  br i1 %97, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %98 = getelementptr %array, %array* %a, i32 0, i32 2
  %99 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %98, i32 0, i32 0
  %100 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = sub i32 3, %101
  %103 = mul i32 1, %102
  %104 = add i32 0, %103
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %99, i32 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = mul i32 1, %106
  %108 = getelementptr %array, %array* %a, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = getelementptr inbounds i32, i32* %109, i32 %104
  %111 = load i32, i32* %110, align 4
  %112 = icmp ne i32 %111, 13
  br i1 %112, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %113 = load i32, i32* %i, align 4
  %114 = add i32 %113, 1
  %115 = load i32, i32* %size_b, align 4
  %116 = add i32 10, %115
  %117 = icmp sle i32 %114, %116
  br i1 %117, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %118 = load i32, i32* %i, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %i, align 4
  %120 = load i32, i32* %i, align 4
  %121 = sub i32 %120, 10
  %122 = getelementptr %array, %array* %b, i32 0, i32 2
  %123 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %122, i32 0, i32 0
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 %121, %125
  %127 = mul i32 1, %126
  %128 = add i32 0, %127
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 3
  %130 = load i32, i32* %129, align 4
  %131 = mul i32 1, %130
  %132 = getelementptr %array, %array* %b, i32 0, i32 0
  %133 = load i32*, i32** %132, align 8
  %134 = getelementptr inbounds i32, i32* %133, i32 %128
  %135 = load i32, i32* %i, align 4
  store i32 %135, i32* %134, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %136 = getelementptr %array, %array* %b, i32 0, i32 2
  %137 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %136, i32 0, i32 0
  %138 = getelementptr %dimension_descriptor, %dimension_descriptor* %137, i32 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = sub i32 1, %139
  %141 = mul i32 1, %140
  %142 = add i32 0, %141
  %143 = getelementptr %dimension_descriptor, %dimension_descriptor* %137, i32 0, i32 3
  %144 = load i32, i32* %143, align 4
  %145 = mul i32 1, %144
  %146 = getelementptr %array, %array* %b, i32 0, i32 0
  %147 = load i32*, i32** %146, align 8
  %148 = getelementptr inbounds i32, i32* %147, i32 %142
  %149 = load i32, i32* %148, align 4
  %150 = icmp ne i32 %149, 11
  br i1 %150, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %151 = getelementptr %array, %array* %b, i32 0, i32 2
  %152 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %151, i32 0, i32 0
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 2, %154
  %156 = mul i32 1, %155
  %157 = add i32 0, %156
  %158 = getelementptr %dimension_descriptor, %dimension_descriptor* %152, i32 0, i32 3
  %159 = load i32, i32* %158, align 4
  %160 = mul i32 1, %159
  %161 = getelementptr %array, %array* %b, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = getelementptr inbounds i32, i32* %162, i32 %157
  %164 = load i32, i32* %163, align 4
  %165 = icmp ne i32 %164, 12
  br i1 %165, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %166 = getelementptr %array, %array* %b, i32 0, i32 2
  %167 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %166, i32 0, i32 0
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = sub i32 3, %169
  %171 = mul i32 1, %170
  %172 = add i32 0, %171
  %173 = getelementptr %dimension_descriptor, %dimension_descriptor* %167, i32 0, i32 3
  %174 = load i32, i32* %173, align 4
  %175 = mul i32 1, %174
  %176 = getelementptr %array, %array* %b, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = getelementptr inbounds i32, i32* %177, i32 %172
  %179 = load i32, i32* %178, align 4
  %180 = icmp ne i32 %179, 13
  br i1 %180, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %181 = getelementptr %array, %array* %b, i32 0, i32 2
  %182 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %181, i32 0, i32 0
  %183 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = sub i32 4, %184
  %186 = mul i32 1, %185
  %187 = add i32 0, %186
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %182, i32 0, i32 3
  %189 = load i32, i32* %188, align 4
  %190 = mul i32 1, %189
  %191 = getelementptr %array, %array* %b, i32 0, i32 0
  %192 = load i32*, i32** %191, align 8
  %193 = getelementptr inbounds i32, i32* %192, i32 %187
  %194 = load i32, i32* %193, align 4
  %195 = icmp ne i32 %194, 14
  br i1 %195, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %196 = load i32, i32* %i, align 4
  %197 = add i32 %196, 1
  %198 = load i32, i32* %size_a, align 4
  %199 = icmp sle i32 %197, %198
  br i1 %199, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %200 = load i32, i32* %i, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %i, align 4
  %202 = load i32, i32* %i, align 4
  %203 = getelementptr %array, %array* %b, i32 0, i32 2
  %204 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %203, i32 0, i32 0
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = sub i32 %202, %206
  %208 = mul i32 1, %207
  %209 = add i32 0, %208
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 3
  %211 = load i32, i32* %210, align 4
  %212 = mul i32 1, %211
  %213 = getelementptr %array, %array* %b, i32 0, i32 0
  %214 = load i32*, i32** %213, align 8
  %215 = getelementptr inbounds i32, i32* %214, i32 %209
  %216 = load i32, i32* %i, align 4
  %217 = getelementptr %array, %array* %a, i32 0, i32 2
  %218 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %217, i32 0, i32 0
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 %216, %220
  %222 = mul i32 1, %221
  %223 = add i32 0, %222
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = mul i32 1, %225
  %227 = getelementptr %array, %array* %a, i32 0, i32 0
  %228 = load i32*, i32** %227, align 8
  %229 = getelementptr inbounds i32, i32* %228, i32 %223
  %230 = load i32, i32* %229, align 4
  %231 = sub i32 %230, 10
  store i32 %231, i32* %215, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %232 = getelementptr %array, %array* %b, i32 0, i32 2
  %233 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %232, i32 0, i32 0
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = sub i32 1, %235
  %237 = mul i32 1, %236
  %238 = add i32 0, %237
  %239 = getelementptr %dimension_descriptor, %dimension_descriptor* %233, i32 0, i32 3
  %240 = load i32, i32* %239, align 4
  %241 = mul i32 1, %240
  %242 = getelementptr %array, %array* %b, i32 0, i32 0
  %243 = load i32*, i32** %242, align 8
  %244 = getelementptr inbounds i32, i32* %243, i32 %238
  %245 = load i32, i32* %244, align 4
  %246 = icmp ne i32 %245, 1
  br i1 %246, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %247 = getelementptr %array, %array* %b, i32 0, i32 2
  %248 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %247, i32 0, i32 0
  %249 = getelementptr %dimension_descriptor, %dimension_descriptor* %248, i32 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = sub i32 2, %250
  %252 = mul i32 1, %251
  %253 = add i32 0, %252
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %248, i32 0, i32 3
  %255 = load i32, i32* %254, align 4
  %256 = mul i32 1, %255
  %257 = getelementptr %array, %array* %b, i32 0, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = getelementptr inbounds i32, i32* %258, i32 %253
  %260 = load i32, i32* %259, align 4
  %261 = icmp ne i32 %260, 2
  br i1 %261, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %262 = getelementptr %array, %array* %b, i32 0, i32 2
  %263 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %262, i32 0, i32 0
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = sub i32 3, %265
  %267 = mul i32 1, %266
  %268 = add i32 0, %267
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = mul i32 1, %270
  %272 = getelementptr %array, %array* %b, i32 0, i32 0
  %273 = load i32*, i32** %272, align 8
  %274 = getelementptr inbounds i32, i32* %273, i32 %268
  %275 = load i32, i32* %274, align 4
  %276 = icmp ne i32 %275, 3
  br i1 %276, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %277 = getelementptr %array, %array* %b, i32 0, i32 2
  %278 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %277, i32 0, i32 0
  %279 = getelementptr %dimension_descriptor, %dimension_descriptor* %278, i32 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = sub i32 4, %280
  %282 = mul i32 1, %281
  %283 = add i32 0, %282
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %278, i32 0, i32 3
  %285 = load i32, i32* %284, align 4
  %286 = mul i32 1, %285
  %287 = getelementptr %array, %array* %b, i32 0, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = getelementptr inbounds i32, i32* %288, i32 %283
  %290 = getelementptr %array, %array* %b, i32 0, i32 2
  %291 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %290, i32 0, i32 0
  %292 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = sub i32 1, %293
  %295 = mul i32 1, %294
  %296 = add i32 0, %295
  %297 = getelementptr %dimension_descriptor, %dimension_descriptor* %291, i32 0, i32 3
  %298 = load i32, i32* %297, align 4
  %299 = mul i32 1, %298
  %300 = getelementptr %array, %array* %b, i32 0, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = getelementptr inbounds i32, i32* %301, i32 %296
  %303 = load i32, i32* %302, align 4
  %304 = getelementptr %array, %array* %b, i32 0, i32 2
  %305 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %304, i32 0, i32 0
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %305, i32 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = sub i32 2, %307
  %309 = mul i32 1, %308
  %310 = add i32 0, %309
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %305, i32 0, i32 3
  %312 = load i32, i32* %311, align 4
  %313 = mul i32 1, %312
  %314 = getelementptr %array, %array* %b, i32 0, i32 0
  %315 = load i32*, i32** %314, align 8
  %316 = getelementptr inbounds i32, i32* %315, i32 %310
  %317 = load i32, i32* %316, align 4
  %318 = add i32 %303, %317
  %319 = getelementptr %array, %array* %b, i32 0, i32 2
  %320 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %319, i32 0, i32 0
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 1
  %322 = load i32, i32* %321, align 4
  %323 = sub i32 3, %322
  %324 = mul i32 1, %323
  %325 = add i32 0, %324
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %320, i32 0, i32 3
  %327 = load i32, i32* %326, align 4
  %328 = mul i32 1, %327
  %329 = getelementptr %array, %array* %b, i32 0, i32 0
  %330 = load i32*, i32** %329, align 8
  %331 = getelementptr inbounds i32, i32* %330, i32 %325
  %332 = load i32, i32* %331, align 4
  %333 = add i32 %318, %332
  %334 = getelementptr %array, %array* %a, i32 0, i32 2
  %335 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %334, i32 0, i32 0
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 1
  %337 = load i32, i32* %336, align 4
  %338 = sub i32 1, %337
  %339 = mul i32 1, %338
  %340 = add i32 0, %339
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %335, i32 0, i32 3
  %342 = load i32, i32* %341, align 4
  %343 = mul i32 1, %342
  %344 = getelementptr %array, %array* %a, i32 0, i32 0
  %345 = load i32*, i32** %344, align 8
  %346 = getelementptr inbounds i32, i32* %345, i32 %340
  %347 = load i32, i32* %346, align 4
  %348 = add i32 %333, %347
  store i32 %348, i32* %289, align 4
  %349 = getelementptr %array, %array* %b, i32 0, i32 2
  %350 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %349, i32 0, i32 0
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = sub i32 4, %352
  %354 = mul i32 1, %353
  %355 = add i32 0, %354
  %356 = getelementptr %dimension_descriptor, %dimension_descriptor* %350, i32 0, i32 3
  %357 = load i32, i32* %356, align 4
  %358 = mul i32 1, %357
  %359 = getelementptr %array, %array* %b, i32 0, i32 0
  %360 = load i32*, i32** %359, align 8
  %361 = getelementptr inbounds i32, i32* %360, i32 %355
  %362 = load i32, i32* %361, align 4
  %363 = icmp ne i32 %362, 17
  br i1 %363, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %364 = getelementptr %array, %array* %b, i32 0, i32 2
  %365 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %364, i32 0, i32 0
  %366 = getelementptr %dimension_descriptor, %dimension_descriptor* %365, i32 0, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = sub i32 4, %367
  %369 = mul i32 1, %368
  %370 = add i32 0, %369
  %371 = getelementptr %dimension_descriptor, %dimension_descriptor* %365, i32 0, i32 3
  %372 = load i32, i32* %371, align 4
  %373 = mul i32 1, %372
  %374 = getelementptr %array, %array* %b, i32 0, i32 0
  %375 = load i32*, i32** %374, align 8
  %376 = getelementptr inbounds i32, i32* %375, i32 %370
  %377 = getelementptr %array, %array* %a, i32 0, i32 2
  %378 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %377, i32 0, i32 0
  %379 = getelementptr %dimension_descriptor, %dimension_descriptor* %378, i32 0, i32 1
  %380 = load i32, i32* %379, align 4
  %381 = sub i32 1, %380
  %382 = mul i32 1, %381
  %383 = add i32 0, %382
  %384 = getelementptr %dimension_descriptor, %dimension_descriptor* %378, i32 0, i32 3
  %385 = load i32, i32* %384, align 4
  %386 = mul i32 1, %385
  %387 = getelementptr %array, %array* %a, i32 0, i32 0
  %388 = load i32*, i32** %387, align 8
  %389 = getelementptr inbounds i32, i32* %388, i32 %383
  %390 = load i32, i32* %389, align 4
  store i32 %390, i32* %376, align 4
  %391 = getelementptr %array, %array* %b, i32 0, i32 2
  %392 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %391, i32 0, i32 0
  %393 = getelementptr %dimension_descriptor, %dimension_descriptor* %392, i32 0, i32 1
  %394 = load i32, i32* %393, align 4
  %395 = sub i32 4, %394
  %396 = mul i32 1, %395
  %397 = add i32 0, %396
  %398 = getelementptr %dimension_descriptor, %dimension_descriptor* %392, i32 0, i32 3
  %399 = load i32, i32* %398, align 4
  %400 = mul i32 1, %399
  %401 = getelementptr %array, %array* %b, i32 0, i32 0
  %402 = load i32*, i32** %401, align 8
  %403 = getelementptr inbounds i32, i32* %402, i32 %397
  %404 = load i32, i32* %403, align 4
  %405 = icmp ne i32 %404, 11
  br i1 %405, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
