; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { float*, i32, [1 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %"1_t" = alloca i32, align 4
  %"1_v" = alloca i32, align 4
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 10, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = alloca i32, align 4
  store i32 10, i32* %11, align 4
  %12 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %13 = load i32, i32* %11, align 4
  %14 = alloca float, i32 %13, align 4
  store float* %14, float** %12, align 8
  %myreal = alloca %array.0, align 8
  %15 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 3
  store i1 false, i1* %15, align 1
  %theta = alloca %array.0, align 8
  %16 = getelementptr %array.0, %array.0* %theta, i32 0, i32 1
  store i32 0, i32* %16, align 4
  %17 = getelementptr %array.0, %array.0* %theta, i32 0, i32 2
  %18 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %17, i32 0, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 0
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 1
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 2
  %22 = getelementptr %dimension_descriptor, %dimension_descriptor* %18, i32 0, i32 3
  store i32 1, i32* %19, align 4
  store i32 1, i32* %20, align 4
  store i32 10, i32* %21, align 4
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %20, align 4
  %25 = sub i32 %23, %24
  %26 = add i32 %25, 1
  store i32 %26, i32* %22, align 4
  %27 = alloca i32, align 4
  store i32 10, i32* %27, align 4
  %28 = getelementptr %array.0, %array.0* %theta, i32 0, i32 0
  %29 = load i32, i32* %27, align 4
  %30 = alloca float, i32 %29, align 4
  store float* %30, float** %28, align 8
  %x = alloca %array.0, align 8
  %31 = getelementptr %array.0, %array.0* %x, i32 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %33 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %32, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 0
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 1
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 2
  %37 = getelementptr %dimension_descriptor, %dimension_descriptor* %33, i32 0, i32 3
  store i32 1, i32* %34, align 4
  store i32 1, i32* %35, align 4
  store i32 10, i32* %36, align 4
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %35, align 4
  %40 = sub i32 %38, %39
  %41 = add i32 %40, 1
  store i32 %41, i32* %37, align 4
  %42 = alloca i32, align 4
  store i32 10, i32* %42, align 4
  %43 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %44 = load i32, i32* %42, align 4
  %45 = alloca float, i32 %44, align 4
  store float* %45, float** %43, align 8
  %y = alloca %array.0, align 8
  %46 = getelementptr %array.0, %array.0* %y, i32 0, i32 1
  store i32 0, i32* %46, align 4
  %47 = getelementptr %array.0, %array.0* %y, i32 0, i32 2
  %48 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %47, i32 0, i32 0
  %49 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 0
  %50 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 1
  %51 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 2
  %52 = getelementptr %dimension_descriptor, %dimension_descriptor* %48, i32 0, i32 3
  store i32 1, i32* %49, align 4
  store i32 1, i32* %50, align 4
  store i32 10, i32* %51, align 4
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %50, align 4
  %55 = sub i32 %53, %54
  %56 = add i32 %55, 1
  store i32 %56, i32* %52, align 4
  %57 = alloca i32, align 4
  store i32 10, i32* %57, align 4
  %58 = getelementptr %array.0, %array.0* %y, i32 0, i32 0
  %59 = load i32, i32* %57, align 4
  %60 = alloca float, i32 %59, align 4
  store float* %60, float** %58, align 8
  %"~0_bin_op_res" = alloca %array.0, align 8
  %61 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 1
  store i32 0, i32* %61, align 4
  %62 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %63 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %62, i32 0, i32 0
  %64 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 0
  %65 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 1
  %66 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 2
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %63, i32 0, i32 3
  store i32 1, i32* %64, align 4
  store i32 1, i32* %65, align 4
  store i32 10, i32* %66, align 4
  %68 = load i32, i32* %66, align 4
  %69 = load i32, i32* %65, align 4
  %70 = sub i32 %68, %69
  %71 = add i32 %70, 1
  store i32 %71, i32* %67, align 4
  %72 = alloca i32, align 4
  store i32 10, i32* %72, align 4
  %73 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 0
  %74 = load i32, i32* %72, align 4
  %75 = alloca float, i32 %74, align 4
  store float* %75, float** %73, align 8
  %"~0_slice" = alloca %array.0, align 8
  %76 = getelementptr %array.0, %array.0* %"~0_slice", i32 0, i32 1
  store i32 0, i32* %76, align 4
  %77 = getelementptr %array.0, %array.0* %"~0_slice", i32 0, i32 2
  %78 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %77, i32 0, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 0
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 3
  store i32 1, i32* %79, align 4
  store i32 1, i32* %80, align 4
  store i32 4, i32* %81, align 4
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %80, align 4
  %85 = sub i32 %83, %84
  %86 = add i32 %85, 1
  store i32 %86, i32* %82, align 4
  %87 = alloca i32, align 4
  store i32 4, i32* %87, align 4
  %88 = getelementptr %array.0, %array.0* %"~0_slice", i32 0, i32 0
  %89 = load i32, i32* %87, align 4
  %90 = alloca float, i32 %89, align 4
  store float* %90, float** %88, align 8
  %"~1_bin_op_res" = alloca %array.0, align 8
  %91 = getelementptr %array.0, %array.0* %"~1_bin_op_res", i32 0, i32 1
  store i32 0, i32* %91, align 4
  %92 = getelementptr %array.0, %array.0* %"~1_bin_op_res", i32 0, i32 2
  %93 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %92, i32 0, i32 0
  %94 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 0
  %95 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 1
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 2
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %93, i32 0, i32 3
  store i32 1, i32* %94, align 4
  store i32 1, i32* %95, align 4
  store i32 10, i32* %96, align 4
  %98 = load i32, i32* %96, align 4
  %99 = load i32, i32* %95, align 4
  %100 = sub i32 %98, %99
  %101 = add i32 %100, 1
  store i32 %101, i32* %97, align 4
  %102 = alloca i32, align 4
  store i32 10, i32* %102, align 4
  %103 = getelementptr %array.0, %array.0* %"~1_bin_op_res", i32 0, i32 0
  %104 = load i32, i32* %102, align 4
  %105 = alloca float, i32 %104, align 4
  store float* %105, float** %103, align 8
  %"~1_slice" = alloca %array.0, align 8
  %106 = getelementptr %array.0, %array.0* %"~1_slice", i32 0, i32 1
  store i32 0, i32* %106, align 4
  %107 = getelementptr %array.0, %array.0* %"~1_slice", i32 0, i32 2
  %108 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %107, i32 0, i32 0
  %109 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 0
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 1
  %111 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 2
  %112 = getelementptr %dimension_descriptor, %dimension_descriptor* %108, i32 0, i32 3
  store i32 1, i32* %109, align 4
  store i32 1, i32* %110, align 4
  store i32 4, i32* %111, align 4
  %113 = load i32, i32* %111, align 4
  %114 = load i32, i32* %110, align 4
  %115 = sub i32 %113, %114
  %116 = add i32 %115, 1
  store i32 %116, i32* %112, align 4
  %117 = alloca i32, align 4
  store i32 4, i32* %117, align 4
  %118 = getelementptr %array.0, %array.0* %"~1_slice", i32 0, i32 0
  %119 = load i32, i32* %117, align 4
  %120 = alloca float, i32 %119, align 4
  store float* %120, float** %118, align 8
  %"~2_bin_op_res" = alloca %array.0, align 8
  %121 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 1
  store i32 0, i32* %121, align 4
  %122 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %123 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %122, i32 0, i32 0
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 0
  %125 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %126 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 2
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 3
  store i32 1, i32* %124, align 4
  store i32 1, i32* %125, align 4
  store i32 10, i32* %126, align 4
  %128 = load i32, i32* %126, align 4
  %129 = load i32, i32* %125, align 4
  %130 = sub i32 %128, %129
  %131 = add i32 %130, 1
  store i32 %131, i32* %127, align 4
  %132 = alloca i32, align 4
  store i32 10, i32* %132, align 4
  %133 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 0
  %134 = load i32, i32* %132, align 4
  %135 = alloca float, i32 %134, align 4
  store float* %135, float** %133, align 8
  %"~2_slice" = alloca %array.0, align 8
  %136 = getelementptr %array.0, %array.0* %"~2_slice", i32 0, i32 1
  store i32 0, i32* %136, align 4
  %137 = getelementptr %array.0, %array.0* %"~2_slice", i32 0, i32 2
  %138 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %137, i32 0, i32 0
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 0
  %140 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 1
  %141 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 2
  %142 = getelementptr %dimension_descriptor, %dimension_descriptor* %138, i32 0, i32 3
  store i32 1, i32* %139, align 4
  store i32 1, i32* %140, align 4
  store i32 5, i32* %141, align 4
  %143 = load i32, i32* %141, align 4
  %144 = load i32, i32* %140, align 4
  %145 = sub i32 %143, %144
  %146 = add i32 %145, 1
  store i32 %146, i32* %142, align 4
  %147 = alloca i32, align 4
  store i32 5, i32* %147, align 4
  %148 = getelementptr %array.0, %array.0* %"~2_slice", i32 0, i32 0
  %149 = load i32, i32* %147, align 4
  %150 = alloca float, i32 %149, align 4
  store float* %150, float** %148, align 8
  %"~3_unary_op_res" = alloca %array.0, align 8
  %151 = getelementptr %array.0, %array.0* %"~3_unary_op_res", i32 0, i32 1
  store i32 0, i32* %151, align 4
  %152 = getelementptr %array.0, %array.0* %"~3_unary_op_res", i32 0, i32 2
  %153 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %152, i32 0, i32 0
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %153, i32 0, i32 0
  %155 = getelementptr %dimension_descriptor, %dimension_descriptor* %153, i32 0, i32 1
  %156 = getelementptr %dimension_descriptor, %dimension_descriptor* %153, i32 0, i32 2
  %157 = getelementptr %dimension_descriptor, %dimension_descriptor* %153, i32 0, i32 3
  store i32 1, i32* %154, align 4
  store i32 1, i32* %155, align 4
  store i32 10, i32* %156, align 4
  %158 = load i32, i32* %156, align 4
  %159 = load i32, i32* %155, align 4
  %160 = sub i32 %158, %159
  %161 = add i32 %160, 1
  store i32 %161, i32* %157, align 4
  %162 = alloca i32, align 4
  store i32 10, i32* %162, align 4
  %163 = getelementptr %array.0, %array.0* %"~3_unary_op_res", i32 0, i32 0
  %164 = load i32, i32* %162, align 4
  %165 = alloca float, i32 %164, align 4
  store float* %165, float** %163, align 8
  %"~4_bin_op_res" = alloca %array.0, align 8
  %166 = getelementptr %array.0, %array.0* %"~4_bin_op_res", i32 0, i32 1
  store i32 0, i32* %166, align 4
  %167 = getelementptr %array.0, %array.0* %"~4_bin_op_res", i32 0, i32 2
  %168 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %167, i32 0, i32 0
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 0
  %170 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 1
  %171 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 2
  %172 = getelementptr %dimension_descriptor, %dimension_descriptor* %168, i32 0, i32 3
  store i32 1, i32* %169, align 4
  store i32 1, i32* %170, align 4
  store i32 10, i32* %171, align 4
  %173 = load i32, i32* %171, align 4
  %174 = load i32, i32* %170, align 4
  %175 = sub i32 %173, %174
  %176 = add i32 %175, 1
  store i32 %176, i32* %172, align 4
  %177 = alloca i32, align 4
  store i32 10, i32* %177, align 4
  %178 = getelementptr %array.0, %array.0* %"~4_bin_op_res", i32 0, i32 0
  %179 = load i32, i32* %177, align 4
  %180 = alloca float, i32 %179, align 4
  store float* %180, float** %178, align 8
  %181 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 1
  store i32 0, i32* %181, align 4
  %182 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 3
  store i1 true, i1* %182, align 1
  %183 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %184 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %183, i32 0, i32 0
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 0
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %187 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 2
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 3
  store i32 1, i32* %185, align 4
  store i32 1, i32* %186, align 4
  store i32 10, i32* %187, align 4
  %189 = load i32, i32* %187, align 4
  %190 = load i32, i32* %186, align 4
  %191 = sub i32 %189, %190
  %192 = add i32 %191, 1
  %193 = mul i32 1, %192
  store i32 %192, i32* %188, align 4
  %194 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %195 = alloca i32, align 4
  %196 = mul i32 %193, 4
  store i32 %196, i32* %195, align 4
  %197 = load i32, i32* %195, align 4
  %198 = call i8* (i32, ...) @_lfortran_malloc(i32 %197)
  %199 = bitcast i8* %198 to float*
  store float* %199, float** %194, align 8
  %200 = alloca %dimension_descriptor*, align 8
  %201 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %202 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %201, i32 0, i32 0
  store %dimension_descriptor* %202, %dimension_descriptor** %200, align 8
  %203 = alloca i32, align 4
  store i32 1, i32* %203, align 4
  %204 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %200, i32* %203)
  %205 = sub i32 %204, 1
  store i32 %205, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %206 = load i32, i32* %"1_k", align 4
  %207 = add i32 %206, 1
  %208 = alloca %dimension_descriptor*, align 8
  %209 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %210 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %209, i32 0, i32 0
  store %dimension_descriptor* %210, %dimension_descriptor** %208, align 8
  %211 = alloca i32, align 4
  store i32 1, i32* %211, align 4
  %212 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %208, i32* %211)
  %213 = icmp sle i32 %207, %212
  br i1 %213, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %214 = load i32, i32* %"1_k", align 4
  %215 = add i32 %214, 1
  store i32 %215, i32* %"1_k", align 4
  %216 = load i32, i32* %"1_k", align 4
  %217 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %218 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %217, i32 0, i32 0
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = sub i32 %216, %220
  %222 = mul i32 1, %221
  %223 = add i32 0, %222
  %224 = getelementptr %dimension_descriptor, %dimension_descriptor* %218, i32 0, i32 3
  %225 = load i32, i32* %224, align 4
  %226 = mul i32 1, %225
  %227 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %228 = load float*, float** %227, align 8
  %229 = getelementptr inbounds float, float* %228, i32 %223
  store float 0x3FDAE147A0000000, float* %229, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %230 = alloca %dimension_descriptor*, align 8
  %231 = getelementptr %array.0, %array.0* %y, i32 0, i32 2
  %232 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %231, i32 0, i32 0
  store %dimension_descriptor* %232, %dimension_descriptor** %230, align 8
  %233 = alloca i32, align 4
  store i32 1, i32* %233, align 4
  %234 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %230, i32* %233)
  %235 = sub i32 %234, 1
  store i32 %235, i32* %"1_k", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %236 = load i32, i32* %"1_k", align 4
  %237 = add i32 %236, 1
  %238 = alloca %dimension_descriptor*, align 8
  %239 = getelementptr %array.0, %array.0* %y, i32 0, i32 2
  %240 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %239, i32 0, i32 0
  store %dimension_descriptor* %240, %dimension_descriptor** %238, align 8
  %241 = alloca i32, align 4
  store i32 1, i32* %241, align 4
  %242 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %238, i32* %241)
  %243 = icmp sle i32 %237, %242
  br i1 %243, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %244 = load i32, i32* %"1_k", align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %"1_k", align 4
  %246 = load i32, i32* %"1_k", align 4
  %247 = getelementptr %array.0, %array.0* %y, i32 0, i32 2
  %248 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %247, i32 0, i32 0
  %249 = getelementptr %dimension_descriptor, %dimension_descriptor* %248, i32 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = sub i32 %246, %250
  %252 = mul i32 1, %251
  %253 = add i32 0, %252
  %254 = getelementptr %dimension_descriptor, %dimension_descriptor* %248, i32 0, i32 3
  %255 = load i32, i32* %254, align 4
  %256 = mul i32 1, %255
  %257 = getelementptr %array.0, %array.0* %y, i32 0, i32 0
  %258 = load float*, float** %257, align 8
  %259 = getelementptr inbounds float, float* %258, i32 %253
  store float 0x3FD6666660000000, float* %259, align 4
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  %260 = alloca %dimension_descriptor*, align 8
  %261 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %262 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %261, i32 0, i32 0
  store %dimension_descriptor* %262, %dimension_descriptor** %260, align 8
  %263 = alloca i32, align 4
  store i32 1, i32* %263, align 4
  %264 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %260, i32* %263)
  %265 = sub i32 %264, 1
  store i32 %265, i32* %"1_k", align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %loop.end3
  %266 = load i32, i32* %"1_k", align 4
  %267 = add i32 %266, 1
  %268 = alloca %dimension_descriptor*, align 8
  %269 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %270 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %269, i32 0, i32 0
  store %dimension_descriptor* %270, %dimension_descriptor** %268, align 8
  %271 = alloca i32, align 4
  store i32 1, i32* %271, align 4
  %272 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %268, i32* %271)
  %273 = icmp sle i32 %267, %272
  br i1 %273, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %274 = load i32, i32* %"1_k", align 4
  %275 = add i32 %274, 1
  store i32 %275, i32* %"1_k", align 4
  %276 = load i32, i32* %"1_k", align 4
  %277 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %278 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %277, i32 0, i32 0
  %279 = getelementptr %dimension_descriptor, %dimension_descriptor* %278, i32 0, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = sub i32 %276, %280
  %282 = mul i32 1, %281
  %283 = add i32 0, %282
  %284 = getelementptr %dimension_descriptor, %dimension_descriptor* %278, i32 0, i32 3
  %285 = load i32, i32* %284, align 4
  %286 = mul i32 1, %285
  %287 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %288 = load float*, float** %287, align 8
  %289 = getelementptr inbounds float, float* %288, i32 %283
  store float 0x4022333340000000, float* %289, align 4
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  %290 = alloca %dimension_descriptor*, align 8
  %291 = getelementptr %array.0, %array.0* %theta, i32 0, i32 2
  %292 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %291, i32 0, i32 0
  store %dimension_descriptor* %292, %dimension_descriptor** %290, align 8
  %293 = alloca i32, align 4
  store i32 1, i32* %293, align 4
  %294 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %290, i32* %293)
  %295 = sub i32 %294, 1
  store i32 %295, i32* %"1_k", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %loop.end6
  %296 = load i32, i32* %"1_k", align 4
  %297 = add i32 %296, 1
  %298 = alloca %dimension_descriptor*, align 8
  %299 = getelementptr %array.0, %array.0* %theta, i32 0, i32 2
  %300 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %299, i32 0, i32 0
  store %dimension_descriptor* %300, %dimension_descriptor** %298, align 8
  %301 = alloca i32, align 4
  store i32 1, i32* %301, align 4
  %302 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %298, i32* %301)
  %303 = icmp sle i32 %297, %302
  br i1 %303, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %304 = load i32, i32* %"1_k", align 4
  %305 = add i32 %304, 1
  store i32 %305, i32* %"1_k", align 4
  %306 = load i32, i32* %"1_k", align 4
  %307 = getelementptr %array.0, %array.0* %theta, i32 0, i32 2
  %308 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %307, i32 0, i32 0
  %309 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 1
  %310 = load i32, i32* %309, align 4
  %311 = sub i32 %306, %310
  %312 = mul i32 1, %311
  %313 = add i32 0, %312
  %314 = getelementptr %dimension_descriptor, %dimension_descriptor* %308, i32 0, i32 3
  %315 = load i32, i32* %314, align 4
  %316 = mul i32 1, %315
  %317 = getelementptr %array.0, %array.0* %theta, i32 0, i32 0
  %318 = load float*, float** %317, align 8
  %319 = getelementptr inbounds float, float* %318, i32 %313
  store float 1.500000e+00, float* %319, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %320 = alloca %dimension_descriptor*, align 8
  %321 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %322 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %321, i32 0, i32 0
  store %dimension_descriptor* %322, %dimension_descriptor** %320, align 8
  %323 = alloca i32, align 4
  store i32 1, i32* %323, align 4
  %324 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %320, i32* %323)
  %325 = sub i32 %324, 1
  store i32 %325, i32* %"1_k", align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.body11, %loop.end9
  %326 = load i32, i32* %"1_k", align 4
  %327 = add i32 %326, 1
  %328 = alloca %dimension_descriptor*, align 8
  %329 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %330 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %329, i32 0, i32 0
  store %dimension_descriptor* %330, %dimension_descriptor** %328, align 8
  %331 = alloca i32, align 4
  store i32 1, i32* %331, align 4
  %332 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %328, i32* %331)
  %333 = icmp sle i32 %327, %332
  br i1 %333, label %loop.body11, label %loop.end12

loop.body11:                                      ; preds = %loop.head10
  %334 = load i32, i32* %"1_k", align 4
  %335 = add i32 %334, 1
  store i32 %335, i32* %"1_k", align 4
  %336 = load i32, i32* %"1_k", align 4
  %337 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %338 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %337, i32 0, i32 0
  %339 = getelementptr %dimension_descriptor, %dimension_descriptor* %338, i32 0, i32 1
  %340 = load i32, i32* %339, align 4
  %341 = sub i32 %336, %340
  %342 = mul i32 1, %341
  %343 = add i32 0, %342
  %344 = getelementptr %dimension_descriptor, %dimension_descriptor* %338, i32 0, i32 3
  %345 = load i32, i32* %344, align 4
  %346 = mul i32 1, %345
  %347 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %348 = load float*, float** %347, align 8
  %349 = getelementptr inbounds float, float* %348, i32 %343
  store float 0x3FD99999A0000000, float* %349, align 4
  br label %loop.head10

loop.end12:                                       ; preds = %loop.head10
  store i32 1, i32* %"1_v", align 4
  %350 = alloca %dimension_descriptor*, align 8
  %351 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %352 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %351, i32 0, i32 0
  store %dimension_descriptor* %352, %dimension_descriptor** %350, align 8
  %353 = alloca i32, align 4
  store i32 1, i32* %353, align 4
  %354 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %350, i32* %353)
  %355 = sub i32 %354, 1
  store i32 %355, i32* %"1_t", align 4
  br label %loop.head13

loop.head13:                                      ; preds = %loop.body14, %loop.end12
  %356 = load i32, i32* %"1_t", align 4
  %357 = add i32 %356, 1
  %358 = alloca %dimension_descriptor*, align 8
  %359 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %360 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %359, i32 0, i32 0
  store %dimension_descriptor* %360, %dimension_descriptor** %358, align 8
  %361 = alloca i32, align 4
  store i32 1, i32* %361, align 4
  %362 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %358, i32* %361)
  %363 = icmp sle i32 %357, %362
  br i1 %363, label %loop.body14, label %loop.end15

loop.body14:                                      ; preds = %loop.head13
  %364 = load i32, i32* %"1_t", align 4
  %365 = add i32 %364, 1
  store i32 %365, i32* %"1_t", align 4
  %366 = load i32, i32* %"1_t", align 4
  %367 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %368 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %367, i32 0, i32 0
  %369 = getelementptr %dimension_descriptor, %dimension_descriptor* %368, i32 0, i32 1
  %370 = load i32, i32* %369, align 4
  %371 = sub i32 %366, %370
  %372 = mul i32 1, %371
  %373 = add i32 0, %372
  %374 = getelementptr %dimension_descriptor, %dimension_descriptor* %368, i32 0, i32 3
  %375 = load i32, i32* %374, align 4
  %376 = mul i32 1, %375
  %377 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 0
  %378 = load float*, float** %377, align 8
  %379 = getelementptr inbounds float, float* %378, i32 %373
  %380 = load i32, i32* %"1_v", align 4
  %381 = getelementptr %array.0, %array.0* %x, i32 0, i32 2
  %382 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %381, i32 0, i32 0
  %383 = getelementptr %dimension_descriptor, %dimension_descriptor* %382, i32 0, i32 1
  %384 = load i32, i32* %383, align 4
  %385 = sub i32 %380, %384
  %386 = mul i32 1, %385
  %387 = add i32 0, %386
  %388 = getelementptr %dimension_descriptor, %dimension_descriptor* %382, i32 0, i32 3
  %389 = load i32, i32* %388, align 4
  %390 = mul i32 1, %389
  %391 = getelementptr %array.0, %array.0* %x, i32 0, i32 0
  %392 = load float*, float** %391, align 8
  %393 = getelementptr inbounds float, float* %392, i32 %387
  %394 = load float, float* %393, align 4
  %395 = fmul float %394, 2.000000e+00
  store float %395, float* %379, align 4
  %396 = load i32, i32* %"1_v", align 4
  %397 = add i32 %396, 1
  store i32 %397, i32* %"1_v", align 4
  br label %loop.head13

loop.end15:                                       ; preds = %loop.head13
  store i32 1, i32* %"1_v", align 4
  %398 = alloca %dimension_descriptor*, align 8
  %399 = getelementptr %array.0, %array.0* %"~1_bin_op_res", i32 0, i32 2
  %400 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %399, i32 0, i32 0
  store %dimension_descriptor* %400, %dimension_descriptor** %398, align 8
  %401 = alloca i32, align 4
  store i32 1, i32* %401, align 4
  %402 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %398, i32* %401)
  %403 = sub i32 %402, 1
  store i32 %403, i32* %"1_t", align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.body17, %loop.end15
  %404 = load i32, i32* %"1_t", align 4
  %405 = add i32 %404, 1
  %406 = alloca %dimension_descriptor*, align 8
  %407 = getelementptr %array.0, %array.0* %"~1_bin_op_res", i32 0, i32 2
  %408 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %407, i32 0, i32 0
  store %dimension_descriptor* %408, %dimension_descriptor** %406, align 8
  %409 = alloca i32, align 4
  store i32 1, i32* %409, align 4
  %410 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %406, i32* %409)
  %411 = icmp sle i32 %405, %410
  br i1 %411, label %loop.body17, label %loop.end18

loop.body17:                                      ; preds = %loop.head16
  %412 = load i32, i32* %"1_t", align 4
  %413 = add i32 %412, 1
  store i32 %413, i32* %"1_t", align 4
  %414 = load i32, i32* %"1_t", align 4
  %415 = getelementptr %array.0, %array.0* %"~1_bin_op_res", i32 0, i32 2
  %416 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %415, i32 0, i32 0
  %417 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = sub i32 %414, %418
  %420 = mul i32 1, %419
  %421 = add i32 0, %420
  %422 = getelementptr %dimension_descriptor, %dimension_descriptor* %416, i32 0, i32 3
  %423 = load i32, i32* %422, align 4
  %424 = mul i32 1, %423
  %425 = getelementptr %array.0, %array.0* %"~1_bin_op_res", i32 0, i32 0
  %426 = load float*, float** %425, align 8
  %427 = getelementptr inbounds float, float* %426, i32 %421
  %428 = load i32, i32* %"1_v", align 4
  %429 = getelementptr %array.0, %array.0* %y, i32 0, i32 2
  %430 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %429, i32 0, i32 0
  %431 = getelementptr %dimension_descriptor, %dimension_descriptor* %430, i32 0, i32 1
  %432 = load i32, i32* %431, align 4
  %433 = sub i32 %428, %432
  %434 = mul i32 1, %433
  %435 = add i32 0, %434
  %436 = getelementptr %dimension_descriptor, %dimension_descriptor* %430, i32 0, i32 3
  %437 = load i32, i32* %436, align 4
  %438 = mul i32 1, %437
  %439 = getelementptr %array.0, %array.0* %y, i32 0, i32 0
  %440 = load float*, float** %439, align 8
  %441 = getelementptr inbounds float, float* %440, i32 %435
  %442 = load float, float* %441, align 4
  %443 = fmul float %442, 2.000000e+00
  store float %443, float* %427, align 4
  %444 = load i32, i32* %"1_v", align 4
  %445 = add i32 %444, 1
  store i32 %445, i32* %"1_v", align 4
  br label %loop.head16

loop.end18:                                       ; preds = %loop.head16
  store i32 1, i32* %"1_v", align 4
  %446 = alloca %dimension_descriptor*, align 8
  %447 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %448 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %447, i32 0, i32 0
  store %dimension_descriptor* %448, %dimension_descriptor** %446, align 8
  %449 = alloca i32, align 4
  store i32 1, i32* %449, align 4
  %450 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %446, i32* %449)
  %451 = sub i32 %450, 1
  store i32 %451, i32* %"1_t", align 4
  br label %loop.head19

loop.head19:                                      ; preds = %loop.body20, %loop.end18
  %452 = load i32, i32* %"1_t", align 4
  %453 = add i32 %452, 1
  %454 = alloca %dimension_descriptor*, align 8
  %455 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %456 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %455, i32 0, i32 0
  store %dimension_descriptor* %456, %dimension_descriptor** %454, align 8
  %457 = alloca i32, align 4
  store i32 1, i32* %457, align 4
  %458 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %454, i32* %457)
  %459 = icmp sle i32 %453, %458
  br i1 %459, label %loop.body20, label %loop.end21

loop.body20:                                      ; preds = %loop.head19
  %460 = load i32, i32* %"1_t", align 4
  %461 = add i32 %460, 1
  store i32 %461, i32* %"1_t", align 4
  %462 = load i32, i32* %"1_t", align 4
  %463 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %464 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %463, i32 0, i32 0
  %465 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 1
  %466 = load i32, i32* %465, align 4
  %467 = sub i32 %462, %466
  %468 = mul i32 1, %467
  %469 = add i32 0, %468
  %470 = getelementptr %dimension_descriptor, %dimension_descriptor* %464, i32 0, i32 3
  %471 = load i32, i32* %470, align 4
  %472 = mul i32 1, %471
  %473 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 0
  %474 = load float*, float** %473, align 8
  %475 = getelementptr inbounds float, float* %474, i32 %469
  %476 = load i32, i32* %"1_v", align 4
  %477 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 2
  %478 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %477, i32 0, i32 0
  %479 = getelementptr %dimension_descriptor, %dimension_descriptor* %478, i32 0, i32 1
  %480 = load i32, i32* %479, align 4
  %481 = sub i32 %476, %480
  %482 = mul i32 1, %481
  %483 = add i32 0, %482
  %484 = getelementptr %dimension_descriptor, %dimension_descriptor* %478, i32 0, i32 3
  %485 = load i32, i32* %484, align 4
  %486 = mul i32 1, %485
  %487 = getelementptr %array.0, %array.0* %"~0_bin_op_res", i32 0, i32 0
  %488 = load float*, float** %487, align 8
  %489 = getelementptr inbounds float, float* %488, i32 %483
  %490 = load float, float* %489, align 4
  %491 = load i32, i32* %"1_v", align 4
  %492 = getelementptr %array.0, %array.0* %"~1_bin_op_res", i32 0, i32 2
  %493 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %492, i32 0, i32 0
  %494 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 1
  %495 = load i32, i32* %494, align 4
  %496 = sub i32 %491, %495
  %497 = mul i32 1, %496
  %498 = add i32 0, %497
  %499 = getelementptr %dimension_descriptor, %dimension_descriptor* %493, i32 0, i32 3
  %500 = load i32, i32* %499, align 4
  %501 = mul i32 1, %500
  %502 = getelementptr %array.0, %array.0* %"~1_bin_op_res", i32 0, i32 0
  %503 = load float*, float** %502, align 8
  %504 = getelementptr inbounds float, float* %503, i32 %498
  %505 = load float, float* %504, align 4
  %506 = fadd float %490, %505
  store float %506, float* %475, align 4
  %507 = load i32, i32* %"1_v", align 4
  %508 = add i32 %507, 1
  store i32 %508, i32* %"1_v", align 4
  br label %loop.head19

loop.end21:                                       ; preds = %loop.head19
  %509 = alloca %dimension_descriptor*, align 8
  %510 = getelementptr %array.0, %array.0* %"~3_unary_op_res", i32 0, i32 2
  %511 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %510, i32 0, i32 0
  store %dimension_descriptor* %511, %dimension_descriptor** %509, align 8
  %512 = alloca i32, align 4
  store i32 1, i32* %512, align 4
  %513 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %509, i32* %512)
  %514 = sub i32 %513, 1
  store i32 %514, i32* %"1_k", align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %loop.end21
  %515 = load i32, i32* %"1_k", align 4
  %516 = add i32 %515, 1
  %517 = alloca %dimension_descriptor*, align 8
  %518 = getelementptr %array.0, %array.0* %"~3_unary_op_res", i32 0, i32 2
  %519 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %518, i32 0, i32 0
  store %dimension_descriptor* %519, %dimension_descriptor** %517, align 8
  %520 = alloca i32, align 4
  store i32 1, i32* %520, align 4
  %521 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %517, i32* %520)
  %522 = icmp sle i32 %516, %521
  br i1 %522, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %523 = load i32, i32* %"1_k", align 4
  %524 = add i32 %523, 1
  store i32 %524, i32* %"1_k", align 4
  %525 = load i32, i32* %"1_k", align 4
  %526 = getelementptr %array.0, %array.0* %"~3_unary_op_res", i32 0, i32 2
  %527 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %526, i32 0, i32 0
  %528 = getelementptr %dimension_descriptor, %dimension_descriptor* %527, i32 0, i32 1
  %529 = load i32, i32* %528, align 4
  %530 = sub i32 %525, %529
  %531 = mul i32 1, %530
  %532 = add i32 0, %531
  %533 = getelementptr %dimension_descriptor, %dimension_descriptor* %527, i32 0, i32 3
  %534 = load i32, i32* %533, align 4
  %535 = mul i32 1, %534
  %536 = getelementptr %array.0, %array.0* %"~3_unary_op_res", i32 0, i32 0
  %537 = load float*, float** %536, align 8
  %538 = getelementptr inbounds float, float* %537, i32 %532
  %539 = load i32, i32* %"1_k", align 4
  %540 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 2
  %541 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %540, i32 0, i32 0
  %542 = getelementptr %dimension_descriptor, %dimension_descriptor* %541, i32 0, i32 1
  %543 = load i32, i32* %542, align 4
  %544 = sub i32 %539, %543
  %545 = mul i32 1, %544
  %546 = add i32 0, %545
  %547 = getelementptr %dimension_descriptor, %dimension_descriptor* %541, i32 0, i32 3
  %548 = load i32, i32* %547, align 4
  %549 = mul i32 1, %548
  %550 = getelementptr %array.0, %array.0* %"~2_bin_op_res", i32 0, i32 0
  %551 = load float*, float** %550, align 8
  %552 = getelementptr inbounds float, float* %551, i32 %546
  %553 = load float, float* %552, align 4
  %554 = fsub float 0.000000e+00, %553
  store float %554, float* %538, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  store i32 1, i32* %"1_v", align 4
  %555 = alloca %dimension_descriptor*, align 8
  %556 = getelementptr %array.0, %array.0* %"~4_bin_op_res", i32 0, i32 2
  %557 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %556, i32 0, i32 0
  store %dimension_descriptor* %557, %dimension_descriptor** %555, align 8
  %558 = alloca i32, align 4
  store i32 1, i32* %558, align 4
  %559 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %555, i32* %558)
  %560 = sub i32 %559, 1
  store i32 %560, i32* %"1_t", align 4
  br label %loop.head25

loop.head25:                                      ; preds = %loop.body26, %loop.end24
  %561 = load i32, i32* %"1_t", align 4
  %562 = add i32 %561, 1
  %563 = alloca %dimension_descriptor*, align 8
  %564 = getelementptr %array.0, %array.0* %"~4_bin_op_res", i32 0, i32 2
  %565 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %564, i32 0, i32 0
  store %dimension_descriptor* %565, %dimension_descriptor** %563, align 8
  %566 = alloca i32, align 4
  store i32 1, i32* %566, align 4
  %567 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %563, i32* %566)
  %568 = icmp sle i32 %562, %567
  br i1 %568, label %loop.body26, label %loop.end27

loop.body26:                                      ; preds = %loop.head25
  %569 = load i32, i32* %"1_t", align 4
  %570 = add i32 %569, 1
  store i32 %570, i32* %"1_t", align 4
  %571 = load i32, i32* %"1_t", align 4
  %572 = getelementptr %array.0, %array.0* %"~4_bin_op_res", i32 0, i32 2
  %573 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %572, i32 0, i32 0
  %574 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 1
  %575 = load i32, i32* %574, align 4
  %576 = sub i32 %571, %575
  %577 = mul i32 1, %576
  %578 = add i32 0, %577
  %579 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 3
  %580 = load i32, i32* %579, align 4
  %581 = mul i32 1, %580
  %582 = getelementptr %array.0, %array.0* %"~4_bin_op_res", i32 0, i32 0
  %583 = load float*, float** %582, align 8
  %584 = getelementptr inbounds float, float* %583, i32 %578
  %585 = load i32, i32* %"1_v", align 4
  %586 = getelementptr %array.0, %array.0* %"~3_unary_op_res", i32 0, i32 2
  %587 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %586, i32 0, i32 0
  %588 = getelementptr %dimension_descriptor, %dimension_descriptor* %587, i32 0, i32 1
  %589 = load i32, i32* %588, align 4
  %590 = sub i32 %585, %589
  %591 = mul i32 1, %590
  %592 = add i32 0, %591
  %593 = getelementptr %dimension_descriptor, %dimension_descriptor* %587, i32 0, i32 3
  %594 = load i32, i32* %593, align 4
  %595 = mul i32 1, %594
  %596 = getelementptr %array.0, %array.0* %"~3_unary_op_res", i32 0, i32 0
  %597 = load float*, float** %596, align 8
  %598 = getelementptr inbounds float, float* %597, i32 %592
  %599 = load float, float* %598, align 4
  %600 = load i32, i32* %"1_v", align 4
  %601 = getelementptr %array.0, %array.0* %theta, i32 0, i32 2
  %602 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %601, i32 0, i32 0
  %603 = getelementptr %dimension_descriptor, %dimension_descriptor* %602, i32 0, i32 1
  %604 = load i32, i32* %603, align 4
  %605 = sub i32 %600, %604
  %606 = mul i32 1, %605
  %607 = add i32 0, %606
  %608 = getelementptr %dimension_descriptor, %dimension_descriptor* %602, i32 0, i32 3
  %609 = load i32, i32* %608, align 4
  %610 = mul i32 1, %609
  %611 = getelementptr %array.0, %array.0* %theta, i32 0, i32 0
  %612 = load float*, float** %611, align 8
  %613 = getelementptr inbounds float, float* %612, i32 %607
  %614 = load float, float* %613, align 4
  %615 = fmul float %599, %614
  store float %615, float* %584, align 4
  %616 = load i32, i32* %"1_v", align 4
  %617 = add i32 %616, 1
  store i32 %617, i32* %"1_v", align 4
  br label %loop.head25

loop.end27:                                       ; preds = %loop.head25
  store i32 1, i32* %"1_v", align 4
  %618 = alloca %dimension_descriptor*, align 8
  %619 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %620 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %619, i32 0, i32 0
  store %dimension_descriptor* %620, %dimension_descriptor** %618, align 8
  %621 = alloca i32, align 4
  store i32 1, i32* %621, align 4
  %622 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %618, i32* %621)
  %623 = sub i32 %622, 1
  store i32 %623, i32* %"1_t", align 4
  br label %loop.head28

loop.head28:                                      ; preds = %loop.body29, %loop.end27
  %624 = load i32, i32* %"1_t", align 4
  %625 = add i32 %624, 1
  %626 = alloca %dimension_descriptor*, align 8
  %627 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %628 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %627, i32 0, i32 0
  store %dimension_descriptor* %628, %dimension_descriptor** %626, align 8
  %629 = alloca i32, align 4
  store i32 1, i32* %629, align 4
  %630 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %626, i32* %629)
  %631 = icmp sle i32 %625, %630
  br i1 %631, label %loop.body29, label %loop.end30

loop.body29:                                      ; preds = %loop.head28
  %632 = load i32, i32* %"1_t", align 4
  %633 = add i32 %632, 1
  store i32 %633, i32* %"1_t", align 4
  %634 = load i32, i32* %"1_t", align 4
  %635 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %636 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %635, i32 0, i32 0
  %637 = getelementptr %dimension_descriptor, %dimension_descriptor* %636, i32 0, i32 1
  %638 = load i32, i32* %637, align 4
  %639 = sub i32 %634, %638
  %640 = mul i32 1, %639
  %641 = add i32 0, %640
  %642 = getelementptr %dimension_descriptor, %dimension_descriptor* %636, i32 0, i32 3
  %643 = load i32, i32* %642, align 4
  %644 = mul i32 1, %643
  %645 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %646 = load float*, float** %645, align 8
  %647 = getelementptr inbounds float, float* %646, i32 %641
  %648 = load i32, i32* %"1_v", align 4
  %649 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %650 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %649, i32 0, i32 0
  %651 = getelementptr %dimension_descriptor, %dimension_descriptor* %650, i32 0, i32 1
  %652 = load i32, i32* %651, align 4
  %653 = sub i32 %648, %652
  %654 = mul i32 1, %653
  %655 = add i32 0, %654
  %656 = getelementptr %dimension_descriptor, %dimension_descriptor* %650, i32 0, i32 3
  %657 = load i32, i32* %656, align 4
  %658 = mul i32 1, %657
  %659 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %660 = load float*, float** %659, align 8
  %661 = getelementptr inbounds float, float* %660, i32 %655
  %662 = load float, float* %661, align 4
  %663 = load i32, i32* %"1_v", align 4
  %664 = getelementptr %array.0, %array.0* %"~4_bin_op_res", i32 0, i32 2
  %665 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %664, i32 0, i32 0
  %666 = getelementptr %dimension_descriptor, %dimension_descriptor* %665, i32 0, i32 1
  %667 = load i32, i32* %666, align 4
  %668 = sub i32 %663, %667
  %669 = mul i32 1, %668
  %670 = add i32 0, %669
  %671 = getelementptr %dimension_descriptor, %dimension_descriptor* %665, i32 0, i32 3
  %672 = load i32, i32* %671, align 4
  %673 = mul i32 1, %672
  %674 = getelementptr %array.0, %array.0* %"~4_bin_op_res", i32 0, i32 0
  %675 = load float*, float** %674, align 8
  %676 = getelementptr inbounds float, float* %675, i32 %670
  %677 = load float, float* %676, align 4
  %678 = fadd float %662, %677
  store float %678, float* %647, align 4
  %679 = load i32, i32* %"1_v", align 4
  %680 = add i32 %679, 1
  store i32 %680, i32* %"1_v", align 4
  br label %loop.head28

loop.end30:                                       ; preds = %loop.head28
  %681 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %682 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %681, i32 0, i32 0
  %683 = getelementptr %dimension_descriptor, %dimension_descriptor* %682, i32 0, i32 1
  %684 = load i32, i32* %683, align 4
  %685 = sub i32 1, %684
  %686 = mul i32 1, %685
  %687 = add i32 0, %686
  %688 = getelementptr %dimension_descriptor, %dimension_descriptor* %682, i32 0, i32 3
  %689 = load i32, i32* %688, align 4
  %690 = mul i32 1, %689
  %691 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %692 = load float*, float** %691, align 8
  %693 = getelementptr inbounds float, float* %692, i32 %687
  %694 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %695 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %694, i32 0, i32 0
  %696 = getelementptr %dimension_descriptor, %dimension_descriptor* %695, i32 0, i32 1
  %697 = load i32, i32* %696, align 4
  %698 = sub i32 1, %697
  %699 = mul i32 1, %698
  %700 = add i32 0, %699
  %701 = getelementptr %dimension_descriptor, %dimension_descriptor* %695, i32 0, i32 3
  %702 = load i32, i32* %701, align 4
  %703 = mul i32 1, %702
  %704 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %705 = load float*, float** %704, align 8
  %706 = getelementptr inbounds float, float* %705, i32 %700
  %707 = load float, float* %706, align 4
  %708 = fmul float %707, 0x4012666660000000
  store float %708, float* %693, align 4
  store i32 1, i32* %"1_t", align 4
  store i32 1, i32* %"1_v", align 4
  br label %loop.head31

loop.head31:                                      ; preds = %loop.body32, %loop.end30
  %709 = load i32, i32* %"1_v", align 4
  %710 = add i32 %709, 1
  %711 = icmp sle i32 %710, 5
  br i1 %711, label %loop.body32, label %loop.end33

loop.body32:                                      ; preds = %loop.head31
  %712 = load i32, i32* %"1_v", align 4
  %713 = add i32 %712, 1
  store i32 %713, i32* %"1_v", align 4
  %714 = load i32, i32* %"1_t", align 4
  %715 = getelementptr %array.0, %array.0* %"~0_slice", i32 0, i32 2
  %716 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %715, i32 0, i32 0
  %717 = getelementptr %dimension_descriptor, %dimension_descriptor* %716, i32 0, i32 1
  %718 = load i32, i32* %717, align 4
  %719 = sub i32 %714, %718
  %720 = mul i32 1, %719
  %721 = add i32 0, %720
  %722 = getelementptr %dimension_descriptor, %dimension_descriptor* %716, i32 0, i32 3
  %723 = load i32, i32* %722, align 4
  %724 = mul i32 1, %723
  %725 = getelementptr %array.0, %array.0* %"~0_slice", i32 0, i32 0
  %726 = load float*, float** %725, align 8
  %727 = getelementptr inbounds float, float* %726, i32 %721
  %728 = load i32, i32* %"1_v", align 4
  %729 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %730 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %729, i32 0, i32 0
  %731 = getelementptr %dimension_descriptor, %dimension_descriptor* %730, i32 0, i32 1
  %732 = load i32, i32* %731, align 4
  %733 = sub i32 %728, %732
  %734 = mul i32 1, %733
  %735 = add i32 0, %734
  %736 = getelementptr %dimension_descriptor, %dimension_descriptor* %730, i32 0, i32 3
  %737 = load i32, i32* %736, align 4
  %738 = mul i32 1, %737
  %739 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %740 = load float*, float** %739, align 8
  %741 = getelementptr inbounds float, float* %740, i32 %735
  %742 = load float, float* %741, align 4
  store float %742, float* %727, align 4
  %743 = load i32, i32* %"1_t", align 4
  %744 = add i32 %743, 1
  store i32 %744, i32* %"1_t", align 4
  br label %loop.head31

loop.end33:                                       ; preds = %loop.head31
  store i32 1, i32* %"1_t", align 4
  store i32 1, i32* %"1_v", align 4
  br label %loop.head34

loop.head34:                                      ; preds = %loop.body35, %loop.end33
  %745 = load i32, i32* %"1_v", align 4
  %746 = add i32 %745, 1
  %747 = icmp sle i32 %746, 5
  br i1 %747, label %loop.body35, label %loop.end36

loop.body35:                                      ; preds = %loop.head34
  %748 = load i32, i32* %"1_v", align 4
  %749 = add i32 %748, 1
  store i32 %749, i32* %"1_v", align 4
  %750 = load i32, i32* %"1_t", align 4
  %751 = getelementptr %array.0, %array.0* %"~1_slice", i32 0, i32 2
  %752 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %751, i32 0, i32 0
  %753 = getelementptr %dimension_descriptor, %dimension_descriptor* %752, i32 0, i32 1
  %754 = load i32, i32* %753, align 4
  %755 = sub i32 %750, %754
  %756 = mul i32 1, %755
  %757 = add i32 0, %756
  %758 = getelementptr %dimension_descriptor, %dimension_descriptor* %752, i32 0, i32 3
  %759 = load i32, i32* %758, align 4
  %760 = mul i32 1, %759
  %761 = getelementptr %array.0, %array.0* %"~1_slice", i32 0, i32 0
  %762 = load float*, float** %761, align 8
  %763 = getelementptr inbounds float, float* %762, i32 %757
  %764 = load i32, i32* %"1_v", align 4
  %765 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %766 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %765, i32 0, i32 0
  %767 = getelementptr %dimension_descriptor, %dimension_descriptor* %766, i32 0, i32 1
  %768 = load i32, i32* %767, align 4
  %769 = sub i32 %764, %768
  %770 = mul i32 1, %769
  %771 = add i32 0, %770
  %772 = getelementptr %dimension_descriptor, %dimension_descriptor* %766, i32 0, i32 3
  %773 = load i32, i32* %772, align 4
  %774 = mul i32 1, %773
  %775 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %776 = load float*, float** %775, align 8
  %777 = getelementptr inbounds float, float* %776, i32 %771
  %778 = load float, float* %777, align 4
  store float %778, float* %763, align 4
  %779 = load i32, i32* %"1_t", align 4
  %780 = add i32 %779, 1
  store i32 %780, i32* %"1_t", align 4
  br label %loop.head34

loop.end36:                                       ; preds = %loop.head34
  store i32 1, i32* %"1_v", align 4
  store i32 1, i32* %"1_t", align 4
  br label %loop.head37

loop.head37:                                      ; preds = %loop.body38, %loop.end36
  %781 = load i32, i32* %"1_t", align 4
  %782 = add i32 %781, 1
  %783 = icmp sle i32 %782, 5
  br i1 %783, label %loop.body38, label %loop.end39

loop.body38:                                      ; preds = %loop.head37
  %784 = load i32, i32* %"1_t", align 4
  %785 = add i32 %784, 1
  store i32 %785, i32* %"1_t", align 4
  %786 = load i32, i32* %"1_t", align 4
  %787 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %788 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %787, i32 0, i32 0
  %789 = getelementptr %dimension_descriptor, %dimension_descriptor* %788, i32 0, i32 1
  %790 = load i32, i32* %789, align 4
  %791 = sub i32 %786, %790
  %792 = mul i32 1, %791
  %793 = add i32 0, %792
  %794 = getelementptr %dimension_descriptor, %dimension_descriptor* %788, i32 0, i32 3
  %795 = load i32, i32* %794, align 4
  %796 = mul i32 1, %795
  %797 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %798 = load float*, float** %797, align 8
  %799 = getelementptr inbounds float, float* %798, i32 %793
  %800 = load i32, i32* %"1_v", align 4
  %801 = getelementptr %array.0, %array.0* %"~0_slice", i32 0, i32 2
  %802 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %801, i32 0, i32 0
  %803 = getelementptr %dimension_descriptor, %dimension_descriptor* %802, i32 0, i32 1
  %804 = load i32, i32* %803, align 4
  %805 = sub i32 %800, %804
  %806 = mul i32 1, %805
  %807 = add i32 0, %806
  %808 = getelementptr %dimension_descriptor, %dimension_descriptor* %802, i32 0, i32 3
  %809 = load i32, i32* %808, align 4
  %810 = mul i32 1, %809
  %811 = getelementptr %array.0, %array.0* %"~0_slice", i32 0, i32 0
  %812 = load float*, float** %811, align 8
  %813 = getelementptr inbounds float, float* %812, i32 %807
  %814 = load float, float* %813, align 4
  %815 = load i32, i32* %"1_v", align 4
  %816 = getelementptr %array.0, %array.0* %"~1_slice", i32 0, i32 2
  %817 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %816, i32 0, i32 0
  %818 = getelementptr %dimension_descriptor, %dimension_descriptor* %817, i32 0, i32 1
  %819 = load i32, i32* %818, align 4
  %820 = sub i32 %815, %819
  %821 = mul i32 1, %820
  %822 = add i32 0, %821
  %823 = getelementptr %dimension_descriptor, %dimension_descriptor* %817, i32 0, i32 3
  %824 = load i32, i32* %823, align 4
  %825 = mul i32 1, %824
  %826 = getelementptr %array.0, %array.0* %"~1_slice", i32 0, i32 0
  %827 = load float*, float** %826, align 8
  %828 = getelementptr inbounds float, float* %827, i32 %822
  %829 = load float, float* %828, align 4
  %830 = fmul float %814, %829
  store float %830, float* %799, align 4
  %831 = load i32, i32* %"1_v", align 4
  %832 = add i32 %831, 1
  store i32 %832, i32* %"1_v", align 4
  br label %loop.head37

loop.end39:                                       ; preds = %loop.head37
  store i32 1, i32* %"1_t", align 4
  store i32 5, i32* %"1_v", align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.body41, %loop.end39
  %833 = load i32, i32* %"1_v", align 4
  %834 = add i32 %833, 1
  %835 = icmp sle i32 %834, 10
  br i1 %835, label %loop.body41, label %loop.end42

loop.body41:                                      ; preds = %loop.head40
  %836 = load i32, i32* %"1_v", align 4
  %837 = add i32 %836, 1
  store i32 %837, i32* %"1_v", align 4
  %838 = load i32, i32* %"1_t", align 4
  %839 = getelementptr %array.0, %array.0* %"~2_slice", i32 0, i32 2
  %840 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %839, i32 0, i32 0
  %841 = getelementptr %dimension_descriptor, %dimension_descriptor* %840, i32 0, i32 1
  %842 = load i32, i32* %841, align 4
  %843 = sub i32 %838, %842
  %844 = mul i32 1, %843
  %845 = add i32 0, %844
  %846 = getelementptr %dimension_descriptor, %dimension_descriptor* %840, i32 0, i32 3
  %847 = load i32, i32* %846, align 4
  %848 = mul i32 1, %847
  %849 = getelementptr %array.0, %array.0* %"~2_slice", i32 0, i32 0
  %850 = load float*, float** %849, align 8
  %851 = getelementptr inbounds float, float* %850, i32 %845
  %852 = load i32, i32* %"1_v", align 4
  %853 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %854 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %853, i32 0, i32 0
  %855 = getelementptr %dimension_descriptor, %dimension_descriptor* %854, i32 0, i32 1
  %856 = load i32, i32* %855, align 4
  %857 = sub i32 %852, %856
  %858 = mul i32 1, %857
  %859 = add i32 0, %858
  %860 = getelementptr %dimension_descriptor, %dimension_descriptor* %854, i32 0, i32 3
  %861 = load i32, i32* %860, align 4
  %862 = mul i32 1, %861
  %863 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %864 = load float*, float** %863, align 8
  %865 = getelementptr inbounds float, float* %864, i32 %859
  %866 = load float, float* %865, align 4
  store float %866, float* %851, align 4
  %867 = load i32, i32* %"1_t", align 4
  %868 = add i32 %867, 1
  store i32 %868, i32* %"1_t", align 4
  br label %loop.head40

loop.end42:                                       ; preds = %loop.head40
  store i32 1, i32* %"1_v", align 4
  store i32 5, i32* %"1_t", align 4
  br label %loop.head43

loop.head43:                                      ; preds = %loop.body44, %loop.end42
  %869 = load i32, i32* %"1_t", align 4
  %870 = add i32 %869, 1
  %871 = icmp sle i32 %870, 10
  br i1 %871, label %loop.body44, label %loop.end45

loop.body44:                                      ; preds = %loop.head43
  %872 = load i32, i32* %"1_t", align 4
  %873 = add i32 %872, 1
  store i32 %873, i32* %"1_t", align 4
  %874 = load i32, i32* %"1_t", align 4
  %875 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %876 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %875, i32 0, i32 0
  %877 = getelementptr %dimension_descriptor, %dimension_descriptor* %876, i32 0, i32 1
  %878 = load i32, i32* %877, align 4
  %879 = sub i32 %874, %878
  %880 = mul i32 1, %879
  %881 = add i32 0, %880
  %882 = getelementptr %dimension_descriptor, %dimension_descriptor* %876, i32 0, i32 3
  %883 = load i32, i32* %882, align 4
  %884 = mul i32 1, %883
  %885 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %886 = load float*, float** %885, align 8
  %887 = getelementptr inbounds float, float* %886, i32 %881
  %888 = load i32, i32* %"1_v", align 4
  %889 = getelementptr %array.0, %array.0* %"~2_slice", i32 0, i32 2
  %890 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %889, i32 0, i32 0
  %891 = getelementptr %dimension_descriptor, %dimension_descriptor* %890, i32 0, i32 1
  %892 = load i32, i32* %891, align 4
  %893 = sub i32 %888, %892
  %894 = mul i32 1, %893
  %895 = add i32 0, %894
  %896 = getelementptr %dimension_descriptor, %dimension_descriptor* %890, i32 0, i32 3
  %897 = load i32, i32* %896, align 4
  %898 = mul i32 1, %897
  %899 = getelementptr %array.0, %array.0* %"~2_slice", i32 0, i32 0
  %900 = load float*, float** %899, align 8
  %901 = getelementptr inbounds float, float* %900, i32 %895
  %902 = load float, float* %901, align 4
  %903 = fmul float %902, 0x4004CCCCC0000000
  store float %903, float* %887, align 4
  %904 = load i32, i32* %"1_v", align 4
  %905 = add i32 %904, 1
  store i32 %905, i32* %"1_v", align 4
  br label %loop.head43

loop.end45:                                       ; preds = %loop.head43
  %906 = alloca %dimension_descriptor*, align 8
  %907 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %908 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %907, i32 0, i32 0
  store %dimension_descriptor* %908, %dimension_descriptor** %906, align 8
  %909 = alloca i32, align 4
  store i32 1, i32* %909, align 4
  %910 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %906, i32* %909)
  %911 = sub i32 %910, 1
  store i32 %911, i32* %"1_k", align 4
  br label %loop.head46

loop.head46:                                      ; preds = %loop.body47, %loop.end45
  %912 = load i32, i32* %"1_k", align 4
  %913 = add i32 %912, 1
  %914 = alloca %dimension_descriptor*, align 8
  %915 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %916 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %915, i32 0, i32 0
  store %dimension_descriptor* %916, %dimension_descriptor** %914, align 8
  %917 = alloca i32, align 4
  store i32 1, i32* %917, align 4
  %918 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %914, i32* %917)
  %919 = icmp sle i32 %913, %918
  br i1 %919, label %loop.body47, label %loop.end48

loop.body47:                                      ; preds = %loop.head46
  %920 = load i32, i32* %"1_k", align 4
  %921 = add i32 %920, 1
  store i32 %921, i32* %"1_k", align 4
  %922 = load i32, i32* %"1_k", align 4
  %923 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 2
  %924 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %923, i32 0, i32 0
  %925 = getelementptr %dimension_descriptor, %dimension_descriptor* %924, i32 0, i32 1
  %926 = load i32, i32* %925, align 4
  %927 = sub i32 %922, %926
  %928 = mul i32 1, %927
  %929 = add i32 0, %928
  %930 = getelementptr %dimension_descriptor, %dimension_descriptor* %924, i32 0, i32 3
  %931 = load i32, i32* %930, align 4
  %932 = mul i32 1, %931
  %933 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %934 = load float*, float** %933, align 8
  %935 = getelementptr inbounds float, float* %934, i32 %929
  %936 = load float, float* %935, align 4
  %937 = fpext float %936 to double
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), double %937)
  br label %loop.head46

loop.end48:                                       ; preds = %loop.head46
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  %938 = load %array.0, %array.0* %myreal, align 8
  %939 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 3
  %940 = load i1, i1* %939, align 1
  br i1 %940, label %then, label %else

then:                                             ; preds = %loop.end48
  %941 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 0
  %942 = load float*, float** %941, align 8
  %943 = alloca i8*, align 8
  %944 = bitcast float* %942 to i8*
  store i8* %944, i8** %943, align 8
  %945 = load i8*, i8** %943, align 8
  call void (i8*, ...) @_lfortran_free(i8* %945)
  %946 = getelementptr %array.0, %array.0* %myreal, i32 0, i32 3
  store i1 false, i1* %946, align 1
  br label %ifcont

else:                                             ; preds = %loop.end48
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  ret i32 0
}

declare i8* @_lfortran_malloc(i32, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lfortran_free(i8*, ...)
