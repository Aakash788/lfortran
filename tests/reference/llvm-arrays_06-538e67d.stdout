; ModuleID = 'LFortran'
source_filename = "LFortran"

%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { i32*, i32, %dimension_descriptor*, i1 }
%array = type { i32*, i32, %dimension_descriptor*, i1 }

@0 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@6 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@8 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

define i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %lbound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %lbound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %lbound, align 4
  ret i32 %6
}

declare void @__module_lfortran_intrinsic_builtin_move_alloc(i32*, i32*)

define i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %x, i32* %dim) {
.entry:
  %ubound = alloca i32, align 4
  %0 = load %dimension_descriptor*, %dimension_descriptor** %x, align 8
  %1 = load i32, i32* %dim, align 4
  %2 = sub i32 %1, 1
  %3 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %0, i32 %2
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %3, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %ubound, align 4
  br label %return

return:                                           ; preds = %.entry
  %6 = load i32, i32* %ubound, align 4
  ret i32 %6
}

define i32 @main() {
.entry:
  %"1_k" = alloca i32, align 4
  %"2_k" = alloca i32, align 4
  %"3_k" = alloca i32, align 4
  %a = alloca %array.0, align 8
  %0 = getelementptr %array.0, %array.0* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 3, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %5 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %6 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 0
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 1
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 2
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 3
  store i32 1, i32* %7, align 4
  store i32 1, i32* %8, align 4
  store i32 3, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %8, align 4
  %13 = sub i32 %11, %12
  %14 = add i32 %13, 1
  store i32 %14, i32* %10, align 4
  %15 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 1
  %16 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 0
  %17 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 1
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 2
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %15, i32 0, i32 3
  store i32 1, i32* %16, align 4
  store i32 1, i32* %17, align 4
  store i32 3, i32* %18, align 4
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %17, align 4
  %22 = sub i32 %20, %21
  %23 = add i32 %22, 1
  store i32 %23, i32* %19, align 4
  %24 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 2
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 1
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 2
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %24, i32 0, i32 3
  store i32 1, i32* %25, align 4
  store i32 1, i32* %26, align 4
  store i32 3, i32* %27, align 4
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %26, align 4
  %31 = sub i32 %29, %30
  %32 = add i32 %31, 1
  store i32 %32, i32* %28, align 4
  %33 = alloca i32, align 4
  store i32 27, i32* %33, align 4
  %34 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %35 = load i32, i32* %33, align 4
  %36 = alloca i32, i32 %35, align 4
  store i32* %36, i32** %34, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca %array, align 8
  %37 = getelementptr %array, %array* %x, i32 0, i32 1
  store i32 0, i32* %37, align 4
  %38 = getelementptr %array, %array* %x, i32 0, i32 2
  %39 = alloca i32, align 4
  store i32 1, i32* %39, align 4
  %40 = load i32, i32* %39, align 4
  %41 = alloca %dimension_descriptor, i32 %40, align 8
  store %dimension_descriptor* %41, %dimension_descriptor** %38, align 8
  %42 = load %dimension_descriptor*, %dimension_descriptor** %38, align 8
  %43 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %42, i32 0
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 1
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 2
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %43, i32 0, i32 3
  store i32 1, i32* %44, align 4
  store i32 1, i32* %45, align 4
  store i32 6, i32* %46, align 4
  %48 = load i32, i32* %46, align 4
  %49 = load i32, i32* %45, align 4
  %50 = sub i32 %48, %49
  %51 = add i32 %50, 1
  store i32 %51, i32* %47, align 4
  %52 = alloca i32, align 4
  store i32 6, i32* %52, align 4
  %53 = getelementptr %array, %array* %x, i32 0, i32 0
  %54 = load i32, i32* %52, align 4
  %55 = alloca i32, i32 %54, align 4
  store i32* %55, i32** %53, align 8
  store i32 4, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %56 = load i32, i32* %i, align 4
  %57 = add i32 %56, 1
  %58 = icmp sle i32 %57, 6
  br i1 %58, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %59 = load i32, i32* %i, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %i, align 4
  %61 = load i32, i32* %i, align 4
  %62 = sub i32 %61, 1
  %63 = mul i32 %62, 1
  %64 = add i32 %63, 1
  %65 = add i32 %64, 0
  %66 = getelementptr %array, %array* %x, i32 0, i32 2
  %67 = load %dimension_descriptor*, %dimension_descriptor** %66, align 8
  %68 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %67, i32 0
  %69 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = sub i32 %65, %70
  %72 = mul i32 1, %71
  %73 = add i32 0, %72
  %74 = getelementptr %dimension_descriptor, %dimension_descriptor* %68, i32 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = mul i32 1, %75
  %77 = getelementptr %array, %array* %x, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = getelementptr inbounds i32, i32* %78, i32 %73
  %80 = load i32, i32* %i, align 4
  %81 = mul i32 %80, 2
  store i32 %81, i32* %79, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %82 = alloca %dimension_descriptor*, align 8
  %83 = getelementptr %array, %array* %x, i32 0, i32 2
  %84 = load %dimension_descriptor*, %dimension_descriptor** %83, align 8
  store %dimension_descriptor* %84, %dimension_descriptor** %82, align 8
  %85 = alloca i32, align 4
  store i32 1, i32* %85, align 4
  %86 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %82, i32* %85)
  %87 = sub i32 %86, 1
  store i32 %87, i32* %"1_k", align 4
  br label %loop.head1

loop.head1:                                       ; preds = %loop.body2, %loop.end
  %88 = load i32, i32* %"1_k", align 4
  %89 = add i32 %88, 1
  %90 = alloca %dimension_descriptor*, align 8
  %91 = getelementptr %array, %array* %x, i32 0, i32 2
  %92 = load %dimension_descriptor*, %dimension_descriptor** %91, align 8
  store %dimension_descriptor* %92, %dimension_descriptor** %90, align 8
  %93 = alloca i32, align 4
  store i32 1, i32* %93, align 4
  %94 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %90, i32* %93)
  %95 = icmp sle i32 %89, %94
  br i1 %95, label %loop.body2, label %loop.end3

loop.body2:                                       ; preds = %loop.head1
  %96 = load i32, i32* %"1_k", align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %"1_k", align 4
  %98 = load i32, i32* %"1_k", align 4
  %99 = getelementptr %array, %array* %x, i32 0, i32 2
  %100 = load %dimension_descriptor*, %dimension_descriptor** %99, align 8
  %101 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %100, i32 0
  %102 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = sub i32 %98, %103
  %105 = mul i32 1, %104
  %106 = add i32 0, %105
  %107 = getelementptr %dimension_descriptor, %dimension_descriptor* %101, i32 0, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = mul i32 1, %108
  %110 = getelementptr %array, %array* %x, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = getelementptr inbounds i32, i32* %111, i32 %106
  %113 = load i32, i32* %112, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 %113)
  br label %loop.head1

loop.end3:                                        ; preds = %loop.head1
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %loop.head4

loop.head4:                                       ; preds = %loop.body5, %loop.end3
  %114 = load i32, i32* %i, align 4
  %115 = add i32 %114, 1
  %116 = icmp sle i32 %115, 3
  br i1 %116, label %loop.body5, label %loop.end6

loop.body5:                                       ; preds = %loop.head4
  %117 = load i32, i32* %i, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %i, align 4
  %119 = load i32, i32* %i, align 4
  %120 = sub i32 %119, 1
  %121 = mul i32 %120, 2
  %122 = add i32 %121, 1
  %123 = add i32 %122, 0
  %124 = getelementptr %array, %array* %x, i32 0, i32 2
  %125 = load %dimension_descriptor*, %dimension_descriptor** %124, align 8
  %126 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %125, i32 0
  %127 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = sub i32 %123, %128
  %130 = mul i32 1, %129
  %131 = add i32 0, %130
  %132 = getelementptr %dimension_descriptor, %dimension_descriptor* %126, i32 0, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = mul i32 1, %133
  %135 = getelementptr %array, %array* %x, i32 0, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = getelementptr inbounds i32, i32* %136, i32 %131
  %138 = load i32, i32* %i, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %137, align 4
  %140 = load i32, i32* %i, align 4
  %141 = sub i32 %140, 1
  %142 = mul i32 %141, 2
  %143 = add i32 %142, 1
  %144 = add i32 %143, 1
  %145 = getelementptr %array, %array* %x, i32 0, i32 2
  %146 = load %dimension_descriptor*, %dimension_descriptor** %145, align 8
  %147 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %146, i32 0
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 %144, %149
  %151 = mul i32 1, %150
  %152 = add i32 0, %151
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = mul i32 1, %154
  %156 = getelementptr %array, %array* %x, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = getelementptr inbounds i32, i32* %157, i32 %152
  %159 = load i32, i32* %i, align 4
  %160 = mul i32 %159, 2
  store i32 %160, i32* %158, align 4
  br label %loop.head4

loop.end6:                                        ; preds = %loop.head4
  %161 = alloca %dimension_descriptor*, align 8
  %162 = getelementptr %array, %array* %x, i32 0, i32 2
  %163 = load %dimension_descriptor*, %dimension_descriptor** %162, align 8
  store %dimension_descriptor* %163, %dimension_descriptor** %161, align 8
  %164 = alloca i32, align 4
  store i32 1, i32* %164, align 4
  %165 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %161, i32* %164)
  %166 = sub i32 %165, 1
  store i32 %166, i32* %"1_k", align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %loop.end6
  %167 = load i32, i32* %"1_k", align 4
  %168 = add i32 %167, 1
  %169 = alloca %dimension_descriptor*, align 8
  %170 = getelementptr %array, %array* %x, i32 0, i32 2
  %171 = load %dimension_descriptor*, %dimension_descriptor** %170, align 8
  store %dimension_descriptor* %171, %dimension_descriptor** %169, align 8
  %172 = alloca i32, align 4
  store i32 1, i32* %172, align 4
  %173 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %169, i32* %172)
  %174 = icmp sle i32 %168, %173
  br i1 %174, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %175 = load i32, i32* %"1_k", align 4
  %176 = add i32 %175, 1
  store i32 %176, i32* %"1_k", align 4
  %177 = load i32, i32* %"1_k", align 4
  %178 = getelementptr %array, %array* %x, i32 0, i32 2
  %179 = load %dimension_descriptor*, %dimension_descriptor** %178, align 8
  %180 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %179, i32 0
  %181 = getelementptr %dimension_descriptor, %dimension_descriptor* %180, i32 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = sub i32 %177, %182
  %184 = mul i32 1, %183
  %185 = add i32 0, %184
  %186 = getelementptr %dimension_descriptor, %dimension_descriptor* %180, i32 0, i32 3
  %187 = load i32, i32* %186, align 4
  %188 = mul i32 1, %187
  %189 = getelementptr %array, %array* %x, i32 0, i32 0
  %190 = load i32*, i32** %189, align 8
  %191 = getelementptr inbounds i32, i32* %190, i32 %185
  %192 = load i32, i32* %191, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i32 0, i32 0), i32 %192)
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %loop.head10

loop.head10:                                      ; preds = %loop.body11, %loop.end9
  %193 = load i32, i32* %i, align 4
  %194 = add i32 %193, 1
  %195 = icmp sle i32 %194, 2
  br i1 %195, label %loop.body11, label %loop.end12

loop.body11:                                      ; preds = %loop.head10
  %196 = load i32, i32* %i, align 4
  %197 = add i32 %196, 1
  store i32 %197, i32* %i, align 4
  %198 = load i32, i32* %i, align 4
  %199 = sub i32 %198, 1
  %200 = mul i32 %199, 3
  %201 = add i32 %200, 1
  %202 = add i32 %201, 0
  %203 = getelementptr %array, %array* %x, i32 0, i32 2
  %204 = load %dimension_descriptor*, %dimension_descriptor** %203, align 8
  %205 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %204, i32 0
  %206 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 %202, %207
  %209 = mul i32 1, %208
  %210 = add i32 0, %209
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %205, i32 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = mul i32 1, %212
  %214 = getelementptr %array, %array* %x, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = getelementptr inbounds i32, i32* %215, i32 %210
  %217 = load i32, i32* %i, align 4
  %218 = add i32 %217, 1
  store i32 %218, i32* %216, align 4
  %219 = load i32, i32* %i, align 4
  %220 = sub i32 %219, 1
  %221 = mul i32 %220, 3
  %222 = add i32 %221, 1
  %223 = add i32 %222, 1
  %224 = getelementptr %array, %array* %x, i32 0, i32 2
  %225 = load %dimension_descriptor*, %dimension_descriptor** %224, align 8
  %226 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %225, i32 0
  %227 = getelementptr %dimension_descriptor, %dimension_descriptor* %226, i32 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = sub i32 %223, %228
  %230 = mul i32 1, %229
  %231 = add i32 0, %230
  %232 = getelementptr %dimension_descriptor, %dimension_descriptor* %226, i32 0, i32 3
  %233 = load i32, i32* %232, align 4
  %234 = mul i32 1, %233
  %235 = getelementptr %array, %array* %x, i32 0, i32 0
  %236 = load i32*, i32** %235, align 8
  %237 = getelementptr inbounds i32, i32* %236, i32 %231
  %238 = load i32, i32* %i, align 4
  %239 = sitofp i32 %238 to float
  %240 = call float @llvm.pow.f32(float %239, float 2.000000e+00)
  %241 = fptosi float %240 to i32
  store i32 %241, i32* %237, align 4
  %242 = load i32, i32* %i, align 4
  %243 = sub i32 %242, 1
  %244 = mul i32 %243, 3
  %245 = add i32 %244, 1
  %246 = add i32 %245, 2
  %247 = getelementptr %array, %array* %x, i32 0, i32 2
  %248 = load %dimension_descriptor*, %dimension_descriptor** %247, align 8
  %249 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %248, i32 0
  %250 = getelementptr %dimension_descriptor, %dimension_descriptor* %249, i32 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = sub i32 %246, %251
  %253 = mul i32 1, %252
  %254 = add i32 0, %253
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %249, i32 0, i32 3
  %256 = load i32, i32* %255, align 4
  %257 = mul i32 1, %256
  %258 = getelementptr %array, %array* %x, i32 0, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = getelementptr inbounds i32, i32* %259, i32 %254
  %261 = load i32, i32* %i, align 4
  %262 = mul i32 %261, 2
  store i32 %262, i32* %260, align 4
  br label %loop.head10

loop.end12:                                       ; preds = %loop.head10
  %263 = alloca %dimension_descriptor*, align 8
  %264 = getelementptr %array, %array* %x, i32 0, i32 2
  %265 = load %dimension_descriptor*, %dimension_descriptor** %264, align 8
  store %dimension_descriptor* %265, %dimension_descriptor** %263, align 8
  %266 = alloca i32, align 4
  store i32 1, i32* %266, align 4
  %267 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %263, i32* %266)
  %268 = sub i32 %267, 1
  store i32 %268, i32* %"1_k", align 4
  br label %loop.head13

loop.head13:                                      ; preds = %loop.body14, %loop.end12
  %269 = load i32, i32* %"1_k", align 4
  %270 = add i32 %269, 1
  %271 = alloca %dimension_descriptor*, align 8
  %272 = getelementptr %array, %array* %x, i32 0, i32 2
  %273 = load %dimension_descriptor*, %dimension_descriptor** %272, align 8
  store %dimension_descriptor* %273, %dimension_descriptor** %271, align 8
  %274 = alloca i32, align 4
  store i32 1, i32* %274, align 4
  %275 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %271, i32* %274)
  %276 = icmp sle i32 %270, %275
  br i1 %276, label %loop.body14, label %loop.end15

loop.body14:                                      ; preds = %loop.head13
  %277 = load i32, i32* %"1_k", align 4
  %278 = add i32 %277, 1
  store i32 %278, i32* %"1_k", align 4
  %279 = load i32, i32* %"1_k", align 4
  %280 = getelementptr %array, %array* %x, i32 0, i32 2
  %281 = load %dimension_descriptor*, %dimension_descriptor** %280, align 8
  %282 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %281, i32 0
  %283 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = sub i32 %279, %284
  %286 = mul i32 1, %285
  %287 = add i32 0, %286
  %288 = getelementptr %dimension_descriptor, %dimension_descriptor* %282, i32 0, i32 3
  %289 = load i32, i32* %288, align 4
  %290 = mul i32 1, %289
  %291 = getelementptr %array, %array* %x, i32 0, i32 0
  %292 = load i32*, i32** %291, align 8
  %293 = getelementptr inbounds i32, i32* %292, i32 %287
  %294 = load i32, i32* %293, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @4, i32 0, i32 0), i32 %294)
  br label %loop.head13

loop.end15:                                       ; preds = %loop.head13
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  store i32 1, i32* %i, align 4
  br label %loop.head16

loop.head16:                                      ; preds = %loop.body17, %loop.end15
  %295 = load i32, i32* %i, align 4
  %296 = add i32 %295, 1
  %297 = icmp sle i32 %296, 2
  br i1 %297, label %loop.body17, label %loop.end18

loop.body17:                                      ; preds = %loop.head16
  %298 = load i32, i32* %i, align 4
  %299 = add i32 %298, 1
  store i32 %299, i32* %i, align 4
  %300 = load i32, i32* %i, align 4
  %301 = sub i32 %300, 2
  %302 = mul i32 %301, 6
  %303 = add i32 %302, 1
  %304 = add i32 %303, 0
  %305 = getelementptr %array, %array* %x, i32 0, i32 2
  %306 = load %dimension_descriptor*, %dimension_descriptor** %305, align 8
  %307 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %306, i32 0
  %308 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 1
  %309 = load i32, i32* %308, align 4
  %310 = sub i32 %304, %309
  %311 = mul i32 1, %310
  %312 = add i32 0, %311
  %313 = getelementptr %dimension_descriptor, %dimension_descriptor* %307, i32 0, i32 3
  %314 = load i32, i32* %313, align 4
  %315 = mul i32 1, %314
  %316 = getelementptr %array, %array* %x, i32 0, i32 0
  %317 = load i32*, i32** %316, align 8
  %318 = getelementptr inbounds i32, i32* %317, i32 %312
  %319 = load i32, i32* %i, align 4
  %320 = mul i32 2, %319
  store i32 %320, i32* %318, align 4
  %321 = load i32, i32* %i, align 4
  %322 = sub i32 %321, 2
  %323 = mul i32 %322, 6
  %324 = add i32 %323, 1
  %325 = add i32 %324, 1
  %326 = getelementptr %array, %array* %x, i32 0, i32 2
  %327 = load %dimension_descriptor*, %dimension_descriptor** %326, align 8
  %328 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %327, i32 0
  %329 = getelementptr %dimension_descriptor, %dimension_descriptor* %328, i32 0, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = sub i32 %325, %330
  %332 = mul i32 1, %331
  %333 = add i32 0, %332
  %334 = getelementptr %dimension_descriptor, %dimension_descriptor* %328, i32 0, i32 3
  %335 = load i32, i32* %334, align 4
  %336 = mul i32 1, %335
  %337 = getelementptr %array, %array* %x, i32 0, i32 0
  %338 = load i32*, i32** %337, align 8
  %339 = getelementptr inbounds i32, i32* %338, i32 %333
  %340 = load i32, i32* %i, align 4
  %341 = mul i32 3, %340
  store i32 %341, i32* %339, align 4
  %342 = load i32, i32* %i, align 4
  %343 = sub i32 %342, 2
  %344 = mul i32 %343, 6
  %345 = add i32 %344, 1
  %346 = add i32 %345, 2
  %347 = getelementptr %array, %array* %x, i32 0, i32 2
  %348 = load %dimension_descriptor*, %dimension_descriptor** %347, align 8
  %349 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %348, i32 0
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = sub i32 %346, %351
  %353 = mul i32 1, %352
  %354 = add i32 0, %353
  %355 = getelementptr %dimension_descriptor, %dimension_descriptor* %349, i32 0, i32 3
  %356 = load i32, i32* %355, align 4
  %357 = mul i32 1, %356
  %358 = getelementptr %array, %array* %x, i32 0, i32 0
  %359 = load i32*, i32** %358, align 8
  %360 = getelementptr inbounds i32, i32* %359, i32 %354
  %361 = load i32, i32* %i, align 4
  %362 = mul i32 4, %361
  store i32 %362, i32* %360, align 4
  %363 = load i32, i32* %i, align 4
  %364 = sub i32 %363, 2
  %365 = mul i32 %364, 6
  %366 = add i32 %365, 1
  %367 = add i32 %366, 3
  %368 = getelementptr %array, %array* %x, i32 0, i32 2
  %369 = load %dimension_descriptor*, %dimension_descriptor** %368, align 8
  %370 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %369, i32 0
  %371 = getelementptr %dimension_descriptor, %dimension_descriptor* %370, i32 0, i32 1
  %372 = load i32, i32* %371, align 4
  %373 = sub i32 %367, %372
  %374 = mul i32 1, %373
  %375 = add i32 0, %374
  %376 = getelementptr %dimension_descriptor, %dimension_descriptor* %370, i32 0, i32 3
  %377 = load i32, i32* %376, align 4
  %378 = mul i32 1, %377
  %379 = getelementptr %array, %array* %x, i32 0, i32 0
  %380 = load i32*, i32** %379, align 8
  %381 = getelementptr inbounds i32, i32* %380, i32 %375
  %382 = load i32, i32* %i, align 4
  %383 = add i32 %382, 1
  store i32 %383, i32* %381, align 4
  %384 = load i32, i32* %i, align 4
  %385 = sub i32 %384, 2
  %386 = mul i32 %385, 6
  %387 = add i32 %386, 1
  %388 = add i32 %387, 4
  %389 = getelementptr %array, %array* %x, i32 0, i32 2
  %390 = load %dimension_descriptor*, %dimension_descriptor** %389, align 8
  %391 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %390, i32 0
  %392 = getelementptr %dimension_descriptor, %dimension_descriptor* %391, i32 0, i32 1
  %393 = load i32, i32* %392, align 4
  %394 = sub i32 %388, %393
  %395 = mul i32 1, %394
  %396 = add i32 0, %395
  %397 = getelementptr %dimension_descriptor, %dimension_descriptor* %391, i32 0, i32 3
  %398 = load i32, i32* %397, align 4
  %399 = mul i32 1, %398
  %400 = getelementptr %array, %array* %x, i32 0, i32 0
  %401 = load i32*, i32** %400, align 8
  %402 = getelementptr inbounds i32, i32* %401, i32 %396
  %403 = load i32, i32* %i, align 4
  %404 = sitofp i32 %403 to float
  %405 = call float @llvm.pow.f32(float %404, float 2.000000e+00)
  %406 = fptosi float %405 to i32
  store i32 %406, i32* %402, align 4
  %407 = load i32, i32* %i, align 4
  %408 = sub i32 %407, 2
  %409 = mul i32 %408, 6
  %410 = add i32 %409, 1
  %411 = add i32 %410, 5
  %412 = getelementptr %array, %array* %x, i32 0, i32 2
  %413 = load %dimension_descriptor*, %dimension_descriptor** %412, align 8
  %414 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %413, i32 0
  %415 = getelementptr %dimension_descriptor, %dimension_descriptor* %414, i32 0, i32 1
  %416 = load i32, i32* %415, align 4
  %417 = sub i32 %411, %416
  %418 = mul i32 1, %417
  %419 = add i32 0, %418
  %420 = getelementptr %dimension_descriptor, %dimension_descriptor* %414, i32 0, i32 3
  %421 = load i32, i32* %420, align 4
  %422 = mul i32 1, %421
  %423 = getelementptr %array, %array* %x, i32 0, i32 0
  %424 = load i32*, i32** %423, align 8
  %425 = getelementptr inbounds i32, i32* %424, i32 %419
  %426 = load i32, i32* %i, align 4
  %427 = mul i32 %426, 2
  store i32 %427, i32* %425, align 4
  br label %loop.head16

loop.end18:                                       ; preds = %loop.head16
  %428 = alloca %dimension_descriptor*, align 8
  %429 = getelementptr %array, %array* %x, i32 0, i32 2
  %430 = load %dimension_descriptor*, %dimension_descriptor** %429, align 8
  store %dimension_descriptor* %430, %dimension_descriptor** %428, align 8
  %431 = alloca i32, align 4
  store i32 1, i32* %431, align 4
  %432 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %428, i32* %431)
  %433 = sub i32 %432, 1
  store i32 %433, i32* %"1_k", align 4
  br label %loop.head19

loop.head19:                                      ; preds = %loop.body20, %loop.end18
  %434 = load i32, i32* %"1_k", align 4
  %435 = add i32 %434, 1
  %436 = alloca %dimension_descriptor*, align 8
  %437 = getelementptr %array, %array* %x, i32 0, i32 2
  %438 = load %dimension_descriptor*, %dimension_descriptor** %437, align 8
  store %dimension_descriptor* %438, %dimension_descriptor** %436, align 8
  %439 = alloca i32, align 4
  store i32 1, i32* %439, align 4
  %440 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %436, i32* %439)
  %441 = icmp sle i32 %435, %440
  br i1 %441, label %loop.body20, label %loop.end21

loop.body20:                                      ; preds = %loop.head19
  %442 = load i32, i32* %"1_k", align 4
  %443 = add i32 %442, 1
  store i32 %443, i32* %"1_k", align 4
  %444 = load i32, i32* %"1_k", align 4
  %445 = getelementptr %array, %array* %x, i32 0, i32 2
  %446 = load %dimension_descriptor*, %dimension_descriptor** %445, align 8
  %447 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %446, i32 0
  %448 = getelementptr %dimension_descriptor, %dimension_descriptor* %447, i32 0, i32 1
  %449 = load i32, i32* %448, align 4
  %450 = sub i32 %444, %449
  %451 = mul i32 1, %450
  %452 = add i32 0, %451
  %453 = getelementptr %dimension_descriptor, %dimension_descriptor* %447, i32 0, i32 3
  %454 = load i32, i32* %453, align 4
  %455 = mul i32 1, %454
  %456 = getelementptr %array, %array* %x, i32 0, i32 0
  %457 = load i32*, i32** %456, align 8
  %458 = getelementptr inbounds i32, i32* %457, i32 %452
  %459 = load i32, i32* %458, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @6, i32 0, i32 0), i32 %459)
  br label %loop.head19

loop.end21:                                       ; preds = %loop.head19
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0))
  %460 = alloca %dimension_descriptor*, align 8
  %461 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %462 = load %dimension_descriptor*, %dimension_descriptor** %461, align 8
  store %dimension_descriptor* %462, %dimension_descriptor** %460, align 8
  %463 = alloca i32, align 4
  store i32 3, i32* %463, align 4
  %464 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %460, i32* %463)
  %465 = sub i32 %464, 1
  store i32 %465, i32* %"1_k", align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.end29, %loop.end21
  %466 = load i32, i32* %"1_k", align 4
  %467 = add i32 %466, 1
  %468 = alloca %dimension_descriptor*, align 8
  %469 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %470 = load %dimension_descriptor*, %dimension_descriptor** %469, align 8
  store %dimension_descriptor* %470, %dimension_descriptor** %468, align 8
  %471 = alloca i32, align 4
  store i32 3, i32* %471, align 4
  %472 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %468, i32* %471)
  %473 = icmp sle i32 %467, %472
  br i1 %473, label %loop.body23, label %loop.end30

loop.body23:                                      ; preds = %loop.head22
  %474 = load i32, i32* %"1_k", align 4
  %475 = add i32 %474, 1
  store i32 %475, i32* %"1_k", align 4
  %476 = alloca %dimension_descriptor*, align 8
  %477 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %478 = load %dimension_descriptor*, %dimension_descriptor** %477, align 8
  store %dimension_descriptor* %478, %dimension_descriptor** %476, align 8
  %479 = alloca i32, align 4
  store i32 3, i32* %479, align 4
  %480 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %476, i32* %479)
  %481 = sub i32 %480, 1
  store i32 %481, i32* %"2_k", align 4
  br label %loop.head24

loop.head24:                                      ; preds = %loop.end28, %loop.body23
  %482 = load i32, i32* %"2_k", align 4
  %483 = add i32 %482, 1
  %484 = alloca %dimension_descriptor*, align 8
  %485 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %486 = load %dimension_descriptor*, %dimension_descriptor** %485, align 8
  store %dimension_descriptor* %486, %dimension_descriptor** %484, align 8
  %487 = alloca i32, align 4
  store i32 3, i32* %487, align 4
  %488 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %484, i32* %487)
  %489 = icmp sle i32 %483, %488
  br i1 %489, label %loop.body25, label %loop.end29

loop.body25:                                      ; preds = %loop.head24
  %490 = load i32, i32* %"2_k", align 4
  %491 = add i32 %490, 1
  store i32 %491, i32* %"2_k", align 4
  %492 = alloca %dimension_descriptor*, align 8
  %493 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %494 = load %dimension_descriptor*, %dimension_descriptor** %493, align 8
  store %dimension_descriptor* %494, %dimension_descriptor** %492, align 8
  %495 = alloca i32, align 4
  store i32 3, i32* %495, align 4
  %496 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %492, i32* %495)
  %497 = sub i32 %496, 1
  store i32 %497, i32* %"3_k", align 4
  br label %loop.head26

loop.head26:                                      ; preds = %loop.body27, %loop.body25
  %498 = load i32, i32* %"3_k", align 4
  %499 = add i32 %498, 1
  %500 = alloca %dimension_descriptor*, align 8
  %501 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %502 = load %dimension_descriptor*, %dimension_descriptor** %501, align 8
  store %dimension_descriptor* %502, %dimension_descriptor** %500, align 8
  %503 = alloca i32, align 4
  store i32 3, i32* %503, align 4
  %504 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %500, i32* %503)
  %505 = icmp sle i32 %499, %504
  br i1 %505, label %loop.body27, label %loop.end28

loop.body27:                                      ; preds = %loop.head26
  %506 = load i32, i32* %"3_k", align 4
  %507 = add i32 %506, 1
  store i32 %507, i32* %"3_k", align 4
  %508 = load i32, i32* %"1_k", align 4
  %509 = load i32, i32* %"2_k", align 4
  %510 = load i32, i32* %"3_k", align 4
  %511 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %512 = load %dimension_descriptor*, %dimension_descriptor** %511, align 8
  %513 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %512, i32 0
  %514 = getelementptr %dimension_descriptor, %dimension_descriptor* %513, i32 0, i32 1
  %515 = load i32, i32* %514, align 4
  %516 = sub i32 %508, %515
  %517 = mul i32 1, %516
  %518 = add i32 0, %517
  %519 = getelementptr %dimension_descriptor, %dimension_descriptor* %513, i32 0, i32 3
  %520 = load i32, i32* %519, align 4
  %521 = mul i32 1, %520
  %522 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %512, i32 1
  %523 = getelementptr %dimension_descriptor, %dimension_descriptor* %522, i32 0, i32 1
  %524 = load i32, i32* %523, align 4
  %525 = sub i32 %509, %524
  %526 = mul i32 %521, %525
  %527 = add i32 %518, %526
  %528 = getelementptr %dimension_descriptor, %dimension_descriptor* %522, i32 0, i32 3
  %529 = load i32, i32* %528, align 4
  %530 = mul i32 %521, %529
  %531 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %512, i32 2
  %532 = getelementptr %dimension_descriptor, %dimension_descriptor* %531, i32 0, i32 1
  %533 = load i32, i32* %532, align 4
  %534 = sub i32 %510, %533
  %535 = mul i32 %530, %534
  %536 = add i32 %527, %535
  %537 = getelementptr %dimension_descriptor, %dimension_descriptor* %531, i32 0, i32 3
  %538 = load i32, i32* %537, align 4
  %539 = mul i32 %530, %538
  %540 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %541 = load i32*, i32** %540, align 8
  %542 = getelementptr inbounds i32, i32* %541, i32 %536
  store i32 7, i32* %542, align 4
  br label %loop.head26

loop.end28:                                       ; preds = %loop.head26
  br label %loop.head24

loop.end29:                                       ; preds = %loop.head24
  br label %loop.head22

loop.end30:                                       ; preds = %loop.head22
  %543 = alloca %dimension_descriptor*, align 8
  %544 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %545 = load %dimension_descriptor*, %dimension_descriptor** %544, align 8
  store %dimension_descriptor* %545, %dimension_descriptor** %543, align 8
  %546 = alloca i32, align 4
  store i32 1, i32* %546, align 4
  %547 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %543, i32* %546)
  %548 = sub i32 %547, 1
  store i32 %548, i32* %"1_k", align 4
  br label %loop.head31

loop.head31:                                      ; preds = %loop.end38, %loop.end30
  %549 = load i32, i32* %"1_k", align 4
  %550 = add i32 %549, 1
  %551 = alloca %dimension_descriptor*, align 8
  %552 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %553 = load %dimension_descriptor*, %dimension_descriptor** %552, align 8
  store %dimension_descriptor* %553, %dimension_descriptor** %551, align 8
  %554 = alloca i32, align 4
  store i32 1, i32* %554, align 4
  %555 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %551, i32* %554)
  %556 = icmp sle i32 %550, %555
  br i1 %556, label %loop.body32, label %loop.end39

loop.body32:                                      ; preds = %loop.head31
  %557 = load i32, i32* %"1_k", align 4
  %558 = add i32 %557, 1
  store i32 %558, i32* %"1_k", align 4
  %559 = alloca %dimension_descriptor*, align 8
  %560 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %561 = load %dimension_descriptor*, %dimension_descriptor** %560, align 8
  store %dimension_descriptor* %561, %dimension_descriptor** %559, align 8
  %562 = alloca i32, align 4
  store i32 2, i32* %562, align 4
  %563 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %559, i32* %562)
  %564 = sub i32 %563, 1
  store i32 %564, i32* %"2_k", align 4
  br label %loop.head33

loop.head33:                                      ; preds = %loop.end37, %loop.body32
  %565 = load i32, i32* %"2_k", align 4
  %566 = add i32 %565, 1
  %567 = alloca %dimension_descriptor*, align 8
  %568 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %569 = load %dimension_descriptor*, %dimension_descriptor** %568, align 8
  store %dimension_descriptor* %569, %dimension_descriptor** %567, align 8
  %570 = alloca i32, align 4
  store i32 2, i32* %570, align 4
  %571 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %567, i32* %570)
  %572 = icmp sle i32 %566, %571
  br i1 %572, label %loop.body34, label %loop.end38

loop.body34:                                      ; preds = %loop.head33
  %573 = load i32, i32* %"2_k", align 4
  %574 = add i32 %573, 1
  store i32 %574, i32* %"2_k", align 4
  %575 = alloca %dimension_descriptor*, align 8
  %576 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %577 = load %dimension_descriptor*, %dimension_descriptor** %576, align 8
  store %dimension_descriptor* %577, %dimension_descriptor** %575, align 8
  %578 = alloca i32, align 4
  store i32 3, i32* %578, align 4
  %579 = call i32 @__module_lfortran_intrinsic_builtin_lbound(%dimension_descriptor** %575, i32* %578)
  %580 = sub i32 %579, 1
  store i32 %580, i32* %"3_k", align 4
  br label %loop.head35

loop.head35:                                      ; preds = %loop.body36, %loop.body34
  %581 = load i32, i32* %"3_k", align 4
  %582 = add i32 %581, 1
  %583 = alloca %dimension_descriptor*, align 8
  %584 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %585 = load %dimension_descriptor*, %dimension_descriptor** %584, align 8
  store %dimension_descriptor* %585, %dimension_descriptor** %583, align 8
  %586 = alloca i32, align 4
  store i32 3, i32* %586, align 4
  %587 = call i32 @__module_lfortran_intrinsic_builtin_ubound(%dimension_descriptor** %583, i32* %586)
  %588 = icmp sle i32 %582, %587
  br i1 %588, label %loop.body36, label %loop.end37

loop.body36:                                      ; preds = %loop.head35
  %589 = load i32, i32* %"3_k", align 4
  %590 = add i32 %589, 1
  store i32 %590, i32* %"3_k", align 4
  %591 = load i32, i32* %"1_k", align 4
  %592 = load i32, i32* %"2_k", align 4
  %593 = load i32, i32* %"3_k", align 4
  %594 = getelementptr %array.0, %array.0* %a, i32 0, i32 2
  %595 = load %dimension_descriptor*, %dimension_descriptor** %594, align 8
  %596 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %595, i32 0
  %597 = getelementptr %dimension_descriptor, %dimension_descriptor* %596, i32 0, i32 1
  %598 = load i32, i32* %597, align 4
  %599 = sub i32 %591, %598
  %600 = mul i32 1, %599
  %601 = add i32 0, %600
  %602 = getelementptr %dimension_descriptor, %dimension_descriptor* %596, i32 0, i32 3
  %603 = load i32, i32* %602, align 4
  %604 = mul i32 1, %603
  %605 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %595, i32 1
  %606 = getelementptr %dimension_descriptor, %dimension_descriptor* %605, i32 0, i32 1
  %607 = load i32, i32* %606, align 4
  %608 = sub i32 %592, %607
  %609 = mul i32 %604, %608
  %610 = add i32 %601, %609
  %611 = getelementptr %dimension_descriptor, %dimension_descriptor* %605, i32 0, i32 3
  %612 = load i32, i32* %611, align 4
  %613 = mul i32 %604, %612
  %614 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %595, i32 2
  %615 = getelementptr %dimension_descriptor, %dimension_descriptor* %614, i32 0, i32 1
  %616 = load i32, i32* %615, align 4
  %617 = sub i32 %593, %616
  %618 = mul i32 %613, %617
  %619 = add i32 %610, %618
  %620 = getelementptr %dimension_descriptor, %dimension_descriptor* %614, i32 0, i32 3
  %621 = load i32, i32* %620, align 4
  %622 = mul i32 %613, %621
  %623 = getelementptr %array.0, %array.0* %a, i32 0, i32 0
  %624 = load i32*, i32** %623, align 8
  %625 = getelementptr inbounds i32, i32* %624, i32 %619
  %626 = load i32, i32* %625, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @8, i32 0, i32 0), i32 %626)
  br label %loop.head35

loop.end37:                                       ; preds = %loop.head35
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  br label %loop.head33

loop.end38:                                       ; preds = %loop.head33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  br label %loop.head31

loop.end39:                                       ; preds = %loop.head31
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.pow.f32(float, float) #0

attributes #0 = { nounwind readnone speculatable willreturn }
