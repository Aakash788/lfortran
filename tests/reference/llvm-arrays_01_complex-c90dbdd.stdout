; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { %complex_4*, i32, %dimension_descriptor*, i1 }
%complex_4 = type { float, float }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { %complex_4*, i32, %dimension_descriptor*, i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %5 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %6 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 0
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 1
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 2
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 3
  store i32 1, i32* %7, align 4
  store i32 1, i32* %8, align 4
  store i32 3, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %8, align 4
  %13 = sub i32 %11, %12
  %14 = add i32 %13, 1
  store i32 %14, i32* %10, align 4
  %15 = alloca i32, align 4
  store i32 3, i32* %15, align 4
  %16 = getelementptr %array, %array* %a, i32 0, i32 0
  %17 = load i32, i32* %15, align 4
  %18 = alloca %complex_4, i32 %17, align 8
  store %complex_4* %18, %complex_4** %16, align 8
  %b = alloca %array, align 8
  %19 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr %array, %array* %b, i32 0, i32 2
  %21 = alloca i32, align 4
  store i32 1, i32* %21, align 4
  %22 = load i32, i32* %21, align 4
  %23 = alloca %dimension_descriptor, i32 %22, align 8
  store %dimension_descriptor* %23, %dimension_descriptor** %20, align 8
  %24 = load %dimension_descriptor*, %dimension_descriptor** %20, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 3
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  store i32 4, i32* %28, align 4
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %27, align 4
  %32 = sub i32 %30, %31
  %33 = add i32 %32, 1
  store i32 %33, i32* %29, align 4
  %34 = alloca i32, align 4
  store i32 4, i32* %34, align 4
  %35 = getelementptr %array, %array* %b, i32 0, i32 0
  %36 = load i32, i32* %34, align 4
  %37 = alloca %complex_4, i32 %36, align 8
  store %complex_4* %37, %complex_4** %35, align 8
  %c = alloca %array.0, align 8
  %38 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %38, align 4
  %39 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %40 = alloca i32, align 4
  store i32 2, i32* %40, align 4
  %41 = load i32, i32* %40, align 4
  %42 = alloca %dimension_descriptor, i32 %41, align 8
  store %dimension_descriptor* %42, %dimension_descriptor** %39, align 8
  %43 = load %dimension_descriptor*, %dimension_descriptor** %39, align 8
  %44 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  store i32 1, i32* %45, align 4
  store i32 1, i32* %46, align 4
  store i32 2, i32* %47, align 4
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %46, align 4
  %51 = sub i32 %49, %50
  %52 = add i32 %51, 1
  store i32 %52, i32* %48, align 4
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 3
  store i32 1, i32* %54, align 4
  store i32 1, i32* %55, align 4
  store i32 2, i32* %56, align 4
  %58 = load i32, i32* %56, align 4
  %59 = load i32, i32* %55, align 4
  %60 = sub i32 %58, %59
  %61 = add i32 %60, 1
  store i32 %61, i32* %57, align 4
  %62 = alloca i32, align 4
  store i32 4, i32* %62, align 4
  %63 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %64 = load i32, i32* %62, align 4
  %65 = alloca %complex_4, i32 %64, align 8
  store %complex_4* %65, %complex_4** %63, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %66 = load i32, i32* %i, align 4
  %67 = add i32 %66, 1
  %68 = icmp sle i32 %67, 3
  br i1 %68, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %69 = load i32, i32* %i, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %i, align 4
  %71 = load i32, i32* %i, align 4
  %72 = getelementptr %array, %array* %a, i32 0, i32 2
  %73 = load %dimension_descriptor*, %dimension_descriptor** %72, align 8
  %74 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %73, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 %71, %76
  %78 = mul i32 1, %77
  %79 = add i32 0, %78
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 1, %81
  %83 = getelementptr %array, %array* %a, i32 0, i32 0
  %84 = load %complex_4*, %complex_4** %83, align 8
  %85 = getelementptr inbounds %complex_4, %complex_4* %84, i32 %79
  %86 = load i32, i32* %i, align 4
  %87 = add i32 %86, 10
  %88 = sitofp i32 %87 to float
  %89 = alloca %complex_4, align 8
  %90 = getelementptr %complex_4, %complex_4* %89, i32 0, i32 0
  %91 = getelementptr %complex_4, %complex_4* %89, i32 0, i32 1
  store float %88, float* %90, align 4
  store float 0.000000e+00, float* %91, align 4
  %92 = load %complex_4, %complex_4* %89, align 4
  store %complex_4 %92, %complex_4* %85, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %93 = getelementptr %array, %array* %a, i32 0, i32 2
  %94 = load %dimension_descriptor*, %dimension_descriptor** %93, align 8
  %95 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %94, i32 0
  %96 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = sub i32 1, %97
  %99 = mul i32 1, %98
  %100 = add i32 0, %99
  %101 = getelementptr %dimension_descriptor, %dimension_descriptor* %95, i32 0, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = mul i32 1, %102
  %104 = getelementptr %array, %array* %a, i32 0, i32 0
  %105 = load %complex_4*, %complex_4** %104, align 8
  %106 = getelementptr inbounds %complex_4, %complex_4* %105, i32 %100
  %107 = load %complex_4, %complex_4* %106, align 4
  %108 = alloca %complex_4, align 8
  %109 = getelementptr %complex_4, %complex_4* %108, i32 0, i32 0
  %110 = getelementptr %complex_4, %complex_4* %108, i32 0, i32 1
  store float 1.100000e+01, float* %109, align 4
  store float 0.000000e+00, float* %110, align 4
  %111 = load %complex_4, %complex_4* %108, align 4
  %112 = alloca %complex_4, align 8
  store %complex_4 %107, %complex_4* %112, align 4
  %113 = getelementptr %complex_4, %complex_4* %112, i32 0, i32 0
  %114 = load float, float* %113, align 4
  %115 = alloca %complex_4, align 8
  store %complex_4 %111, %complex_4* %115, align 4
  %116 = getelementptr %complex_4, %complex_4* %115, i32 0, i32 0
  %117 = load float, float* %116, align 4
  %118 = alloca %complex_4, align 8
  store %complex_4 %107, %complex_4* %118, align 4
  %119 = getelementptr %complex_4, %complex_4* %118, i32 0, i32 1
  %120 = load float, float* %119, align 4
  %121 = alloca %complex_4, align 8
  store %complex_4 %111, %complex_4* %121, align 4
  %122 = getelementptr %complex_4, %complex_4* %121, i32 0, i32 1
  %123 = load float, float* %122, align 4
  %124 = fcmp une float %114, %117
  %125 = fcmp une float %120, %123
  %126 = and i1 %124, %125
  br i1 %126, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %127 = getelementptr %array, %array* %a, i32 0, i32 2
  %128 = load %dimension_descriptor*, %dimension_descriptor** %127, align 8
  %129 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %128, i32 0
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %129, i32 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = sub i32 2, %131
  %133 = mul i32 1, %132
  %134 = add i32 0, %133
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %129, i32 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = mul i32 1, %136
  %138 = getelementptr %array, %array* %a, i32 0, i32 0
  %139 = load %complex_4*, %complex_4** %138, align 8
  %140 = getelementptr inbounds %complex_4, %complex_4* %139, i32 %134
  %141 = load %complex_4, %complex_4* %140, align 4
  %142 = alloca %complex_4, align 8
  %143 = getelementptr %complex_4, %complex_4* %142, i32 0, i32 0
  %144 = getelementptr %complex_4, %complex_4* %142, i32 0, i32 1
  store float 1.200000e+01, float* %143, align 4
  store float 0.000000e+00, float* %144, align 4
  %145 = load %complex_4, %complex_4* %142, align 4
  %146 = alloca %complex_4, align 8
  store %complex_4 %141, %complex_4* %146, align 4
  %147 = getelementptr %complex_4, %complex_4* %146, i32 0, i32 0
  %148 = load float, float* %147, align 4
  %149 = alloca %complex_4, align 8
  store %complex_4 %145, %complex_4* %149, align 4
  %150 = getelementptr %complex_4, %complex_4* %149, i32 0, i32 0
  %151 = load float, float* %150, align 4
  %152 = alloca %complex_4, align 8
  store %complex_4 %141, %complex_4* %152, align 4
  %153 = getelementptr %complex_4, %complex_4* %152, i32 0, i32 1
  %154 = load float, float* %153, align 4
  %155 = alloca %complex_4, align 8
  store %complex_4 %145, %complex_4* %155, align 4
  %156 = getelementptr %complex_4, %complex_4* %155, i32 0, i32 1
  %157 = load float, float* %156, align 4
  %158 = fcmp une float %148, %151
  %159 = fcmp une float %154, %157
  %160 = and i1 %158, %159
  br i1 %160, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %161 = getelementptr %array, %array* %a, i32 0, i32 2
  %162 = load %dimension_descriptor*, %dimension_descriptor** %161, align 8
  %163 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %162, i32 0
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = sub i32 3, %165
  %167 = mul i32 1, %166
  %168 = add i32 0, %167
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = mul i32 1, %170
  %172 = getelementptr %array, %array* %a, i32 0, i32 0
  %173 = load %complex_4*, %complex_4** %172, align 8
  %174 = getelementptr inbounds %complex_4, %complex_4* %173, i32 %168
  %175 = load %complex_4, %complex_4* %174, align 4
  %176 = alloca %complex_4, align 8
  %177 = getelementptr %complex_4, %complex_4* %176, i32 0, i32 0
  %178 = getelementptr %complex_4, %complex_4* %176, i32 0, i32 1
  store float 1.300000e+01, float* %177, align 4
  store float 0.000000e+00, float* %178, align 4
  %179 = load %complex_4, %complex_4* %176, align 4
  %180 = alloca %complex_4, align 8
  store %complex_4 %175, %complex_4* %180, align 4
  %181 = getelementptr %complex_4, %complex_4* %180, i32 0, i32 0
  %182 = load float, float* %181, align 4
  %183 = alloca %complex_4, align 8
  store %complex_4 %179, %complex_4* %183, align 4
  %184 = getelementptr %complex_4, %complex_4* %183, i32 0, i32 0
  %185 = load float, float* %184, align 4
  %186 = alloca %complex_4, align 8
  store %complex_4 %175, %complex_4* %186, align 4
  %187 = getelementptr %complex_4, %complex_4* %186, i32 0, i32 1
  %188 = load float, float* %187, align 4
  %189 = alloca %complex_4, align 8
  store %complex_4 %179, %complex_4* %189, align 4
  %190 = getelementptr %complex_4, %complex_4* %189, i32 0, i32 1
  %191 = load float, float* %190, align 4
  %192 = fcmp une float %182, %185
  %193 = fcmp une float %188, %191
  %194 = and i1 %192, %193
  br i1 %194, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %195 = load i32, i32* %i, align 4
  %196 = add i32 %195, 1
  %197 = icmp sle i32 %196, 14
  br i1 %197, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %198 = load i32, i32* %i, align 4
  %199 = add i32 %198, 1
  store i32 %199, i32* %i, align 4
  %200 = load i32, i32* %i, align 4
  %201 = sub i32 %200, 10
  %202 = getelementptr %array, %array* %b, i32 0, i32 2
  %203 = load %dimension_descriptor*, %dimension_descriptor** %202, align 8
  %204 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %203, i32 0
  %205 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = sub i32 %201, %206
  %208 = mul i32 1, %207
  %209 = add i32 0, %208
  %210 = getelementptr %dimension_descriptor, %dimension_descriptor* %204, i32 0, i32 3
  %211 = load i32, i32* %210, align 4
  %212 = mul i32 1, %211
  %213 = getelementptr %array, %array* %b, i32 0, i32 0
  %214 = load %complex_4*, %complex_4** %213, align 8
  %215 = getelementptr inbounds %complex_4, %complex_4* %214, i32 %209
  %216 = load i32, i32* %i, align 4
  %217 = sitofp i32 %216 to float
  %218 = alloca %complex_4, align 8
  %219 = getelementptr %complex_4, %complex_4* %218, i32 0, i32 0
  %220 = getelementptr %complex_4, %complex_4* %218, i32 0, i32 1
  store float %217, float* %219, align 4
  store float 0.000000e+00, float* %220, align 4
  %221 = load %complex_4, %complex_4* %218, align 4
  store %complex_4 %221, %complex_4* %215, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %222 = getelementptr %array, %array* %b, i32 0, i32 2
  %223 = load %dimension_descriptor*, %dimension_descriptor** %222, align 8
  %224 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %223, i32 0
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 1, %226
  %228 = mul i32 1, %227
  %229 = add i32 0, %228
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 3
  %231 = load i32, i32* %230, align 4
  %232 = mul i32 1, %231
  %233 = getelementptr %array, %array* %b, i32 0, i32 0
  %234 = load %complex_4*, %complex_4** %233, align 8
  %235 = getelementptr inbounds %complex_4, %complex_4* %234, i32 %229
  %236 = load %complex_4, %complex_4* %235, align 4
  %237 = alloca %complex_4, align 8
  %238 = getelementptr %complex_4, %complex_4* %237, i32 0, i32 0
  %239 = getelementptr %complex_4, %complex_4* %237, i32 0, i32 1
  store float 1.100000e+01, float* %238, align 4
  store float 0.000000e+00, float* %239, align 4
  %240 = load %complex_4, %complex_4* %237, align 4
  %241 = alloca %complex_4, align 8
  store %complex_4 %236, %complex_4* %241, align 4
  %242 = getelementptr %complex_4, %complex_4* %241, i32 0, i32 0
  %243 = load float, float* %242, align 4
  %244 = alloca %complex_4, align 8
  store %complex_4 %240, %complex_4* %244, align 4
  %245 = getelementptr %complex_4, %complex_4* %244, i32 0, i32 0
  %246 = load float, float* %245, align 4
  %247 = alloca %complex_4, align 8
  store %complex_4 %236, %complex_4* %247, align 4
  %248 = getelementptr %complex_4, %complex_4* %247, i32 0, i32 1
  %249 = load float, float* %248, align 4
  %250 = alloca %complex_4, align 8
  store %complex_4 %240, %complex_4* %250, align 4
  %251 = getelementptr %complex_4, %complex_4* %250, i32 0, i32 1
  %252 = load float, float* %251, align 4
  %253 = fcmp une float %243, %246
  %254 = fcmp une float %249, %252
  %255 = and i1 %253, %254
  br i1 %255, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %256 = getelementptr %array, %array* %b, i32 0, i32 2
  %257 = load %dimension_descriptor*, %dimension_descriptor** %256, align 8
  %258 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %257, i32 0
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %258, i32 0, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = sub i32 2, %260
  %262 = mul i32 1, %261
  %263 = add i32 0, %262
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %258, i32 0, i32 3
  %265 = load i32, i32* %264, align 4
  %266 = mul i32 1, %265
  %267 = getelementptr %array, %array* %b, i32 0, i32 0
  %268 = load %complex_4*, %complex_4** %267, align 8
  %269 = getelementptr inbounds %complex_4, %complex_4* %268, i32 %263
  %270 = load %complex_4, %complex_4* %269, align 4
  %271 = alloca %complex_4, align 8
  %272 = getelementptr %complex_4, %complex_4* %271, i32 0, i32 0
  %273 = getelementptr %complex_4, %complex_4* %271, i32 0, i32 1
  store float 1.200000e+01, float* %272, align 4
  store float 0.000000e+00, float* %273, align 4
  %274 = load %complex_4, %complex_4* %271, align 4
  %275 = alloca %complex_4, align 8
  store %complex_4 %270, %complex_4* %275, align 4
  %276 = getelementptr %complex_4, %complex_4* %275, i32 0, i32 0
  %277 = load float, float* %276, align 4
  %278 = alloca %complex_4, align 8
  store %complex_4 %274, %complex_4* %278, align 4
  %279 = getelementptr %complex_4, %complex_4* %278, i32 0, i32 0
  %280 = load float, float* %279, align 4
  %281 = alloca %complex_4, align 8
  store %complex_4 %270, %complex_4* %281, align 4
  %282 = getelementptr %complex_4, %complex_4* %281, i32 0, i32 1
  %283 = load float, float* %282, align 4
  %284 = alloca %complex_4, align 8
  store %complex_4 %274, %complex_4* %284, align 4
  %285 = getelementptr %complex_4, %complex_4* %284, i32 0, i32 1
  %286 = load float, float* %285, align 4
  %287 = fcmp une float %277, %280
  %288 = fcmp une float %283, %286
  %289 = and i1 %287, %288
  br i1 %289, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %290 = getelementptr %array, %array* %b, i32 0, i32 2
  %291 = load %dimension_descriptor*, %dimension_descriptor** %290, align 8
  %292 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %291, i32 0
  %293 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = sub i32 3, %294
  %296 = mul i32 1, %295
  %297 = add i32 0, %296
  %298 = getelementptr %dimension_descriptor, %dimension_descriptor* %292, i32 0, i32 3
  %299 = load i32, i32* %298, align 4
  %300 = mul i32 1, %299
  %301 = getelementptr %array, %array* %b, i32 0, i32 0
  %302 = load %complex_4*, %complex_4** %301, align 8
  %303 = getelementptr inbounds %complex_4, %complex_4* %302, i32 %297
  %304 = load %complex_4, %complex_4* %303, align 4
  %305 = alloca %complex_4, align 8
  %306 = getelementptr %complex_4, %complex_4* %305, i32 0, i32 0
  %307 = getelementptr %complex_4, %complex_4* %305, i32 0, i32 1
  store float 1.300000e+01, float* %306, align 4
  store float 0.000000e+00, float* %307, align 4
  %308 = load %complex_4, %complex_4* %305, align 4
  %309 = alloca %complex_4, align 8
  store %complex_4 %304, %complex_4* %309, align 4
  %310 = getelementptr %complex_4, %complex_4* %309, i32 0, i32 0
  %311 = load float, float* %310, align 4
  %312 = alloca %complex_4, align 8
  store %complex_4 %308, %complex_4* %312, align 4
  %313 = getelementptr %complex_4, %complex_4* %312, i32 0, i32 0
  %314 = load float, float* %313, align 4
  %315 = alloca %complex_4, align 8
  store %complex_4 %304, %complex_4* %315, align 4
  %316 = getelementptr %complex_4, %complex_4* %315, i32 0, i32 1
  %317 = load float, float* %316, align 4
  %318 = alloca %complex_4, align 8
  store %complex_4 %308, %complex_4* %318, align 4
  %319 = getelementptr %complex_4, %complex_4* %318, i32 0, i32 1
  %320 = load float, float* %319, align 4
  %321 = fcmp une float %311, %314
  %322 = fcmp une float %317, %320
  %323 = and i1 %321, %322
  br i1 %323, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %324 = getelementptr %array, %array* %b, i32 0, i32 2
  %325 = load %dimension_descriptor*, %dimension_descriptor** %324, align 8
  %326 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %325, i32 0
  %327 = getelementptr %dimension_descriptor, %dimension_descriptor* %326, i32 0, i32 1
  %328 = load i32, i32* %327, align 4
  %329 = sub i32 4, %328
  %330 = mul i32 1, %329
  %331 = add i32 0, %330
  %332 = getelementptr %dimension_descriptor, %dimension_descriptor* %326, i32 0, i32 3
  %333 = load i32, i32* %332, align 4
  %334 = mul i32 1, %333
  %335 = getelementptr %array, %array* %b, i32 0, i32 0
  %336 = load %complex_4*, %complex_4** %335, align 8
  %337 = getelementptr inbounds %complex_4, %complex_4* %336, i32 %331
  %338 = load %complex_4, %complex_4* %337, align 4
  %339 = alloca %complex_4, align 8
  %340 = getelementptr %complex_4, %complex_4* %339, i32 0, i32 0
  %341 = getelementptr %complex_4, %complex_4* %339, i32 0, i32 1
  store float 1.400000e+01, float* %340, align 4
  store float 0.000000e+00, float* %341, align 4
  %342 = load %complex_4, %complex_4* %339, align 4
  %343 = alloca %complex_4, align 8
  store %complex_4 %338, %complex_4* %343, align 4
  %344 = getelementptr %complex_4, %complex_4* %343, i32 0, i32 0
  %345 = load float, float* %344, align 4
  %346 = alloca %complex_4, align 8
  store %complex_4 %342, %complex_4* %346, align 4
  %347 = getelementptr %complex_4, %complex_4* %346, i32 0, i32 0
  %348 = load float, float* %347, align 4
  %349 = alloca %complex_4, align 8
  store %complex_4 %338, %complex_4* %349, align 4
  %350 = getelementptr %complex_4, %complex_4* %349, i32 0, i32 1
  %351 = load float, float* %350, align 4
  %352 = alloca %complex_4, align 8
  store %complex_4 %342, %complex_4* %352, align 4
  %353 = getelementptr %complex_4, %complex_4* %352, i32 0, i32 1
  %354 = load float, float* %353, align 4
  %355 = fcmp une float %345, %348
  %356 = fcmp une float %351, %354
  %357 = and i1 %355, %356
  br i1 %357, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %358 = load i32, i32* %i, align 4
  %359 = add i32 %358, 1
  %360 = icmp sle i32 %359, 3
  br i1 %360, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %361 = load i32, i32* %i, align 4
  %362 = add i32 %361, 1
  store i32 %362, i32* %i, align 4
  %363 = load i32, i32* %i, align 4
  %364 = getelementptr %array, %array* %b, i32 0, i32 2
  %365 = load %dimension_descriptor*, %dimension_descriptor** %364, align 8
  %366 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %365, i32 0
  %367 = getelementptr %dimension_descriptor, %dimension_descriptor* %366, i32 0, i32 1
  %368 = load i32, i32* %367, align 4
  %369 = sub i32 %363, %368
  %370 = mul i32 1, %369
  %371 = add i32 0, %370
  %372 = getelementptr %dimension_descriptor, %dimension_descriptor* %366, i32 0, i32 3
  %373 = load i32, i32* %372, align 4
  %374 = mul i32 1, %373
  %375 = getelementptr %array, %array* %b, i32 0, i32 0
  %376 = load %complex_4*, %complex_4** %375, align 8
  %377 = getelementptr inbounds %complex_4, %complex_4* %376, i32 %371
  %378 = load i32, i32* %i, align 4
  %379 = getelementptr %array, %array* %a, i32 0, i32 2
  %380 = load %dimension_descriptor*, %dimension_descriptor** %379, align 8
  %381 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %380, i32 0
  %382 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 1
  %383 = load i32, i32* %382, align 4
  %384 = sub i32 %378, %383
  %385 = mul i32 1, %384
  %386 = add i32 0, %385
  %387 = getelementptr %dimension_descriptor, %dimension_descriptor* %381, i32 0, i32 3
  %388 = load i32, i32* %387, align 4
  %389 = mul i32 1, %388
  %390 = getelementptr %array, %array* %a, i32 0, i32 0
  %391 = load %complex_4*, %complex_4** %390, align 8
  %392 = getelementptr inbounds %complex_4, %complex_4* %391, i32 %386
  %393 = load %complex_4, %complex_4* %392, align 4
  %394 = alloca %complex_4, align 8
  %395 = getelementptr %complex_4, %complex_4* %394, i32 0, i32 0
  %396 = getelementptr %complex_4, %complex_4* %394, i32 0, i32 1
  store float 1.000000e+01, float* %395, align 4
  store float 0.000000e+00, float* %396, align 4
  %397 = load %complex_4, %complex_4* %394, align 4
  %398 = alloca %complex_4, align 8
  store %complex_4 %393, %complex_4* %398, align 4
  %399 = alloca %complex_4, align 8
  store %complex_4 %397, %complex_4* %399, align 4
  %400 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_sub(%complex_4* %398, %complex_4* %399, %complex_4* %400)
  %401 = load %complex_4, %complex_4* %400, align 4
  store %complex_4 %401, %complex_4* %377, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %402 = getelementptr %array, %array* %b, i32 0, i32 2
  %403 = load %dimension_descriptor*, %dimension_descriptor** %402, align 8
  %404 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %403, i32 0
  %405 = getelementptr %dimension_descriptor, %dimension_descriptor* %404, i32 0, i32 1
  %406 = load i32, i32* %405, align 4
  %407 = sub i32 1, %406
  %408 = mul i32 1, %407
  %409 = add i32 0, %408
  %410 = getelementptr %dimension_descriptor, %dimension_descriptor* %404, i32 0, i32 3
  %411 = load i32, i32* %410, align 4
  %412 = mul i32 1, %411
  %413 = getelementptr %array, %array* %b, i32 0, i32 0
  %414 = load %complex_4*, %complex_4** %413, align 8
  %415 = getelementptr inbounds %complex_4, %complex_4* %414, i32 %409
  %416 = load %complex_4, %complex_4* %415, align 4
  %417 = alloca %complex_4, align 8
  %418 = getelementptr %complex_4, %complex_4* %417, i32 0, i32 0
  %419 = getelementptr %complex_4, %complex_4* %417, i32 0, i32 1
  store float 1.000000e+00, float* %418, align 4
  store float 0.000000e+00, float* %419, align 4
  %420 = load %complex_4, %complex_4* %417, align 4
  %421 = alloca %complex_4, align 8
  store %complex_4 %416, %complex_4* %421, align 4
  %422 = getelementptr %complex_4, %complex_4* %421, i32 0, i32 0
  %423 = load float, float* %422, align 4
  %424 = alloca %complex_4, align 8
  store %complex_4 %420, %complex_4* %424, align 4
  %425 = getelementptr %complex_4, %complex_4* %424, i32 0, i32 0
  %426 = load float, float* %425, align 4
  %427 = alloca %complex_4, align 8
  store %complex_4 %416, %complex_4* %427, align 4
  %428 = getelementptr %complex_4, %complex_4* %427, i32 0, i32 1
  %429 = load float, float* %428, align 4
  %430 = alloca %complex_4, align 8
  store %complex_4 %420, %complex_4* %430, align 4
  %431 = getelementptr %complex_4, %complex_4* %430, i32 0, i32 1
  %432 = load float, float* %431, align 4
  %433 = fcmp une float %423, %426
  %434 = fcmp une float %429, %432
  %435 = and i1 %433, %434
  br i1 %435, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %436 = getelementptr %array, %array* %b, i32 0, i32 2
  %437 = load %dimension_descriptor*, %dimension_descriptor** %436, align 8
  %438 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %437, i32 0
  %439 = getelementptr %dimension_descriptor, %dimension_descriptor* %438, i32 0, i32 1
  %440 = load i32, i32* %439, align 4
  %441 = sub i32 2, %440
  %442 = mul i32 1, %441
  %443 = add i32 0, %442
  %444 = getelementptr %dimension_descriptor, %dimension_descriptor* %438, i32 0, i32 3
  %445 = load i32, i32* %444, align 4
  %446 = mul i32 1, %445
  %447 = getelementptr %array, %array* %b, i32 0, i32 0
  %448 = load %complex_4*, %complex_4** %447, align 8
  %449 = getelementptr inbounds %complex_4, %complex_4* %448, i32 %443
  %450 = load %complex_4, %complex_4* %449, align 4
  %451 = alloca %complex_4, align 8
  %452 = getelementptr %complex_4, %complex_4* %451, i32 0, i32 0
  %453 = getelementptr %complex_4, %complex_4* %451, i32 0, i32 1
  store float 2.000000e+00, float* %452, align 4
  store float 0.000000e+00, float* %453, align 4
  %454 = load %complex_4, %complex_4* %451, align 4
  %455 = alloca %complex_4, align 8
  store %complex_4 %450, %complex_4* %455, align 4
  %456 = getelementptr %complex_4, %complex_4* %455, i32 0, i32 0
  %457 = load float, float* %456, align 4
  %458 = alloca %complex_4, align 8
  store %complex_4 %454, %complex_4* %458, align 4
  %459 = getelementptr %complex_4, %complex_4* %458, i32 0, i32 0
  %460 = load float, float* %459, align 4
  %461 = alloca %complex_4, align 8
  store %complex_4 %450, %complex_4* %461, align 4
  %462 = getelementptr %complex_4, %complex_4* %461, i32 0, i32 1
  %463 = load float, float* %462, align 4
  %464 = alloca %complex_4, align 8
  store %complex_4 %454, %complex_4* %464, align 4
  %465 = getelementptr %complex_4, %complex_4* %464, i32 0, i32 1
  %466 = load float, float* %465, align 4
  %467 = fcmp une float %457, %460
  %468 = fcmp une float %463, %466
  %469 = and i1 %467, %468
  br i1 %469, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %470 = getelementptr %array, %array* %b, i32 0, i32 2
  %471 = load %dimension_descriptor*, %dimension_descriptor** %470, align 8
  %472 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %471, i32 0
  %473 = getelementptr %dimension_descriptor, %dimension_descriptor* %472, i32 0, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = sub i32 3, %474
  %476 = mul i32 1, %475
  %477 = add i32 0, %476
  %478 = getelementptr %dimension_descriptor, %dimension_descriptor* %472, i32 0, i32 3
  %479 = load i32, i32* %478, align 4
  %480 = mul i32 1, %479
  %481 = getelementptr %array, %array* %b, i32 0, i32 0
  %482 = load %complex_4*, %complex_4** %481, align 8
  %483 = getelementptr inbounds %complex_4, %complex_4* %482, i32 %477
  %484 = load %complex_4, %complex_4* %483, align 4
  %485 = alloca %complex_4, align 8
  %486 = getelementptr %complex_4, %complex_4* %485, i32 0, i32 0
  %487 = getelementptr %complex_4, %complex_4* %485, i32 0, i32 1
  store float 3.000000e+00, float* %486, align 4
  store float 0.000000e+00, float* %487, align 4
  %488 = load %complex_4, %complex_4* %485, align 4
  %489 = alloca %complex_4, align 8
  store %complex_4 %484, %complex_4* %489, align 4
  %490 = getelementptr %complex_4, %complex_4* %489, i32 0, i32 0
  %491 = load float, float* %490, align 4
  %492 = alloca %complex_4, align 8
  store %complex_4 %488, %complex_4* %492, align 4
  %493 = getelementptr %complex_4, %complex_4* %492, i32 0, i32 0
  %494 = load float, float* %493, align 4
  %495 = alloca %complex_4, align 8
  store %complex_4 %484, %complex_4* %495, align 4
  %496 = getelementptr %complex_4, %complex_4* %495, i32 0, i32 1
  %497 = load float, float* %496, align 4
  %498 = alloca %complex_4, align 8
  store %complex_4 %488, %complex_4* %498, align 4
  %499 = getelementptr %complex_4, %complex_4* %498, i32 0, i32 1
  %500 = load float, float* %499, align 4
  %501 = fcmp une float %491, %494
  %502 = fcmp une float %497, %500
  %503 = and i1 %501, %502
  br i1 %503, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %504 = getelementptr %array, %array* %b, i32 0, i32 2
  %505 = load %dimension_descriptor*, %dimension_descriptor** %504, align 8
  %506 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %505, i32 0
  %507 = getelementptr %dimension_descriptor, %dimension_descriptor* %506, i32 0, i32 1
  %508 = load i32, i32* %507, align 4
  %509 = sub i32 4, %508
  %510 = mul i32 1, %509
  %511 = add i32 0, %510
  %512 = getelementptr %dimension_descriptor, %dimension_descriptor* %506, i32 0, i32 3
  %513 = load i32, i32* %512, align 4
  %514 = mul i32 1, %513
  %515 = getelementptr %array, %array* %b, i32 0, i32 0
  %516 = load %complex_4*, %complex_4** %515, align 8
  %517 = getelementptr inbounds %complex_4, %complex_4* %516, i32 %511
  %518 = getelementptr %array, %array* %b, i32 0, i32 2
  %519 = load %dimension_descriptor*, %dimension_descriptor** %518, align 8
  %520 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %519, i32 0
  %521 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 1
  %522 = load i32, i32* %521, align 4
  %523 = sub i32 1, %522
  %524 = mul i32 1, %523
  %525 = add i32 0, %524
  %526 = getelementptr %dimension_descriptor, %dimension_descriptor* %520, i32 0, i32 3
  %527 = load i32, i32* %526, align 4
  %528 = mul i32 1, %527
  %529 = getelementptr %array, %array* %b, i32 0, i32 0
  %530 = load %complex_4*, %complex_4** %529, align 8
  %531 = getelementptr inbounds %complex_4, %complex_4* %530, i32 %525
  %532 = load %complex_4, %complex_4* %531, align 4
  %533 = getelementptr %array, %array* %b, i32 0, i32 2
  %534 = load %dimension_descriptor*, %dimension_descriptor** %533, align 8
  %535 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %534, i32 0
  %536 = getelementptr %dimension_descriptor, %dimension_descriptor* %535, i32 0, i32 1
  %537 = load i32, i32* %536, align 4
  %538 = sub i32 2, %537
  %539 = mul i32 1, %538
  %540 = add i32 0, %539
  %541 = getelementptr %dimension_descriptor, %dimension_descriptor* %535, i32 0, i32 3
  %542 = load i32, i32* %541, align 4
  %543 = mul i32 1, %542
  %544 = getelementptr %array, %array* %b, i32 0, i32 0
  %545 = load %complex_4*, %complex_4** %544, align 8
  %546 = getelementptr inbounds %complex_4, %complex_4* %545, i32 %540
  %547 = load %complex_4, %complex_4* %546, align 4
  %548 = alloca %complex_4, align 8
  store %complex_4 %532, %complex_4* %548, align 4
  %549 = alloca %complex_4, align 8
  store %complex_4 %547, %complex_4* %549, align 4
  %550 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %548, %complex_4* %549, %complex_4* %550)
  %551 = load %complex_4, %complex_4* %550, align 4
  %552 = getelementptr %array, %array* %b, i32 0, i32 2
  %553 = load %dimension_descriptor*, %dimension_descriptor** %552, align 8
  %554 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %553, i32 0
  %555 = getelementptr %dimension_descriptor, %dimension_descriptor* %554, i32 0, i32 1
  %556 = load i32, i32* %555, align 4
  %557 = sub i32 3, %556
  %558 = mul i32 1, %557
  %559 = add i32 0, %558
  %560 = getelementptr %dimension_descriptor, %dimension_descriptor* %554, i32 0, i32 3
  %561 = load i32, i32* %560, align 4
  %562 = mul i32 1, %561
  %563 = getelementptr %array, %array* %b, i32 0, i32 0
  %564 = load %complex_4*, %complex_4** %563, align 8
  %565 = getelementptr inbounds %complex_4, %complex_4* %564, i32 %559
  %566 = load %complex_4, %complex_4* %565, align 4
  %567 = alloca %complex_4, align 8
  store %complex_4 %551, %complex_4* %567, align 4
  %568 = alloca %complex_4, align 8
  store %complex_4 %566, %complex_4* %568, align 4
  %569 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %567, %complex_4* %568, %complex_4* %569)
  %570 = load %complex_4, %complex_4* %569, align 4
  %571 = getelementptr %array, %array* %a, i32 0, i32 2
  %572 = load %dimension_descriptor*, %dimension_descriptor** %571, align 8
  %573 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %572, i32 0
  %574 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 1
  %575 = load i32, i32* %574, align 4
  %576 = sub i32 1, %575
  %577 = mul i32 1, %576
  %578 = add i32 0, %577
  %579 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 3
  %580 = load i32, i32* %579, align 4
  %581 = mul i32 1, %580
  %582 = getelementptr %array, %array* %a, i32 0, i32 0
  %583 = load %complex_4*, %complex_4** %582, align 8
  %584 = getelementptr inbounds %complex_4, %complex_4* %583, i32 %578
  %585 = load %complex_4, %complex_4* %584, align 4
  %586 = alloca %complex_4, align 8
  store %complex_4 %570, %complex_4* %586, align 4
  %587 = alloca %complex_4, align 8
  store %complex_4 %585, %complex_4* %587, align 4
  %588 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %586, %complex_4* %587, %complex_4* %588)
  %589 = load %complex_4, %complex_4* %588, align 4
  store %complex_4 %589, %complex_4* %517, align 4
  %590 = getelementptr %array, %array* %b, i32 0, i32 2
  %591 = load %dimension_descriptor*, %dimension_descriptor** %590, align 8
  %592 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %591, i32 0
  %593 = getelementptr %dimension_descriptor, %dimension_descriptor* %592, i32 0, i32 1
  %594 = load i32, i32* %593, align 4
  %595 = sub i32 4, %594
  %596 = mul i32 1, %595
  %597 = add i32 0, %596
  %598 = getelementptr %dimension_descriptor, %dimension_descriptor* %592, i32 0, i32 3
  %599 = load i32, i32* %598, align 4
  %600 = mul i32 1, %599
  %601 = getelementptr %array, %array* %b, i32 0, i32 0
  %602 = load %complex_4*, %complex_4** %601, align 8
  %603 = getelementptr inbounds %complex_4, %complex_4* %602, i32 %597
  %604 = load %complex_4, %complex_4* %603, align 4
  %605 = alloca %complex_4, align 8
  %606 = getelementptr %complex_4, %complex_4* %605, i32 0, i32 0
  %607 = getelementptr %complex_4, %complex_4* %605, i32 0, i32 1
  store float 1.700000e+01, float* %606, align 4
  store float 0.000000e+00, float* %607, align 4
  %608 = load %complex_4, %complex_4* %605, align 4
  %609 = alloca %complex_4, align 8
  store %complex_4 %604, %complex_4* %609, align 4
  %610 = getelementptr %complex_4, %complex_4* %609, i32 0, i32 0
  %611 = load float, float* %610, align 4
  %612 = alloca %complex_4, align 8
  store %complex_4 %608, %complex_4* %612, align 4
  %613 = getelementptr %complex_4, %complex_4* %612, i32 0, i32 0
  %614 = load float, float* %613, align 4
  %615 = alloca %complex_4, align 8
  store %complex_4 %604, %complex_4* %615, align 4
  %616 = getelementptr %complex_4, %complex_4* %615, i32 0, i32 1
  %617 = load float, float* %616, align 4
  %618 = alloca %complex_4, align 8
  store %complex_4 %608, %complex_4* %618, align 4
  %619 = getelementptr %complex_4, %complex_4* %618, i32 0, i32 1
  %620 = load float, float* %619, align 4
  %621 = fcmp une float %611, %614
  %622 = fcmp une float %617, %620
  %623 = and i1 %621, %622
  br i1 %623, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %624 = getelementptr %array, %array* %b, i32 0, i32 2
  %625 = load %dimension_descriptor*, %dimension_descriptor** %624, align 8
  %626 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %625, i32 0
  %627 = getelementptr %dimension_descriptor, %dimension_descriptor* %626, i32 0, i32 1
  %628 = load i32, i32* %627, align 4
  %629 = sub i32 4, %628
  %630 = mul i32 1, %629
  %631 = add i32 0, %630
  %632 = getelementptr %dimension_descriptor, %dimension_descriptor* %626, i32 0, i32 3
  %633 = load i32, i32* %632, align 4
  %634 = mul i32 1, %633
  %635 = getelementptr %array, %array* %b, i32 0, i32 0
  %636 = load %complex_4*, %complex_4** %635, align 8
  %637 = getelementptr inbounds %complex_4, %complex_4* %636, i32 %631
  %638 = getelementptr %array, %array* %a, i32 0, i32 2
  %639 = load %dimension_descriptor*, %dimension_descriptor** %638, align 8
  %640 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %639, i32 0
  %641 = getelementptr %dimension_descriptor, %dimension_descriptor* %640, i32 0, i32 1
  %642 = load i32, i32* %641, align 4
  %643 = sub i32 1, %642
  %644 = mul i32 1, %643
  %645 = add i32 0, %644
  %646 = getelementptr %dimension_descriptor, %dimension_descriptor* %640, i32 0, i32 3
  %647 = load i32, i32* %646, align 4
  %648 = mul i32 1, %647
  %649 = getelementptr %array, %array* %a, i32 0, i32 0
  %650 = load %complex_4*, %complex_4** %649, align 8
  %651 = getelementptr inbounds %complex_4, %complex_4* %650, i32 %645
  %652 = load %complex_4, %complex_4* %651, align 4
  store %complex_4 %652, %complex_4* %637, align 4
  %653 = getelementptr %array, %array* %b, i32 0, i32 2
  %654 = load %dimension_descriptor*, %dimension_descriptor** %653, align 8
  %655 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %654, i32 0
  %656 = getelementptr %dimension_descriptor, %dimension_descriptor* %655, i32 0, i32 1
  %657 = load i32, i32* %656, align 4
  %658 = sub i32 4, %657
  %659 = mul i32 1, %658
  %660 = add i32 0, %659
  %661 = getelementptr %dimension_descriptor, %dimension_descriptor* %655, i32 0, i32 3
  %662 = load i32, i32* %661, align 4
  %663 = mul i32 1, %662
  %664 = getelementptr %array, %array* %b, i32 0, i32 0
  %665 = load %complex_4*, %complex_4** %664, align 8
  %666 = getelementptr inbounds %complex_4, %complex_4* %665, i32 %660
  %667 = load %complex_4, %complex_4* %666, align 4
  %668 = alloca %complex_4, align 8
  %669 = getelementptr %complex_4, %complex_4* %668, i32 0, i32 0
  %670 = getelementptr %complex_4, %complex_4* %668, i32 0, i32 1
  store float 1.100000e+01, float* %669, align 4
  store float 0.000000e+00, float* %670, align 4
  %671 = load %complex_4, %complex_4* %668, align 4
  %672 = alloca %complex_4, align 8
  store %complex_4 %667, %complex_4* %672, align 4
  %673 = getelementptr %complex_4, %complex_4* %672, i32 0, i32 0
  %674 = load float, float* %673, align 4
  %675 = alloca %complex_4, align 8
  store %complex_4 %671, %complex_4* %675, align 4
  %676 = getelementptr %complex_4, %complex_4* %675, i32 0, i32 0
  %677 = load float, float* %676, align 4
  %678 = alloca %complex_4, align 8
  store %complex_4 %667, %complex_4* %678, align 4
  %679 = getelementptr %complex_4, %complex_4* %678, i32 0, i32 1
  %680 = load float, float* %679, align 4
  %681 = alloca %complex_4, align 8
  store %complex_4 %671, %complex_4* %681, align 4
  %682 = getelementptr %complex_4, %complex_4* %681, i32 0, i32 1
  %683 = load float, float* %682, align 4
  %684 = fcmp une float %674, %677
  %685 = fcmp une float %680, %683
  %686 = and i1 %684, %685
  br i1 %686, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %687 = load i32, i32* %i, align 4
  %688 = add i32 %687, 1
  %689 = icmp sle i32 %688, 2
  br i1 %689, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %690 = load i32, i32* %i, align 4
  %691 = add i32 %690, 1
  store i32 %691, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %692 = load i32, i32* %j, align 4
  %693 = add i32 %692, 1
  %694 = icmp sle i32 %693, 2
  br i1 %694, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %695 = load i32, i32* %j, align 4
  %696 = add i32 %695, 1
  store i32 %696, i32* %j, align 4
  %697 = load i32, i32* %i, align 4
  %698 = load i32, i32* %j, align 4
  %699 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %700 = load %dimension_descriptor*, %dimension_descriptor** %699, align 8
  %701 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %700, i32 0
  %702 = getelementptr %dimension_descriptor, %dimension_descriptor* %701, i32 0, i32 1
  %703 = load i32, i32* %702, align 4
  %704 = sub i32 %697, %703
  %705 = mul i32 1, %704
  %706 = add i32 0, %705
  %707 = getelementptr %dimension_descriptor, %dimension_descriptor* %701, i32 0, i32 3
  %708 = load i32, i32* %707, align 4
  %709 = mul i32 1, %708
  %710 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %700, i32 1
  %711 = getelementptr %dimension_descriptor, %dimension_descriptor* %710, i32 0, i32 1
  %712 = load i32, i32* %711, align 4
  %713 = sub i32 %698, %712
  %714 = mul i32 %709, %713
  %715 = add i32 %706, %714
  %716 = getelementptr %dimension_descriptor, %dimension_descriptor* %710, i32 0, i32 3
  %717 = load i32, i32* %716, align 4
  %718 = mul i32 %709, %717
  %719 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %720 = load %complex_4*, %complex_4** %719, align 8
  %721 = getelementptr inbounds %complex_4, %complex_4* %720, i32 %715
  %722 = load i32, i32* %i, align 4
  %723 = load i32, i32* %j, align 4
  %724 = add i32 %722, %723
  %725 = add i32 %724, 10
  %726 = sitofp i32 %725 to float
  %727 = alloca %complex_4, align 8
  %728 = getelementptr %complex_4, %complex_4* %727, i32 0, i32 0
  %729 = getelementptr %complex_4, %complex_4* %727, i32 0, i32 1
  store float %726, float* %728, align 4
  store float 0.000000e+00, float* %729, align 4
  %730 = load %complex_4, %complex_4* %727, align 4
  store %complex_4 %730, %complex_4* %721, align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %731 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %732 = load %dimension_descriptor*, %dimension_descriptor** %731, align 8
  %733 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %732, i32 0
  %734 = getelementptr %dimension_descriptor, %dimension_descriptor* %733, i32 0, i32 1
  %735 = load i32, i32* %734, align 4
  %736 = sub i32 1, %735
  %737 = mul i32 1, %736
  %738 = add i32 0, %737
  %739 = getelementptr %dimension_descriptor, %dimension_descriptor* %733, i32 0, i32 3
  %740 = load i32, i32* %739, align 4
  %741 = mul i32 1, %740
  %742 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %732, i32 1
  %743 = getelementptr %dimension_descriptor, %dimension_descriptor* %742, i32 0, i32 1
  %744 = load i32, i32* %743, align 4
  %745 = sub i32 1, %744
  %746 = mul i32 %741, %745
  %747 = add i32 %738, %746
  %748 = getelementptr %dimension_descriptor, %dimension_descriptor* %742, i32 0, i32 3
  %749 = load i32, i32* %748, align 4
  %750 = mul i32 %741, %749
  %751 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %752 = load %complex_4*, %complex_4** %751, align 8
  %753 = getelementptr inbounds %complex_4, %complex_4* %752, i32 %747
  %754 = load %complex_4, %complex_4* %753, align 4
  %755 = alloca %complex_4, align 8
  %756 = getelementptr %complex_4, %complex_4* %755, i32 0, i32 0
  %757 = getelementptr %complex_4, %complex_4* %755, i32 0, i32 1
  store float 1.200000e+01, float* %756, align 4
  store float 0.000000e+00, float* %757, align 4
  %758 = load %complex_4, %complex_4* %755, align 4
  %759 = alloca %complex_4, align 8
  store %complex_4 %754, %complex_4* %759, align 4
  %760 = getelementptr %complex_4, %complex_4* %759, i32 0, i32 0
  %761 = load float, float* %760, align 4
  %762 = alloca %complex_4, align 8
  store %complex_4 %758, %complex_4* %762, align 4
  %763 = getelementptr %complex_4, %complex_4* %762, i32 0, i32 0
  %764 = load float, float* %763, align 4
  %765 = alloca %complex_4, align 8
  store %complex_4 %754, %complex_4* %765, align 4
  %766 = getelementptr %complex_4, %complex_4* %765, i32 0, i32 1
  %767 = load float, float* %766, align 4
  %768 = alloca %complex_4, align 8
  store %complex_4 %758, %complex_4* %768, align 4
  %769 = getelementptr %complex_4, %complex_4* %768, i32 0, i32 1
  %770 = load float, float* %769, align 4
  %771 = fcmp une float %761, %764
  %772 = fcmp une float %767, %770
  %773 = and i1 %771, %772
  br i1 %773, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %774 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %775 = load %dimension_descriptor*, %dimension_descriptor** %774, align 8
  %776 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %775, i32 0
  %777 = getelementptr %dimension_descriptor, %dimension_descriptor* %776, i32 0, i32 1
  %778 = load i32, i32* %777, align 4
  %779 = sub i32 1, %778
  %780 = mul i32 1, %779
  %781 = add i32 0, %780
  %782 = getelementptr %dimension_descriptor, %dimension_descriptor* %776, i32 0, i32 3
  %783 = load i32, i32* %782, align 4
  %784 = mul i32 1, %783
  %785 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %775, i32 1
  %786 = getelementptr %dimension_descriptor, %dimension_descriptor* %785, i32 0, i32 1
  %787 = load i32, i32* %786, align 4
  %788 = sub i32 2, %787
  %789 = mul i32 %784, %788
  %790 = add i32 %781, %789
  %791 = getelementptr %dimension_descriptor, %dimension_descriptor* %785, i32 0, i32 3
  %792 = load i32, i32* %791, align 4
  %793 = mul i32 %784, %792
  %794 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %795 = load %complex_4*, %complex_4** %794, align 8
  %796 = getelementptr inbounds %complex_4, %complex_4* %795, i32 %790
  %797 = load %complex_4, %complex_4* %796, align 4
  %798 = alloca %complex_4, align 8
  %799 = getelementptr %complex_4, %complex_4* %798, i32 0, i32 0
  %800 = getelementptr %complex_4, %complex_4* %798, i32 0, i32 1
  store float 1.300000e+01, float* %799, align 4
  store float 0.000000e+00, float* %800, align 4
  %801 = load %complex_4, %complex_4* %798, align 4
  %802 = alloca %complex_4, align 8
  store %complex_4 %797, %complex_4* %802, align 4
  %803 = getelementptr %complex_4, %complex_4* %802, i32 0, i32 0
  %804 = load float, float* %803, align 4
  %805 = alloca %complex_4, align 8
  store %complex_4 %801, %complex_4* %805, align 4
  %806 = getelementptr %complex_4, %complex_4* %805, i32 0, i32 0
  %807 = load float, float* %806, align 4
  %808 = alloca %complex_4, align 8
  store %complex_4 %797, %complex_4* %808, align 4
  %809 = getelementptr %complex_4, %complex_4* %808, i32 0, i32 1
  %810 = load float, float* %809, align 4
  %811 = alloca %complex_4, align 8
  store %complex_4 %801, %complex_4* %811, align 4
  %812 = getelementptr %complex_4, %complex_4* %811, i32 0, i32 1
  %813 = load float, float* %812, align 4
  %814 = fcmp une float %804, %807
  %815 = fcmp une float %810, %813
  %816 = and i1 %814, %815
  br i1 %816, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %817 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %818 = load %dimension_descriptor*, %dimension_descriptor** %817, align 8
  %819 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %818, i32 0
  %820 = getelementptr %dimension_descriptor, %dimension_descriptor* %819, i32 0, i32 1
  %821 = load i32, i32* %820, align 4
  %822 = sub i32 2, %821
  %823 = mul i32 1, %822
  %824 = add i32 0, %823
  %825 = getelementptr %dimension_descriptor, %dimension_descriptor* %819, i32 0, i32 3
  %826 = load i32, i32* %825, align 4
  %827 = mul i32 1, %826
  %828 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %818, i32 1
  %829 = getelementptr %dimension_descriptor, %dimension_descriptor* %828, i32 0, i32 1
  %830 = load i32, i32* %829, align 4
  %831 = sub i32 1, %830
  %832 = mul i32 %827, %831
  %833 = add i32 %824, %832
  %834 = getelementptr %dimension_descriptor, %dimension_descriptor* %828, i32 0, i32 3
  %835 = load i32, i32* %834, align 4
  %836 = mul i32 %827, %835
  %837 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %838 = load %complex_4*, %complex_4** %837, align 8
  %839 = getelementptr inbounds %complex_4, %complex_4* %838, i32 %833
  %840 = load %complex_4, %complex_4* %839, align 4
  %841 = alloca %complex_4, align 8
  %842 = getelementptr %complex_4, %complex_4* %841, i32 0, i32 0
  %843 = getelementptr %complex_4, %complex_4* %841, i32 0, i32 1
  store float 1.300000e+01, float* %842, align 4
  store float 0.000000e+00, float* %843, align 4
  %844 = load %complex_4, %complex_4* %841, align 4
  %845 = alloca %complex_4, align 8
  store %complex_4 %840, %complex_4* %845, align 4
  %846 = getelementptr %complex_4, %complex_4* %845, i32 0, i32 0
  %847 = load float, float* %846, align 4
  %848 = alloca %complex_4, align 8
  store %complex_4 %844, %complex_4* %848, align 4
  %849 = getelementptr %complex_4, %complex_4* %848, i32 0, i32 0
  %850 = load float, float* %849, align 4
  %851 = alloca %complex_4, align 8
  store %complex_4 %840, %complex_4* %851, align 4
  %852 = getelementptr %complex_4, %complex_4* %851, i32 0, i32 1
  %853 = load float, float* %852, align 4
  %854 = alloca %complex_4, align 8
  store %complex_4 %844, %complex_4* %854, align 4
  %855 = getelementptr %complex_4, %complex_4* %854, i32 0, i32 1
  %856 = load float, float* %855, align 4
  %857 = fcmp une float %847, %850
  %858 = fcmp une float %853, %856
  %859 = and i1 %857, %858
  br i1 %859, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %860 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %861 = load %dimension_descriptor*, %dimension_descriptor** %860, align 8
  %862 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %861, i32 0
  %863 = getelementptr %dimension_descriptor, %dimension_descriptor* %862, i32 0, i32 1
  %864 = load i32, i32* %863, align 4
  %865 = sub i32 2, %864
  %866 = mul i32 1, %865
  %867 = add i32 0, %866
  %868 = getelementptr %dimension_descriptor, %dimension_descriptor* %862, i32 0, i32 3
  %869 = load i32, i32* %868, align 4
  %870 = mul i32 1, %869
  %871 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %861, i32 1
  %872 = getelementptr %dimension_descriptor, %dimension_descriptor* %871, i32 0, i32 1
  %873 = load i32, i32* %872, align 4
  %874 = sub i32 2, %873
  %875 = mul i32 %870, %874
  %876 = add i32 %867, %875
  %877 = getelementptr %dimension_descriptor, %dimension_descriptor* %871, i32 0, i32 3
  %878 = load i32, i32* %877, align 4
  %879 = mul i32 %870, %878
  %880 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %881 = load %complex_4*, %complex_4** %880, align 8
  %882 = getelementptr inbounds %complex_4, %complex_4* %881, i32 %876
  %883 = load %complex_4, %complex_4* %882, align 4
  %884 = alloca %complex_4, align 8
  %885 = getelementptr %complex_4, %complex_4* %884, i32 0, i32 0
  %886 = getelementptr %complex_4, %complex_4* %884, i32 0, i32 1
  store float 1.400000e+01, float* %885, align 4
  store float 0.000000e+00, float* %886, align 4
  %887 = load %complex_4, %complex_4* %884, align 4
  %888 = alloca %complex_4, align 8
  store %complex_4 %883, %complex_4* %888, align 4
  %889 = getelementptr %complex_4, %complex_4* %888, i32 0, i32 0
  %890 = load float, float* %889, align 4
  %891 = alloca %complex_4, align 8
  store %complex_4 %887, %complex_4* %891, align 4
  %892 = getelementptr %complex_4, %complex_4* %891, i32 0, i32 0
  %893 = load float, float* %892, align 4
  %894 = alloca %complex_4, align 8
  store %complex_4 %883, %complex_4* %894, align 4
  %895 = getelementptr %complex_4, %complex_4* %894, i32 0, i32 1
  %896 = load float, float* %895, align 4
  %897 = alloca %complex_4, align 8
  store %complex_4 %887, %complex_4* %897, align 4
  %898 = getelementptr %complex_4, %complex_4* %897, i32 0, i32 1
  %899 = load float, float* %898, align 4
  %900 = fcmp une float %890, %893
  %901 = fcmp une float %896, %899
  %902 = and i1 %900, %901
  br i1 %902, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)
