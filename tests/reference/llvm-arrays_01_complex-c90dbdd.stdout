; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { %complex_4*, i32, [1 x %dimension_descriptor], i1 }
%complex_4 = type { float, float }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { %complex_4*, i32, [2 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = alloca i32, align 4
  store i32 3, i32* %11, align 4
  %12 = getelementptr %array, %array* %a, i32 0, i32 0
  %13 = load i32, i32* %11, align 4
  %14 = alloca %complex_4, i32 %13, align 8
  store %complex_4* %14, %complex_4** %12, align 8
  %b = alloca %array, align 8
  %15 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr %array, %array* %b, i32 0, i32 2
  %17 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 3
  store i32 1, i32* %18, align 4
  store i32 1, i32* %19, align 4
  store i32 4, i32* %20, align 4
  %22 = load i32, i32* %20, align 4
  %23 = load i32, i32* %19, align 4
  %24 = sub i32 %22, %23
  %25 = add i32 %24, 1
  store i32 %25, i32* %21, align 4
  %26 = alloca i32, align 4
  store i32 4, i32* %26, align 4
  %27 = getelementptr %array, %array* %b, i32 0, i32 0
  %28 = load i32, i32* %26, align 4
  %29 = alloca %complex_4, i32 %28, align 8
  store %complex_4* %29, %complex_4** %27, align 8
  %c = alloca %array.0, align 8
  %30 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %32 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %31, i32 0, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 2
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 3
  store i32 1, i32* %33, align 4
  store i32 1, i32* %34, align 4
  store i32 2, i32* %35, align 4
  %37 = load i32, i32* %35, align 4
  %38 = load i32, i32* %34, align 4
  %39 = sub i32 %37, %38
  %40 = add i32 %39, 1
  store i32 %40, i32* %36, align 4
  %41 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %31, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 3
  store i32 1, i32* %42, align 4
  store i32 1, i32* %43, align 4
  store i32 2, i32* %44, align 4
  %46 = load i32, i32* %44, align 4
  %47 = load i32, i32* %43, align 4
  %48 = sub i32 %46, %47
  %49 = add i32 %48, 1
  store i32 %49, i32* %45, align 4
  %50 = alloca i32, align 4
  store i32 4, i32* %50, align 4
  %51 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %52 = load i32, i32* %50, align 4
  %53 = alloca %complex_4, i32 %52, align 8
  store %complex_4* %53, %complex_4** %51, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %54 = load i32, i32* %i, align 4
  %55 = add i32 %54, 1
  %56 = icmp sle i32 %55, 3
  br i1 %56, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %57 = load i32, i32* %i, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %i, align 4
  %59 = load i32, i32* %i, align 4
  %60 = getelementptr %array, %array* %a, i32 0, i32 2
  %61 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 %59, %63
  %65 = mul i32 1, %64
  %66 = add i32 0, %65
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 1, %68
  %70 = getelementptr %array, %array* %a, i32 0, i32 0
  %71 = load %complex_4*, %complex_4** %70, align 8
  %72 = getelementptr inbounds %complex_4, %complex_4* %71, i32 %66
  %73 = load i32, i32* %i, align 4
  %74 = add i32 %73, 10
  %75 = sitofp i32 %74 to float
  %76 = alloca %complex_4, align 8
  %77 = getelementptr %complex_4, %complex_4* %76, i32 0, i32 0
  %78 = getelementptr %complex_4, %complex_4* %76, i32 0, i32 1
  store float %75, float* %77, align 4
  store float 0.000000e+00, float* %78, align 4
  %79 = load %complex_4, %complex_4* %76, align 4
  store %complex_4 %79, %complex_4* %72, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %80 = getelementptr %array, %array* %a, i32 0, i32 2
  %81 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %80, i32 0, i32 0
  %82 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = sub i32 1, %83
  %85 = mul i32 1, %84
  %86 = add i32 0, %85
  %87 = getelementptr %dimension_descriptor, %dimension_descriptor* %81, i32 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = mul i32 1, %88
  %90 = getelementptr %array, %array* %a, i32 0, i32 0
  %91 = load %complex_4*, %complex_4** %90, align 8
  %92 = getelementptr inbounds %complex_4, %complex_4* %91, i32 %86
  %93 = load %complex_4, %complex_4* %92, align 4
  %94 = alloca %complex_4, align 8
  %95 = getelementptr %complex_4, %complex_4* %94, i32 0, i32 0
  %96 = getelementptr %complex_4, %complex_4* %94, i32 0, i32 1
  store float 1.100000e+01, float* %95, align 4
  store float 0.000000e+00, float* %96, align 4
  %97 = load %complex_4, %complex_4* %94, align 4
  %98 = alloca %complex_4, align 8
  store %complex_4 %93, %complex_4* %98, align 4
  %99 = getelementptr %complex_4, %complex_4* %98, i32 0, i32 0
  %100 = load float, float* %99, align 4
  %101 = alloca %complex_4, align 8
  store %complex_4 %97, %complex_4* %101, align 4
  %102 = getelementptr %complex_4, %complex_4* %101, i32 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = alloca %complex_4, align 8
  store %complex_4 %93, %complex_4* %104, align 4
  %105 = getelementptr %complex_4, %complex_4* %104, i32 0, i32 1
  %106 = load float, float* %105, align 4
  %107 = alloca %complex_4, align 8
  store %complex_4 %97, %complex_4* %107, align 4
  %108 = getelementptr %complex_4, %complex_4* %107, i32 0, i32 1
  %109 = load float, float* %108, align 4
  %110 = fcmp une float %100, %103
  %111 = fcmp une float %106, %109
  %112 = and i1 %110, %111
  br i1 %112, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %113 = getelementptr %array, %array* %a, i32 0, i32 2
  %114 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %113, i32 0, i32 0
  %115 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = sub i32 2, %116
  %118 = mul i32 1, %117
  %119 = add i32 0, %118
  %120 = getelementptr %dimension_descriptor, %dimension_descriptor* %114, i32 0, i32 3
  %121 = load i32, i32* %120, align 4
  %122 = mul i32 1, %121
  %123 = getelementptr %array, %array* %a, i32 0, i32 0
  %124 = load %complex_4*, %complex_4** %123, align 8
  %125 = getelementptr inbounds %complex_4, %complex_4* %124, i32 %119
  %126 = load %complex_4, %complex_4* %125, align 4
  %127 = alloca %complex_4, align 8
  %128 = getelementptr %complex_4, %complex_4* %127, i32 0, i32 0
  %129 = getelementptr %complex_4, %complex_4* %127, i32 0, i32 1
  store float 1.200000e+01, float* %128, align 4
  store float 0.000000e+00, float* %129, align 4
  %130 = load %complex_4, %complex_4* %127, align 4
  %131 = alloca %complex_4, align 8
  store %complex_4 %126, %complex_4* %131, align 4
  %132 = getelementptr %complex_4, %complex_4* %131, i32 0, i32 0
  %133 = load float, float* %132, align 4
  %134 = alloca %complex_4, align 8
  store %complex_4 %130, %complex_4* %134, align 4
  %135 = getelementptr %complex_4, %complex_4* %134, i32 0, i32 0
  %136 = load float, float* %135, align 4
  %137 = alloca %complex_4, align 8
  store %complex_4 %126, %complex_4* %137, align 4
  %138 = getelementptr %complex_4, %complex_4* %137, i32 0, i32 1
  %139 = load float, float* %138, align 4
  %140 = alloca %complex_4, align 8
  store %complex_4 %130, %complex_4* %140, align 4
  %141 = getelementptr %complex_4, %complex_4* %140, i32 0, i32 1
  %142 = load float, float* %141, align 4
  %143 = fcmp une float %133, %136
  %144 = fcmp une float %139, %142
  %145 = and i1 %143, %144
  br i1 %145, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %146 = getelementptr %array, %array* %a, i32 0, i32 2
  %147 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %146, i32 0, i32 0
  %148 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = sub i32 3, %149
  %151 = mul i32 1, %150
  %152 = add i32 0, %151
  %153 = getelementptr %dimension_descriptor, %dimension_descriptor* %147, i32 0, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = mul i32 1, %154
  %156 = getelementptr %array, %array* %a, i32 0, i32 0
  %157 = load %complex_4*, %complex_4** %156, align 8
  %158 = getelementptr inbounds %complex_4, %complex_4* %157, i32 %152
  %159 = load %complex_4, %complex_4* %158, align 4
  %160 = alloca %complex_4, align 8
  %161 = getelementptr %complex_4, %complex_4* %160, i32 0, i32 0
  %162 = getelementptr %complex_4, %complex_4* %160, i32 0, i32 1
  store float 1.300000e+01, float* %161, align 4
  store float 0.000000e+00, float* %162, align 4
  %163 = load %complex_4, %complex_4* %160, align 4
  %164 = alloca %complex_4, align 8
  store %complex_4 %159, %complex_4* %164, align 4
  %165 = getelementptr %complex_4, %complex_4* %164, i32 0, i32 0
  %166 = load float, float* %165, align 4
  %167 = alloca %complex_4, align 8
  store %complex_4 %163, %complex_4* %167, align 4
  %168 = getelementptr %complex_4, %complex_4* %167, i32 0, i32 0
  %169 = load float, float* %168, align 4
  %170 = alloca %complex_4, align 8
  store %complex_4 %159, %complex_4* %170, align 4
  %171 = getelementptr %complex_4, %complex_4* %170, i32 0, i32 1
  %172 = load float, float* %171, align 4
  %173 = alloca %complex_4, align 8
  store %complex_4 %163, %complex_4* %173, align 4
  %174 = getelementptr %complex_4, %complex_4* %173, i32 0, i32 1
  %175 = load float, float* %174, align 4
  %176 = fcmp une float %166, %169
  %177 = fcmp une float %172, %175
  %178 = and i1 %176, %177
  br i1 %178, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %179 = load i32, i32* %i, align 4
  %180 = add i32 %179, 1
  %181 = icmp sle i32 %180, 14
  br i1 %181, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %182 = load i32, i32* %i, align 4
  %183 = add i32 %182, 1
  store i32 %183, i32* %i, align 4
  %184 = load i32, i32* %i, align 4
  %185 = sub i32 %184, 10
  %186 = getelementptr %array, %array* %b, i32 0, i32 2
  %187 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %186, i32 0, i32 0
  %188 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 4
  %190 = sub i32 %185, %189
  %191 = mul i32 1, %190
  %192 = add i32 0, %191
  %193 = getelementptr %dimension_descriptor, %dimension_descriptor* %187, i32 0, i32 3
  %194 = load i32, i32* %193, align 4
  %195 = mul i32 1, %194
  %196 = getelementptr %array, %array* %b, i32 0, i32 0
  %197 = load %complex_4*, %complex_4** %196, align 8
  %198 = getelementptr inbounds %complex_4, %complex_4* %197, i32 %192
  %199 = load i32, i32* %i, align 4
  %200 = sitofp i32 %199 to float
  %201 = alloca %complex_4, align 8
  %202 = getelementptr %complex_4, %complex_4* %201, i32 0, i32 0
  %203 = getelementptr %complex_4, %complex_4* %201, i32 0, i32 1
  store float %200, float* %202, align 4
  store float 0.000000e+00, float* %203, align 4
  %204 = load %complex_4, %complex_4* %201, align 4
  store %complex_4 %204, %complex_4* %198, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %205 = getelementptr %array, %array* %b, i32 0, i32 2
  %206 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %205, i32 0, i32 0
  %207 = getelementptr %dimension_descriptor, %dimension_descriptor* %206, i32 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = sub i32 1, %208
  %210 = mul i32 1, %209
  %211 = add i32 0, %210
  %212 = getelementptr %dimension_descriptor, %dimension_descriptor* %206, i32 0, i32 3
  %213 = load i32, i32* %212, align 4
  %214 = mul i32 1, %213
  %215 = getelementptr %array, %array* %b, i32 0, i32 0
  %216 = load %complex_4*, %complex_4** %215, align 8
  %217 = getelementptr inbounds %complex_4, %complex_4* %216, i32 %211
  %218 = load %complex_4, %complex_4* %217, align 4
  %219 = alloca %complex_4, align 8
  %220 = getelementptr %complex_4, %complex_4* %219, i32 0, i32 0
  %221 = getelementptr %complex_4, %complex_4* %219, i32 0, i32 1
  store float 1.100000e+01, float* %220, align 4
  store float 0.000000e+00, float* %221, align 4
  %222 = load %complex_4, %complex_4* %219, align 4
  %223 = alloca %complex_4, align 8
  store %complex_4 %218, %complex_4* %223, align 4
  %224 = getelementptr %complex_4, %complex_4* %223, i32 0, i32 0
  %225 = load float, float* %224, align 4
  %226 = alloca %complex_4, align 8
  store %complex_4 %222, %complex_4* %226, align 4
  %227 = getelementptr %complex_4, %complex_4* %226, i32 0, i32 0
  %228 = load float, float* %227, align 4
  %229 = alloca %complex_4, align 8
  store %complex_4 %218, %complex_4* %229, align 4
  %230 = getelementptr %complex_4, %complex_4* %229, i32 0, i32 1
  %231 = load float, float* %230, align 4
  %232 = alloca %complex_4, align 8
  store %complex_4 %222, %complex_4* %232, align 4
  %233 = getelementptr %complex_4, %complex_4* %232, i32 0, i32 1
  %234 = load float, float* %233, align 4
  %235 = fcmp une float %225, %228
  %236 = fcmp une float %231, %234
  %237 = and i1 %235, %236
  br i1 %237, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %238 = getelementptr %array, %array* %b, i32 0, i32 2
  %239 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %238, i32 0, i32 0
  %240 = getelementptr %dimension_descriptor, %dimension_descriptor* %239, i32 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = sub i32 2, %241
  %243 = mul i32 1, %242
  %244 = add i32 0, %243
  %245 = getelementptr %dimension_descriptor, %dimension_descriptor* %239, i32 0, i32 3
  %246 = load i32, i32* %245, align 4
  %247 = mul i32 1, %246
  %248 = getelementptr %array, %array* %b, i32 0, i32 0
  %249 = load %complex_4*, %complex_4** %248, align 8
  %250 = getelementptr inbounds %complex_4, %complex_4* %249, i32 %244
  %251 = load %complex_4, %complex_4* %250, align 4
  %252 = alloca %complex_4, align 8
  %253 = getelementptr %complex_4, %complex_4* %252, i32 0, i32 0
  %254 = getelementptr %complex_4, %complex_4* %252, i32 0, i32 1
  store float 1.200000e+01, float* %253, align 4
  store float 0.000000e+00, float* %254, align 4
  %255 = load %complex_4, %complex_4* %252, align 4
  %256 = alloca %complex_4, align 8
  store %complex_4 %251, %complex_4* %256, align 4
  %257 = getelementptr %complex_4, %complex_4* %256, i32 0, i32 0
  %258 = load float, float* %257, align 4
  %259 = alloca %complex_4, align 8
  store %complex_4 %255, %complex_4* %259, align 4
  %260 = getelementptr %complex_4, %complex_4* %259, i32 0, i32 0
  %261 = load float, float* %260, align 4
  %262 = alloca %complex_4, align 8
  store %complex_4 %251, %complex_4* %262, align 4
  %263 = getelementptr %complex_4, %complex_4* %262, i32 0, i32 1
  %264 = load float, float* %263, align 4
  %265 = alloca %complex_4, align 8
  store %complex_4 %255, %complex_4* %265, align 4
  %266 = getelementptr %complex_4, %complex_4* %265, i32 0, i32 1
  %267 = load float, float* %266, align 4
  %268 = fcmp une float %258, %261
  %269 = fcmp une float %264, %267
  %270 = and i1 %268, %269
  br i1 %270, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %271 = getelementptr %array, %array* %b, i32 0, i32 2
  %272 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %271, i32 0, i32 0
  %273 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = sub i32 3, %274
  %276 = mul i32 1, %275
  %277 = add i32 0, %276
  %278 = getelementptr %dimension_descriptor, %dimension_descriptor* %272, i32 0, i32 3
  %279 = load i32, i32* %278, align 4
  %280 = mul i32 1, %279
  %281 = getelementptr %array, %array* %b, i32 0, i32 0
  %282 = load %complex_4*, %complex_4** %281, align 8
  %283 = getelementptr inbounds %complex_4, %complex_4* %282, i32 %277
  %284 = load %complex_4, %complex_4* %283, align 4
  %285 = alloca %complex_4, align 8
  %286 = getelementptr %complex_4, %complex_4* %285, i32 0, i32 0
  %287 = getelementptr %complex_4, %complex_4* %285, i32 0, i32 1
  store float 1.300000e+01, float* %286, align 4
  store float 0.000000e+00, float* %287, align 4
  %288 = load %complex_4, %complex_4* %285, align 4
  %289 = alloca %complex_4, align 8
  store %complex_4 %284, %complex_4* %289, align 4
  %290 = getelementptr %complex_4, %complex_4* %289, i32 0, i32 0
  %291 = load float, float* %290, align 4
  %292 = alloca %complex_4, align 8
  store %complex_4 %288, %complex_4* %292, align 4
  %293 = getelementptr %complex_4, %complex_4* %292, i32 0, i32 0
  %294 = load float, float* %293, align 4
  %295 = alloca %complex_4, align 8
  store %complex_4 %284, %complex_4* %295, align 4
  %296 = getelementptr %complex_4, %complex_4* %295, i32 0, i32 1
  %297 = load float, float* %296, align 4
  %298 = alloca %complex_4, align 8
  store %complex_4 %288, %complex_4* %298, align 4
  %299 = getelementptr %complex_4, %complex_4* %298, i32 0, i32 1
  %300 = load float, float* %299, align 4
  %301 = fcmp une float %291, %294
  %302 = fcmp une float %297, %300
  %303 = and i1 %301, %302
  br i1 %303, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %304 = getelementptr %array, %array* %b, i32 0, i32 2
  %305 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %304, i32 0, i32 0
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %305, i32 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = sub i32 4, %307
  %309 = mul i32 1, %308
  %310 = add i32 0, %309
  %311 = getelementptr %dimension_descriptor, %dimension_descriptor* %305, i32 0, i32 3
  %312 = load i32, i32* %311, align 4
  %313 = mul i32 1, %312
  %314 = getelementptr %array, %array* %b, i32 0, i32 0
  %315 = load %complex_4*, %complex_4** %314, align 8
  %316 = getelementptr inbounds %complex_4, %complex_4* %315, i32 %310
  %317 = load %complex_4, %complex_4* %316, align 4
  %318 = alloca %complex_4, align 8
  %319 = getelementptr %complex_4, %complex_4* %318, i32 0, i32 0
  %320 = getelementptr %complex_4, %complex_4* %318, i32 0, i32 1
  store float 1.400000e+01, float* %319, align 4
  store float 0.000000e+00, float* %320, align 4
  %321 = load %complex_4, %complex_4* %318, align 4
  %322 = alloca %complex_4, align 8
  store %complex_4 %317, %complex_4* %322, align 4
  %323 = getelementptr %complex_4, %complex_4* %322, i32 0, i32 0
  %324 = load float, float* %323, align 4
  %325 = alloca %complex_4, align 8
  store %complex_4 %321, %complex_4* %325, align 4
  %326 = getelementptr %complex_4, %complex_4* %325, i32 0, i32 0
  %327 = load float, float* %326, align 4
  %328 = alloca %complex_4, align 8
  store %complex_4 %317, %complex_4* %328, align 4
  %329 = getelementptr %complex_4, %complex_4* %328, i32 0, i32 1
  %330 = load float, float* %329, align 4
  %331 = alloca %complex_4, align 8
  store %complex_4 %321, %complex_4* %331, align 4
  %332 = getelementptr %complex_4, %complex_4* %331, i32 0, i32 1
  %333 = load float, float* %332, align 4
  %334 = fcmp une float %324, %327
  %335 = fcmp une float %330, %333
  %336 = and i1 %334, %335
  br i1 %336, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %337 = load i32, i32* %i, align 4
  %338 = add i32 %337, 1
  %339 = icmp sle i32 %338, 3
  br i1 %339, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %340 = load i32, i32* %i, align 4
  %341 = add i32 %340, 1
  store i32 %341, i32* %i, align 4
  %342 = load i32, i32* %i, align 4
  %343 = getelementptr %array, %array* %b, i32 0, i32 2
  %344 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %343, i32 0, i32 0
  %345 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 1
  %346 = load i32, i32* %345, align 4
  %347 = sub i32 %342, %346
  %348 = mul i32 1, %347
  %349 = add i32 0, %348
  %350 = getelementptr %dimension_descriptor, %dimension_descriptor* %344, i32 0, i32 3
  %351 = load i32, i32* %350, align 4
  %352 = mul i32 1, %351
  %353 = getelementptr %array, %array* %b, i32 0, i32 0
  %354 = load %complex_4*, %complex_4** %353, align 8
  %355 = getelementptr inbounds %complex_4, %complex_4* %354, i32 %349
  %356 = load i32, i32* %i, align 4
  %357 = getelementptr %array, %array* %a, i32 0, i32 2
  %358 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %357, i32 0, i32 0
  %359 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 1
  %360 = load i32, i32* %359, align 4
  %361 = sub i32 %356, %360
  %362 = mul i32 1, %361
  %363 = add i32 0, %362
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 3
  %365 = load i32, i32* %364, align 4
  %366 = mul i32 1, %365
  %367 = getelementptr %array, %array* %a, i32 0, i32 0
  %368 = load %complex_4*, %complex_4** %367, align 8
  %369 = getelementptr inbounds %complex_4, %complex_4* %368, i32 %363
  %370 = load %complex_4, %complex_4* %369, align 4
  %371 = alloca %complex_4, align 8
  %372 = getelementptr %complex_4, %complex_4* %371, i32 0, i32 0
  %373 = getelementptr %complex_4, %complex_4* %371, i32 0, i32 1
  store float 1.000000e+01, float* %372, align 4
  store float 0.000000e+00, float* %373, align 4
  %374 = load %complex_4, %complex_4* %371, align 4
  %375 = alloca %complex_4, align 8
  store %complex_4 %370, %complex_4* %375, align 4
  %376 = alloca %complex_4, align 8
  store %complex_4 %374, %complex_4* %376, align 4
  %377 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_sub(%complex_4* %375, %complex_4* %376, %complex_4* %377)
  %378 = load %complex_4, %complex_4* %377, align 4
  store %complex_4 %378, %complex_4* %355, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %379 = getelementptr %array, %array* %b, i32 0, i32 2
  %380 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %379, i32 0, i32 0
  %381 = getelementptr %dimension_descriptor, %dimension_descriptor* %380, i32 0, i32 1
  %382 = load i32, i32* %381, align 4
  %383 = sub i32 1, %382
  %384 = mul i32 1, %383
  %385 = add i32 0, %384
  %386 = getelementptr %dimension_descriptor, %dimension_descriptor* %380, i32 0, i32 3
  %387 = load i32, i32* %386, align 4
  %388 = mul i32 1, %387
  %389 = getelementptr %array, %array* %b, i32 0, i32 0
  %390 = load %complex_4*, %complex_4** %389, align 8
  %391 = getelementptr inbounds %complex_4, %complex_4* %390, i32 %385
  %392 = load %complex_4, %complex_4* %391, align 4
  %393 = alloca %complex_4, align 8
  %394 = getelementptr %complex_4, %complex_4* %393, i32 0, i32 0
  %395 = getelementptr %complex_4, %complex_4* %393, i32 0, i32 1
  store float 1.000000e+00, float* %394, align 4
  store float 0.000000e+00, float* %395, align 4
  %396 = load %complex_4, %complex_4* %393, align 4
  %397 = alloca %complex_4, align 8
  store %complex_4 %392, %complex_4* %397, align 4
  %398 = getelementptr %complex_4, %complex_4* %397, i32 0, i32 0
  %399 = load float, float* %398, align 4
  %400 = alloca %complex_4, align 8
  store %complex_4 %396, %complex_4* %400, align 4
  %401 = getelementptr %complex_4, %complex_4* %400, i32 0, i32 0
  %402 = load float, float* %401, align 4
  %403 = alloca %complex_4, align 8
  store %complex_4 %392, %complex_4* %403, align 4
  %404 = getelementptr %complex_4, %complex_4* %403, i32 0, i32 1
  %405 = load float, float* %404, align 4
  %406 = alloca %complex_4, align 8
  store %complex_4 %396, %complex_4* %406, align 4
  %407 = getelementptr %complex_4, %complex_4* %406, i32 0, i32 1
  %408 = load float, float* %407, align 4
  %409 = fcmp une float %399, %402
  %410 = fcmp une float %405, %408
  %411 = and i1 %409, %410
  br i1 %411, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %412 = getelementptr %array, %array* %b, i32 0, i32 2
  %413 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %412, i32 0, i32 0
  %414 = getelementptr %dimension_descriptor, %dimension_descriptor* %413, i32 0, i32 1
  %415 = load i32, i32* %414, align 4
  %416 = sub i32 2, %415
  %417 = mul i32 1, %416
  %418 = add i32 0, %417
  %419 = getelementptr %dimension_descriptor, %dimension_descriptor* %413, i32 0, i32 3
  %420 = load i32, i32* %419, align 4
  %421 = mul i32 1, %420
  %422 = getelementptr %array, %array* %b, i32 0, i32 0
  %423 = load %complex_4*, %complex_4** %422, align 8
  %424 = getelementptr inbounds %complex_4, %complex_4* %423, i32 %418
  %425 = load %complex_4, %complex_4* %424, align 4
  %426 = alloca %complex_4, align 8
  %427 = getelementptr %complex_4, %complex_4* %426, i32 0, i32 0
  %428 = getelementptr %complex_4, %complex_4* %426, i32 0, i32 1
  store float 2.000000e+00, float* %427, align 4
  store float 0.000000e+00, float* %428, align 4
  %429 = load %complex_4, %complex_4* %426, align 4
  %430 = alloca %complex_4, align 8
  store %complex_4 %425, %complex_4* %430, align 4
  %431 = getelementptr %complex_4, %complex_4* %430, i32 0, i32 0
  %432 = load float, float* %431, align 4
  %433 = alloca %complex_4, align 8
  store %complex_4 %429, %complex_4* %433, align 4
  %434 = getelementptr %complex_4, %complex_4* %433, i32 0, i32 0
  %435 = load float, float* %434, align 4
  %436 = alloca %complex_4, align 8
  store %complex_4 %425, %complex_4* %436, align 4
  %437 = getelementptr %complex_4, %complex_4* %436, i32 0, i32 1
  %438 = load float, float* %437, align 4
  %439 = alloca %complex_4, align 8
  store %complex_4 %429, %complex_4* %439, align 4
  %440 = getelementptr %complex_4, %complex_4* %439, i32 0, i32 1
  %441 = load float, float* %440, align 4
  %442 = fcmp une float %432, %435
  %443 = fcmp une float %438, %441
  %444 = and i1 %442, %443
  br i1 %444, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %445 = getelementptr %array, %array* %b, i32 0, i32 2
  %446 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %445, i32 0, i32 0
  %447 = getelementptr %dimension_descriptor, %dimension_descriptor* %446, i32 0, i32 1
  %448 = load i32, i32* %447, align 4
  %449 = sub i32 3, %448
  %450 = mul i32 1, %449
  %451 = add i32 0, %450
  %452 = getelementptr %dimension_descriptor, %dimension_descriptor* %446, i32 0, i32 3
  %453 = load i32, i32* %452, align 4
  %454 = mul i32 1, %453
  %455 = getelementptr %array, %array* %b, i32 0, i32 0
  %456 = load %complex_4*, %complex_4** %455, align 8
  %457 = getelementptr inbounds %complex_4, %complex_4* %456, i32 %451
  %458 = load %complex_4, %complex_4* %457, align 4
  %459 = alloca %complex_4, align 8
  %460 = getelementptr %complex_4, %complex_4* %459, i32 0, i32 0
  %461 = getelementptr %complex_4, %complex_4* %459, i32 0, i32 1
  store float 3.000000e+00, float* %460, align 4
  store float 0.000000e+00, float* %461, align 4
  %462 = load %complex_4, %complex_4* %459, align 4
  %463 = alloca %complex_4, align 8
  store %complex_4 %458, %complex_4* %463, align 4
  %464 = getelementptr %complex_4, %complex_4* %463, i32 0, i32 0
  %465 = load float, float* %464, align 4
  %466 = alloca %complex_4, align 8
  store %complex_4 %462, %complex_4* %466, align 4
  %467 = getelementptr %complex_4, %complex_4* %466, i32 0, i32 0
  %468 = load float, float* %467, align 4
  %469 = alloca %complex_4, align 8
  store %complex_4 %458, %complex_4* %469, align 4
  %470 = getelementptr %complex_4, %complex_4* %469, i32 0, i32 1
  %471 = load float, float* %470, align 4
  %472 = alloca %complex_4, align 8
  store %complex_4 %462, %complex_4* %472, align 4
  %473 = getelementptr %complex_4, %complex_4* %472, i32 0, i32 1
  %474 = load float, float* %473, align 4
  %475 = fcmp une float %465, %468
  %476 = fcmp une float %471, %474
  %477 = and i1 %475, %476
  br i1 %477, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %478 = getelementptr %array, %array* %b, i32 0, i32 2
  %479 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %478, i32 0, i32 0
  %480 = getelementptr %dimension_descriptor, %dimension_descriptor* %479, i32 0, i32 1
  %481 = load i32, i32* %480, align 4
  %482 = sub i32 4, %481
  %483 = mul i32 1, %482
  %484 = add i32 0, %483
  %485 = getelementptr %dimension_descriptor, %dimension_descriptor* %479, i32 0, i32 3
  %486 = load i32, i32* %485, align 4
  %487 = mul i32 1, %486
  %488 = getelementptr %array, %array* %b, i32 0, i32 0
  %489 = load %complex_4*, %complex_4** %488, align 8
  %490 = getelementptr inbounds %complex_4, %complex_4* %489, i32 %484
  %491 = getelementptr %array, %array* %b, i32 0, i32 2
  %492 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %491, i32 0, i32 0
  %493 = getelementptr %dimension_descriptor, %dimension_descriptor* %492, i32 0, i32 1
  %494 = load i32, i32* %493, align 4
  %495 = sub i32 1, %494
  %496 = mul i32 1, %495
  %497 = add i32 0, %496
  %498 = getelementptr %dimension_descriptor, %dimension_descriptor* %492, i32 0, i32 3
  %499 = load i32, i32* %498, align 4
  %500 = mul i32 1, %499
  %501 = getelementptr %array, %array* %b, i32 0, i32 0
  %502 = load %complex_4*, %complex_4** %501, align 8
  %503 = getelementptr inbounds %complex_4, %complex_4* %502, i32 %497
  %504 = load %complex_4, %complex_4* %503, align 4
  %505 = getelementptr %array, %array* %b, i32 0, i32 2
  %506 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %505, i32 0, i32 0
  %507 = getelementptr %dimension_descriptor, %dimension_descriptor* %506, i32 0, i32 1
  %508 = load i32, i32* %507, align 4
  %509 = sub i32 2, %508
  %510 = mul i32 1, %509
  %511 = add i32 0, %510
  %512 = getelementptr %dimension_descriptor, %dimension_descriptor* %506, i32 0, i32 3
  %513 = load i32, i32* %512, align 4
  %514 = mul i32 1, %513
  %515 = getelementptr %array, %array* %b, i32 0, i32 0
  %516 = load %complex_4*, %complex_4** %515, align 8
  %517 = getelementptr inbounds %complex_4, %complex_4* %516, i32 %511
  %518 = load %complex_4, %complex_4* %517, align 4
  %519 = alloca %complex_4, align 8
  store %complex_4 %504, %complex_4* %519, align 4
  %520 = alloca %complex_4, align 8
  store %complex_4 %518, %complex_4* %520, align 4
  %521 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %519, %complex_4* %520, %complex_4* %521)
  %522 = load %complex_4, %complex_4* %521, align 4
  %523 = getelementptr %array, %array* %b, i32 0, i32 2
  %524 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %523, i32 0, i32 0
  %525 = getelementptr %dimension_descriptor, %dimension_descriptor* %524, i32 0, i32 1
  %526 = load i32, i32* %525, align 4
  %527 = sub i32 3, %526
  %528 = mul i32 1, %527
  %529 = add i32 0, %528
  %530 = getelementptr %dimension_descriptor, %dimension_descriptor* %524, i32 0, i32 3
  %531 = load i32, i32* %530, align 4
  %532 = mul i32 1, %531
  %533 = getelementptr %array, %array* %b, i32 0, i32 0
  %534 = load %complex_4*, %complex_4** %533, align 8
  %535 = getelementptr inbounds %complex_4, %complex_4* %534, i32 %529
  %536 = load %complex_4, %complex_4* %535, align 4
  %537 = alloca %complex_4, align 8
  store %complex_4 %522, %complex_4* %537, align 4
  %538 = alloca %complex_4, align 8
  store %complex_4 %536, %complex_4* %538, align 4
  %539 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %537, %complex_4* %538, %complex_4* %539)
  %540 = load %complex_4, %complex_4* %539, align 4
  %541 = getelementptr %array, %array* %a, i32 0, i32 2
  %542 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %541, i32 0, i32 0
  %543 = getelementptr %dimension_descriptor, %dimension_descriptor* %542, i32 0, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = sub i32 1, %544
  %546 = mul i32 1, %545
  %547 = add i32 0, %546
  %548 = getelementptr %dimension_descriptor, %dimension_descriptor* %542, i32 0, i32 3
  %549 = load i32, i32* %548, align 4
  %550 = mul i32 1, %549
  %551 = getelementptr %array, %array* %a, i32 0, i32 0
  %552 = load %complex_4*, %complex_4** %551, align 8
  %553 = getelementptr inbounds %complex_4, %complex_4* %552, i32 %547
  %554 = load %complex_4, %complex_4* %553, align 4
  %555 = alloca %complex_4, align 8
  store %complex_4 %540, %complex_4* %555, align 4
  %556 = alloca %complex_4, align 8
  store %complex_4 %554, %complex_4* %556, align 4
  %557 = alloca %complex_4, align 8
  call void (%complex_4*, %complex_4*, %complex_4*, ...) @_lfortran_complex_add(%complex_4* %555, %complex_4* %556, %complex_4* %557)
  %558 = load %complex_4, %complex_4* %557, align 4
  store %complex_4 %558, %complex_4* %490, align 4
  %559 = getelementptr %array, %array* %b, i32 0, i32 2
  %560 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %559, i32 0, i32 0
  %561 = getelementptr %dimension_descriptor, %dimension_descriptor* %560, i32 0, i32 1
  %562 = load i32, i32* %561, align 4
  %563 = sub i32 4, %562
  %564 = mul i32 1, %563
  %565 = add i32 0, %564
  %566 = getelementptr %dimension_descriptor, %dimension_descriptor* %560, i32 0, i32 3
  %567 = load i32, i32* %566, align 4
  %568 = mul i32 1, %567
  %569 = getelementptr %array, %array* %b, i32 0, i32 0
  %570 = load %complex_4*, %complex_4** %569, align 8
  %571 = getelementptr inbounds %complex_4, %complex_4* %570, i32 %565
  %572 = load %complex_4, %complex_4* %571, align 4
  %573 = alloca %complex_4, align 8
  %574 = getelementptr %complex_4, %complex_4* %573, i32 0, i32 0
  %575 = getelementptr %complex_4, %complex_4* %573, i32 0, i32 1
  store float 1.700000e+01, float* %574, align 4
  store float 0.000000e+00, float* %575, align 4
  %576 = load %complex_4, %complex_4* %573, align 4
  %577 = alloca %complex_4, align 8
  store %complex_4 %572, %complex_4* %577, align 4
  %578 = getelementptr %complex_4, %complex_4* %577, i32 0, i32 0
  %579 = load float, float* %578, align 4
  %580 = alloca %complex_4, align 8
  store %complex_4 %576, %complex_4* %580, align 4
  %581 = getelementptr %complex_4, %complex_4* %580, i32 0, i32 0
  %582 = load float, float* %581, align 4
  %583 = alloca %complex_4, align 8
  store %complex_4 %572, %complex_4* %583, align 4
  %584 = getelementptr %complex_4, %complex_4* %583, i32 0, i32 1
  %585 = load float, float* %584, align 4
  %586 = alloca %complex_4, align 8
  store %complex_4 %576, %complex_4* %586, align 4
  %587 = getelementptr %complex_4, %complex_4* %586, i32 0, i32 1
  %588 = load float, float* %587, align 4
  %589 = fcmp une float %579, %582
  %590 = fcmp une float %585, %588
  %591 = and i1 %589, %590
  br i1 %591, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %592 = getelementptr %array, %array* %b, i32 0, i32 2
  %593 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %592, i32 0, i32 0
  %594 = getelementptr %dimension_descriptor, %dimension_descriptor* %593, i32 0, i32 1
  %595 = load i32, i32* %594, align 4
  %596 = sub i32 4, %595
  %597 = mul i32 1, %596
  %598 = add i32 0, %597
  %599 = getelementptr %dimension_descriptor, %dimension_descriptor* %593, i32 0, i32 3
  %600 = load i32, i32* %599, align 4
  %601 = mul i32 1, %600
  %602 = getelementptr %array, %array* %b, i32 0, i32 0
  %603 = load %complex_4*, %complex_4** %602, align 8
  %604 = getelementptr inbounds %complex_4, %complex_4* %603, i32 %598
  %605 = getelementptr %array, %array* %a, i32 0, i32 2
  %606 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %605, i32 0, i32 0
  %607 = getelementptr %dimension_descriptor, %dimension_descriptor* %606, i32 0, i32 1
  %608 = load i32, i32* %607, align 4
  %609 = sub i32 1, %608
  %610 = mul i32 1, %609
  %611 = add i32 0, %610
  %612 = getelementptr %dimension_descriptor, %dimension_descriptor* %606, i32 0, i32 3
  %613 = load i32, i32* %612, align 4
  %614 = mul i32 1, %613
  %615 = getelementptr %array, %array* %a, i32 0, i32 0
  %616 = load %complex_4*, %complex_4** %615, align 8
  %617 = getelementptr inbounds %complex_4, %complex_4* %616, i32 %611
  %618 = load %complex_4, %complex_4* %617, align 4
  store %complex_4 %618, %complex_4* %604, align 4
  %619 = getelementptr %array, %array* %b, i32 0, i32 2
  %620 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %619, i32 0, i32 0
  %621 = getelementptr %dimension_descriptor, %dimension_descriptor* %620, i32 0, i32 1
  %622 = load i32, i32* %621, align 4
  %623 = sub i32 4, %622
  %624 = mul i32 1, %623
  %625 = add i32 0, %624
  %626 = getelementptr %dimension_descriptor, %dimension_descriptor* %620, i32 0, i32 3
  %627 = load i32, i32* %626, align 4
  %628 = mul i32 1, %627
  %629 = getelementptr %array, %array* %b, i32 0, i32 0
  %630 = load %complex_4*, %complex_4** %629, align 8
  %631 = getelementptr inbounds %complex_4, %complex_4* %630, i32 %625
  %632 = load %complex_4, %complex_4* %631, align 4
  %633 = alloca %complex_4, align 8
  %634 = getelementptr %complex_4, %complex_4* %633, i32 0, i32 0
  %635 = getelementptr %complex_4, %complex_4* %633, i32 0, i32 1
  store float 1.100000e+01, float* %634, align 4
  store float 0.000000e+00, float* %635, align 4
  %636 = load %complex_4, %complex_4* %633, align 4
  %637 = alloca %complex_4, align 8
  store %complex_4 %632, %complex_4* %637, align 4
  %638 = getelementptr %complex_4, %complex_4* %637, i32 0, i32 0
  %639 = load float, float* %638, align 4
  %640 = alloca %complex_4, align 8
  store %complex_4 %636, %complex_4* %640, align 4
  %641 = getelementptr %complex_4, %complex_4* %640, i32 0, i32 0
  %642 = load float, float* %641, align 4
  %643 = alloca %complex_4, align 8
  store %complex_4 %632, %complex_4* %643, align 4
  %644 = getelementptr %complex_4, %complex_4* %643, i32 0, i32 1
  %645 = load float, float* %644, align 4
  %646 = alloca %complex_4, align 8
  store %complex_4 %636, %complex_4* %646, align 4
  %647 = getelementptr %complex_4, %complex_4* %646, i32 0, i32 1
  %648 = load float, float* %647, align 4
  %649 = fcmp une float %639, %642
  %650 = fcmp une float %645, %648
  %651 = and i1 %649, %650
  br i1 %651, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %652 = load i32, i32* %i, align 4
  %653 = add i32 %652, 1
  %654 = icmp sle i32 %653, 2
  br i1 %654, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %655 = load i32, i32* %i, align 4
  %656 = add i32 %655, 1
  store i32 %656, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %657 = load i32, i32* %j, align 4
  %658 = add i32 %657, 1
  %659 = icmp sle i32 %658, 2
  br i1 %659, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %660 = load i32, i32* %j, align 4
  %661 = add i32 %660, 1
  store i32 %661, i32* %j, align 4
  %662 = load i32, i32* %i, align 4
  %663 = load i32, i32* %j, align 4
  %664 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %665 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %664, i32 0, i32 0
  %666 = getelementptr %dimension_descriptor, %dimension_descriptor* %665, i32 0, i32 1
  %667 = load i32, i32* %666, align 4
  %668 = sub i32 %662, %667
  %669 = mul i32 1, %668
  %670 = add i32 0, %669
  %671 = getelementptr %dimension_descriptor, %dimension_descriptor* %665, i32 0, i32 3
  %672 = load i32, i32* %671, align 4
  %673 = mul i32 1, %672
  %674 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %664, i32 0, i32 1
  %675 = getelementptr %dimension_descriptor, %dimension_descriptor* %674, i32 0, i32 1
  %676 = load i32, i32* %675, align 4
  %677 = sub i32 %663, %676
  %678 = mul i32 %673, %677
  %679 = add i32 %670, %678
  %680 = getelementptr %dimension_descriptor, %dimension_descriptor* %674, i32 0, i32 3
  %681 = load i32, i32* %680, align 4
  %682 = mul i32 %673, %681
  %683 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %684 = load %complex_4*, %complex_4** %683, align 8
  %685 = getelementptr inbounds %complex_4, %complex_4* %684, i32 %679
  %686 = load i32, i32* %i, align 4
  %687 = load i32, i32* %j, align 4
  %688 = add i32 %686, %687
  %689 = add i32 %688, 10
  %690 = sitofp i32 %689 to float
  %691 = alloca %complex_4, align 8
  %692 = getelementptr %complex_4, %complex_4* %691, i32 0, i32 0
  %693 = getelementptr %complex_4, %complex_4* %691, i32 0, i32 1
  store float %690, float* %692, align 4
  store float 0.000000e+00, float* %693, align 4
  %694 = load %complex_4, %complex_4* %691, align 4
  store %complex_4 %694, %complex_4* %685, align 4
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %695 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %696 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %695, i32 0, i32 0
  %697 = getelementptr %dimension_descriptor, %dimension_descriptor* %696, i32 0, i32 1
  %698 = load i32, i32* %697, align 4
  %699 = sub i32 1, %698
  %700 = mul i32 1, %699
  %701 = add i32 0, %700
  %702 = getelementptr %dimension_descriptor, %dimension_descriptor* %696, i32 0, i32 3
  %703 = load i32, i32* %702, align 4
  %704 = mul i32 1, %703
  %705 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %695, i32 0, i32 1
  %706 = getelementptr %dimension_descriptor, %dimension_descriptor* %705, i32 0, i32 1
  %707 = load i32, i32* %706, align 4
  %708 = sub i32 1, %707
  %709 = mul i32 %704, %708
  %710 = add i32 %701, %709
  %711 = getelementptr %dimension_descriptor, %dimension_descriptor* %705, i32 0, i32 3
  %712 = load i32, i32* %711, align 4
  %713 = mul i32 %704, %712
  %714 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %715 = load %complex_4*, %complex_4** %714, align 8
  %716 = getelementptr inbounds %complex_4, %complex_4* %715, i32 %710
  %717 = load %complex_4, %complex_4* %716, align 4
  %718 = alloca %complex_4, align 8
  %719 = getelementptr %complex_4, %complex_4* %718, i32 0, i32 0
  %720 = getelementptr %complex_4, %complex_4* %718, i32 0, i32 1
  store float 1.200000e+01, float* %719, align 4
  store float 0.000000e+00, float* %720, align 4
  %721 = load %complex_4, %complex_4* %718, align 4
  %722 = alloca %complex_4, align 8
  store %complex_4 %717, %complex_4* %722, align 4
  %723 = getelementptr %complex_4, %complex_4* %722, i32 0, i32 0
  %724 = load float, float* %723, align 4
  %725 = alloca %complex_4, align 8
  store %complex_4 %721, %complex_4* %725, align 4
  %726 = getelementptr %complex_4, %complex_4* %725, i32 0, i32 0
  %727 = load float, float* %726, align 4
  %728 = alloca %complex_4, align 8
  store %complex_4 %717, %complex_4* %728, align 4
  %729 = getelementptr %complex_4, %complex_4* %728, i32 0, i32 1
  %730 = load float, float* %729, align 4
  %731 = alloca %complex_4, align 8
  store %complex_4 %721, %complex_4* %731, align 4
  %732 = getelementptr %complex_4, %complex_4* %731, i32 0, i32 1
  %733 = load float, float* %732, align 4
  %734 = fcmp une float %724, %727
  %735 = fcmp une float %730, %733
  %736 = and i1 %734, %735
  br i1 %736, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %737 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %738 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %737, i32 0, i32 0
  %739 = getelementptr %dimension_descriptor, %dimension_descriptor* %738, i32 0, i32 1
  %740 = load i32, i32* %739, align 4
  %741 = sub i32 1, %740
  %742 = mul i32 1, %741
  %743 = add i32 0, %742
  %744 = getelementptr %dimension_descriptor, %dimension_descriptor* %738, i32 0, i32 3
  %745 = load i32, i32* %744, align 4
  %746 = mul i32 1, %745
  %747 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %737, i32 0, i32 1
  %748 = getelementptr %dimension_descriptor, %dimension_descriptor* %747, i32 0, i32 1
  %749 = load i32, i32* %748, align 4
  %750 = sub i32 2, %749
  %751 = mul i32 %746, %750
  %752 = add i32 %743, %751
  %753 = getelementptr %dimension_descriptor, %dimension_descriptor* %747, i32 0, i32 3
  %754 = load i32, i32* %753, align 4
  %755 = mul i32 %746, %754
  %756 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %757 = load %complex_4*, %complex_4** %756, align 8
  %758 = getelementptr inbounds %complex_4, %complex_4* %757, i32 %752
  %759 = load %complex_4, %complex_4* %758, align 4
  %760 = alloca %complex_4, align 8
  %761 = getelementptr %complex_4, %complex_4* %760, i32 0, i32 0
  %762 = getelementptr %complex_4, %complex_4* %760, i32 0, i32 1
  store float 1.300000e+01, float* %761, align 4
  store float 0.000000e+00, float* %762, align 4
  %763 = load %complex_4, %complex_4* %760, align 4
  %764 = alloca %complex_4, align 8
  store %complex_4 %759, %complex_4* %764, align 4
  %765 = getelementptr %complex_4, %complex_4* %764, i32 0, i32 0
  %766 = load float, float* %765, align 4
  %767 = alloca %complex_4, align 8
  store %complex_4 %763, %complex_4* %767, align 4
  %768 = getelementptr %complex_4, %complex_4* %767, i32 0, i32 0
  %769 = load float, float* %768, align 4
  %770 = alloca %complex_4, align 8
  store %complex_4 %759, %complex_4* %770, align 4
  %771 = getelementptr %complex_4, %complex_4* %770, i32 0, i32 1
  %772 = load float, float* %771, align 4
  %773 = alloca %complex_4, align 8
  store %complex_4 %763, %complex_4* %773, align 4
  %774 = getelementptr %complex_4, %complex_4* %773, i32 0, i32 1
  %775 = load float, float* %774, align 4
  %776 = fcmp une float %766, %769
  %777 = fcmp une float %772, %775
  %778 = and i1 %776, %777
  br i1 %778, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %779 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %780 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %779, i32 0, i32 0
  %781 = getelementptr %dimension_descriptor, %dimension_descriptor* %780, i32 0, i32 1
  %782 = load i32, i32* %781, align 4
  %783 = sub i32 2, %782
  %784 = mul i32 1, %783
  %785 = add i32 0, %784
  %786 = getelementptr %dimension_descriptor, %dimension_descriptor* %780, i32 0, i32 3
  %787 = load i32, i32* %786, align 4
  %788 = mul i32 1, %787
  %789 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %779, i32 0, i32 1
  %790 = getelementptr %dimension_descriptor, %dimension_descriptor* %789, i32 0, i32 1
  %791 = load i32, i32* %790, align 4
  %792 = sub i32 1, %791
  %793 = mul i32 %788, %792
  %794 = add i32 %785, %793
  %795 = getelementptr %dimension_descriptor, %dimension_descriptor* %789, i32 0, i32 3
  %796 = load i32, i32* %795, align 4
  %797 = mul i32 %788, %796
  %798 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %799 = load %complex_4*, %complex_4** %798, align 8
  %800 = getelementptr inbounds %complex_4, %complex_4* %799, i32 %794
  %801 = load %complex_4, %complex_4* %800, align 4
  %802 = alloca %complex_4, align 8
  %803 = getelementptr %complex_4, %complex_4* %802, i32 0, i32 0
  %804 = getelementptr %complex_4, %complex_4* %802, i32 0, i32 1
  store float 1.300000e+01, float* %803, align 4
  store float 0.000000e+00, float* %804, align 4
  %805 = load %complex_4, %complex_4* %802, align 4
  %806 = alloca %complex_4, align 8
  store %complex_4 %801, %complex_4* %806, align 4
  %807 = getelementptr %complex_4, %complex_4* %806, i32 0, i32 0
  %808 = load float, float* %807, align 4
  %809 = alloca %complex_4, align 8
  store %complex_4 %805, %complex_4* %809, align 4
  %810 = getelementptr %complex_4, %complex_4* %809, i32 0, i32 0
  %811 = load float, float* %810, align 4
  %812 = alloca %complex_4, align 8
  store %complex_4 %801, %complex_4* %812, align 4
  %813 = getelementptr %complex_4, %complex_4* %812, i32 0, i32 1
  %814 = load float, float* %813, align 4
  %815 = alloca %complex_4, align 8
  store %complex_4 %805, %complex_4* %815, align 4
  %816 = getelementptr %complex_4, %complex_4* %815, i32 0, i32 1
  %817 = load float, float* %816, align 4
  %818 = fcmp une float %808, %811
  %819 = fcmp une float %814, %817
  %820 = and i1 %818, %819
  br i1 %820, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %821 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %822 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %821, i32 0, i32 0
  %823 = getelementptr %dimension_descriptor, %dimension_descriptor* %822, i32 0, i32 1
  %824 = load i32, i32* %823, align 4
  %825 = sub i32 2, %824
  %826 = mul i32 1, %825
  %827 = add i32 0, %826
  %828 = getelementptr %dimension_descriptor, %dimension_descriptor* %822, i32 0, i32 3
  %829 = load i32, i32* %828, align 4
  %830 = mul i32 1, %829
  %831 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %821, i32 0, i32 1
  %832 = getelementptr %dimension_descriptor, %dimension_descriptor* %831, i32 0, i32 1
  %833 = load i32, i32* %832, align 4
  %834 = sub i32 2, %833
  %835 = mul i32 %830, %834
  %836 = add i32 %827, %835
  %837 = getelementptr %dimension_descriptor, %dimension_descriptor* %831, i32 0, i32 3
  %838 = load i32, i32* %837, align 4
  %839 = mul i32 %830, %838
  %840 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %841 = load %complex_4*, %complex_4** %840, align 8
  %842 = getelementptr inbounds %complex_4, %complex_4* %841, i32 %836
  %843 = load %complex_4, %complex_4* %842, align 4
  %844 = alloca %complex_4, align 8
  %845 = getelementptr %complex_4, %complex_4* %844, i32 0, i32 0
  %846 = getelementptr %complex_4, %complex_4* %844, i32 0, i32 1
  store float 1.400000e+01, float* %845, align 4
  store float 0.000000e+00, float* %846, align 4
  %847 = load %complex_4, %complex_4* %844, align 4
  %848 = alloca %complex_4, align 8
  store %complex_4 %843, %complex_4* %848, align 4
  %849 = getelementptr %complex_4, %complex_4* %848, i32 0, i32 0
  %850 = load float, float* %849, align 4
  %851 = alloca %complex_4, align 8
  store %complex_4 %847, %complex_4* %851, align 4
  %852 = getelementptr %complex_4, %complex_4* %851, i32 0, i32 0
  %853 = load float, float* %852, align 4
  %854 = alloca %complex_4, align 8
  store %complex_4 %843, %complex_4* %854, align 4
  %855 = getelementptr %complex_4, %complex_4* %854, i32 0, i32 1
  %856 = load float, float* %855, align 4
  %857 = alloca %complex_4, align 8
  store %complex_4 %847, %complex_4* %857, align 4
  %858 = getelementptr %complex_4, %complex_4* %857, i32 0, i32 1
  %859 = load float, float* %858, align 4
  %860 = fcmp une float %850, %853
  %861 = fcmp une float %856, %859
  %862 = and i1 %860, %861
  br i1 %862, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)

declare void @_lfortran_complex_sub(%complex_4*, %complex_4*, %complex_4*, ...)

declare void @_lfortran_complex_add(%complex_4*, %complex_4*, %complex_4*, ...)
