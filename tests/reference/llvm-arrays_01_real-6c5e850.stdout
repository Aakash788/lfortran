; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { double*, i32, %dimension_descriptor*, i1 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { double*, i32, %dimension_descriptor*, i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %5 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %6 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %5, i32 0
  %7 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 1
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 2
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %6, i32 0, i32 3
  store i32 1, i32* %7, align 4
  store i32 1, i32* %8, align 4
  store i32 3, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %8, align 4
  %13 = sub i32 %11, %12
  %14 = add i32 %13, 1
  store i32 %14, i32* %10, align 4
  %15 = alloca i32, align 4
  store i32 3, i32* %15, align 4
  %16 = getelementptr %array, %array* %a, i32 0, i32 0
  %17 = load i32, i32* %15, align 4
  %18 = alloca double, i32 %17, align 8
  store double* %18, double** %16, align 8
  %b = alloca %array, align 8
  %19 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr %array, %array* %b, i32 0, i32 2
  %21 = alloca i32, align 4
  store i32 1, i32* %21, align 4
  %22 = load i32, i32* %21, align 4
  %23 = alloca %dimension_descriptor, i32 %22, align 8
  store %dimension_descriptor* %23, %dimension_descriptor** %20, align 8
  %24 = load %dimension_descriptor*, %dimension_descriptor** %20, align 8
  %25 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %24, i32 0
  %26 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 0
  %27 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 1
  %28 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 2
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %25, i32 0, i32 3
  store i32 1, i32* %26, align 4
  store i32 1, i32* %27, align 4
  store i32 4, i32* %28, align 4
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %27, align 4
  %32 = sub i32 %30, %31
  %33 = add i32 %32, 1
  store i32 %33, i32* %29, align 4
  %34 = alloca i32, align 4
  store i32 4, i32* %34, align 4
  %35 = getelementptr %array, %array* %b, i32 0, i32 0
  %36 = load i32, i32* %34, align 4
  %37 = alloca double, i32 %36, align 8
  store double* %37, double** %35, align 8
  %c = alloca %array.0, align 8
  %38 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %38, align 4
  %39 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %40 = alloca i32, align 4
  store i32 2, i32* %40, align 4
  %41 = load i32, i32* %40, align 4
  %42 = alloca %dimension_descriptor, i32 %41, align 8
  store %dimension_descriptor* %42, %dimension_descriptor** %39, align 8
  %43 = load %dimension_descriptor*, %dimension_descriptor** %39, align 8
  %44 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 0
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 0
  %46 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 1
  %47 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 2
  %48 = getelementptr %dimension_descriptor, %dimension_descriptor* %44, i32 0, i32 3
  store i32 1, i32* %45, align 4
  store i32 1, i32* %46, align 4
  store i32 2, i32* %47, align 4
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %46, align 4
  %51 = sub i32 %49, %50
  %52 = add i32 %51, 1
  store i32 %52, i32* %48, align 4
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %43, i32 1
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 0
  %55 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %56 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  %57 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 3
  store i32 1, i32* %54, align 4
  store i32 1, i32* %55, align 4
  store i32 2, i32* %56, align 4
  %58 = load i32, i32* %56, align 4
  %59 = load i32, i32* %55, align 4
  %60 = sub i32 %58, %59
  %61 = add i32 %60, 1
  store i32 %61, i32* %57, align 4
  %62 = alloca i32, align 4
  store i32 4, i32* %62, align 4
  %63 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %64 = load i32, i32* %62, align 4
  %65 = alloca double, i32 %64, align 8
  store double* %65, double** %63, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %66 = load i32, i32* %i, align 4
  %67 = add i32 %66, 1
  %68 = icmp sle i32 %67, 3
  br i1 %68, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %69 = load i32, i32* %i, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %i, align 4
  %71 = load i32, i32* %i, align 4
  %72 = getelementptr %array, %array* %a, i32 0, i32 2
  %73 = load %dimension_descriptor*, %dimension_descriptor** %72, align 8
  %74 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %73, i32 0
  %75 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 %71, %76
  %78 = mul i32 1, %77
  %79 = add i32 0, %78
  %80 = getelementptr %dimension_descriptor, %dimension_descriptor* %74, i32 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = mul i32 1, %81
  %83 = getelementptr %array, %array* %a, i32 0, i32 0
  %84 = load double*, double** %83, align 8
  %85 = getelementptr inbounds double, double* %84, i32 %79
  %86 = load i32, i32* %i, align 4
  %87 = add i32 %86, 10
  %88 = sitofp i32 %87 to double
  store double %88, double* %85, align 8
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %89 = getelementptr %array, %array* %a, i32 0, i32 2
  %90 = load %dimension_descriptor*, %dimension_descriptor** %89, align 8
  %91 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %90, i32 0
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = sub i32 1, %93
  %95 = mul i32 1, %94
  %96 = add i32 0, %95
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = mul i32 1, %98
  %100 = getelementptr %array, %array* %a, i32 0, i32 0
  %101 = load double*, double** %100, align 8
  %102 = getelementptr inbounds double, double* %101, i32 %96
  %103 = load double, double* %102, align 8
  %104 = fcmp une double %103, 1.100000e+01
  br i1 %104, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %105 = getelementptr %array, %array* %a, i32 0, i32 2
  %106 = load %dimension_descriptor*, %dimension_descriptor** %105, align 8
  %107 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %106, i32 0
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 2, %109
  %111 = mul i32 1, %110
  %112 = add i32 0, %111
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = mul i32 1, %114
  %116 = getelementptr %array, %array* %a, i32 0, i32 0
  %117 = load double*, double** %116, align 8
  %118 = getelementptr inbounds double, double* %117, i32 %112
  %119 = load double, double* %118, align 8
  %120 = fcmp une double %119, 1.200000e+01
  br i1 %120, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %121 = getelementptr %array, %array* %a, i32 0, i32 2
  %122 = load %dimension_descriptor*, %dimension_descriptor** %121, align 8
  %123 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %122, i32 0
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 3, %125
  %127 = mul i32 1, %126
  %128 = add i32 0, %127
  %129 = getelementptr %dimension_descriptor, %dimension_descriptor* %123, i32 0, i32 3
  %130 = load i32, i32* %129, align 4
  %131 = mul i32 1, %130
  %132 = getelementptr %array, %array* %a, i32 0, i32 0
  %133 = load double*, double** %132, align 8
  %134 = getelementptr inbounds double, double* %133, i32 %128
  %135 = load double, double* %134, align 8
  %136 = fcmp une double %135, 1.300000e+01
  br i1 %136, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %137 = load i32, i32* %i, align 4
  %138 = add i32 %137, 1
  %139 = icmp sle i32 %138, 14
  br i1 %139, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %140 = load i32, i32* %i, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %i, align 4
  %142 = load i32, i32* %i, align 4
  %143 = sub i32 %142, 10
  %144 = getelementptr %array, %array* %b, i32 0, i32 2
  %145 = load %dimension_descriptor*, %dimension_descriptor** %144, align 8
  %146 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %145, i32 0
  %147 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = sub i32 %143, %148
  %150 = mul i32 1, %149
  %151 = add i32 0, %150
  %152 = getelementptr %dimension_descriptor, %dimension_descriptor* %146, i32 0, i32 3
  %153 = load i32, i32* %152, align 4
  %154 = mul i32 1, %153
  %155 = getelementptr %array, %array* %b, i32 0, i32 0
  %156 = load double*, double** %155, align 8
  %157 = getelementptr inbounds double, double* %156, i32 %151
  %158 = load i32, i32* %i, align 4
  %159 = sitofp i32 %158 to double
  store double %159, double* %157, align 8
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %160 = getelementptr %array, %array* %b, i32 0, i32 2
  %161 = load %dimension_descriptor*, %dimension_descriptor** %160, align 8
  %162 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %161, i32 0
  %163 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 1, %164
  %166 = mul i32 1, %165
  %167 = add i32 0, %166
  %168 = getelementptr %dimension_descriptor, %dimension_descriptor* %162, i32 0, i32 3
  %169 = load i32, i32* %168, align 4
  %170 = mul i32 1, %169
  %171 = getelementptr %array, %array* %b, i32 0, i32 0
  %172 = load double*, double** %171, align 8
  %173 = getelementptr inbounds double, double* %172, i32 %167
  %174 = load double, double* %173, align 8
  %175 = fcmp une double %174, 1.100000e+01
  br i1 %175, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %176 = getelementptr %array, %array* %b, i32 0, i32 2
  %177 = load %dimension_descriptor*, %dimension_descriptor** %176, align 8
  %178 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %177, i32 0
  %179 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = sub i32 2, %180
  %182 = mul i32 1, %181
  %183 = add i32 0, %182
  %184 = getelementptr %dimension_descriptor, %dimension_descriptor* %178, i32 0, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = mul i32 1, %185
  %187 = getelementptr %array, %array* %b, i32 0, i32 0
  %188 = load double*, double** %187, align 8
  %189 = getelementptr inbounds double, double* %188, i32 %183
  %190 = load double, double* %189, align 8
  %191 = fcmp une double %190, 1.200000e+01
  br i1 %191, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %192 = getelementptr %array, %array* %b, i32 0, i32 2
  %193 = load %dimension_descriptor*, %dimension_descriptor** %192, align 8
  %194 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %193, i32 0
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = sub i32 3, %196
  %198 = mul i32 1, %197
  %199 = add i32 0, %198
  %200 = getelementptr %dimension_descriptor, %dimension_descriptor* %194, i32 0, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = mul i32 1, %201
  %203 = getelementptr %array, %array* %b, i32 0, i32 0
  %204 = load double*, double** %203, align 8
  %205 = getelementptr inbounds double, double* %204, i32 %199
  %206 = load double, double* %205, align 8
  %207 = fcmp une double %206, 1.300000e+01
  br i1 %207, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %208 = getelementptr %array, %array* %b, i32 0, i32 2
  %209 = load %dimension_descriptor*, %dimension_descriptor** %208, align 8
  %210 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %209, i32 0
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = sub i32 4, %212
  %214 = mul i32 1, %213
  %215 = add i32 0, %214
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 3
  %217 = load i32, i32* %216, align 4
  %218 = mul i32 1, %217
  %219 = getelementptr %array, %array* %b, i32 0, i32 0
  %220 = load double*, double** %219, align 8
  %221 = getelementptr inbounds double, double* %220, i32 %215
  %222 = load double, double* %221, align 8
  %223 = fcmp une double %222, 1.400000e+01
  br i1 %223, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %224 = load i32, i32* %i, align 4
  %225 = add i32 %224, 1
  %226 = icmp sle i32 %225, 3
  br i1 %226, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %227 = load i32, i32* %i, align 4
  %228 = add i32 %227, 1
  store i32 %228, i32* %i, align 4
  %229 = load i32, i32* %i, align 4
  %230 = getelementptr %array, %array* %b, i32 0, i32 2
  %231 = load %dimension_descriptor*, %dimension_descriptor** %230, align 8
  %232 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %231, i32 0
  %233 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = sub i32 %229, %234
  %236 = mul i32 1, %235
  %237 = add i32 0, %236
  %238 = getelementptr %dimension_descriptor, %dimension_descriptor* %232, i32 0, i32 3
  %239 = load i32, i32* %238, align 4
  %240 = mul i32 1, %239
  %241 = getelementptr %array, %array* %b, i32 0, i32 0
  %242 = load double*, double** %241, align 8
  %243 = getelementptr inbounds double, double* %242, i32 %237
  %244 = load i32, i32* %i, align 4
  %245 = getelementptr %array, %array* %a, i32 0, i32 2
  %246 = load %dimension_descriptor*, %dimension_descriptor** %245, align 8
  %247 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %246, i32 0
  %248 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = sub i32 %244, %249
  %251 = mul i32 1, %250
  %252 = add i32 0, %251
  %253 = getelementptr %dimension_descriptor, %dimension_descriptor* %247, i32 0, i32 3
  %254 = load i32, i32* %253, align 4
  %255 = mul i32 1, %254
  %256 = getelementptr %array, %array* %a, i32 0, i32 0
  %257 = load double*, double** %256, align 8
  %258 = getelementptr inbounds double, double* %257, i32 %252
  %259 = load double, double* %258, align 8
  %260 = fsub double %259, 1.000000e+01
  store double %260, double* %243, align 8
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %261 = getelementptr %array, %array* %b, i32 0, i32 2
  %262 = load %dimension_descriptor*, %dimension_descriptor** %261, align 8
  %263 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %262, i32 0
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = sub i32 1, %265
  %267 = mul i32 1, %266
  %268 = add i32 0, %267
  %269 = getelementptr %dimension_descriptor, %dimension_descriptor* %263, i32 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = mul i32 1, %270
  %272 = getelementptr %array, %array* %b, i32 0, i32 0
  %273 = load double*, double** %272, align 8
  %274 = getelementptr inbounds double, double* %273, i32 %268
  %275 = load double, double* %274, align 8
  %276 = fcmp une double %275, 1.000000e+00
  br i1 %276, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %277 = getelementptr %array, %array* %b, i32 0, i32 2
  %278 = load %dimension_descriptor*, %dimension_descriptor** %277, align 8
  %279 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %278, i32 0
  %280 = getelementptr %dimension_descriptor, %dimension_descriptor* %279, i32 0, i32 1
  %281 = load i32, i32* %280, align 4
  %282 = sub i32 2, %281
  %283 = mul i32 1, %282
  %284 = add i32 0, %283
  %285 = getelementptr %dimension_descriptor, %dimension_descriptor* %279, i32 0, i32 3
  %286 = load i32, i32* %285, align 4
  %287 = mul i32 1, %286
  %288 = getelementptr %array, %array* %b, i32 0, i32 0
  %289 = load double*, double** %288, align 8
  %290 = getelementptr inbounds double, double* %289, i32 %284
  %291 = load double, double* %290, align 8
  %292 = fcmp une double %291, 2.000000e+00
  br i1 %292, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %293 = getelementptr %array, %array* %b, i32 0, i32 2
  %294 = load %dimension_descriptor*, %dimension_descriptor** %293, align 8
  %295 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %294, i32 0
  %296 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = sub i32 3, %297
  %299 = mul i32 1, %298
  %300 = add i32 0, %299
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %295, i32 0, i32 3
  %302 = load i32, i32* %301, align 4
  %303 = mul i32 1, %302
  %304 = getelementptr %array, %array* %b, i32 0, i32 0
  %305 = load double*, double** %304, align 8
  %306 = getelementptr inbounds double, double* %305, i32 %300
  %307 = load double, double* %306, align 8
  %308 = fcmp une double %307, 3.000000e+00
  br i1 %308, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %309 = getelementptr %array, %array* %b, i32 0, i32 2
  %310 = load %dimension_descriptor*, %dimension_descriptor** %309, align 8
  %311 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %310, i32 0
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %311, i32 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = sub i32 4, %313
  %315 = mul i32 1, %314
  %316 = add i32 0, %315
  %317 = getelementptr %dimension_descriptor, %dimension_descriptor* %311, i32 0, i32 3
  %318 = load i32, i32* %317, align 4
  %319 = mul i32 1, %318
  %320 = getelementptr %array, %array* %b, i32 0, i32 0
  %321 = load double*, double** %320, align 8
  %322 = getelementptr inbounds double, double* %321, i32 %316
  %323 = getelementptr %array, %array* %b, i32 0, i32 2
  %324 = load %dimension_descriptor*, %dimension_descriptor** %323, align 8
  %325 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %324, i32 0
  %326 = getelementptr %dimension_descriptor, %dimension_descriptor* %325, i32 0, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = sub i32 1, %327
  %329 = mul i32 1, %328
  %330 = add i32 0, %329
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %325, i32 0, i32 3
  %332 = load i32, i32* %331, align 4
  %333 = mul i32 1, %332
  %334 = getelementptr %array, %array* %b, i32 0, i32 0
  %335 = load double*, double** %334, align 8
  %336 = getelementptr inbounds double, double* %335, i32 %330
  %337 = load double, double* %336, align 8
  %338 = getelementptr %array, %array* %b, i32 0, i32 2
  %339 = load %dimension_descriptor*, %dimension_descriptor** %338, align 8
  %340 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %339, i32 0
  %341 = getelementptr %dimension_descriptor, %dimension_descriptor* %340, i32 0, i32 1
  %342 = load i32, i32* %341, align 4
  %343 = sub i32 2, %342
  %344 = mul i32 1, %343
  %345 = add i32 0, %344
  %346 = getelementptr %dimension_descriptor, %dimension_descriptor* %340, i32 0, i32 3
  %347 = load i32, i32* %346, align 4
  %348 = mul i32 1, %347
  %349 = getelementptr %array, %array* %b, i32 0, i32 0
  %350 = load double*, double** %349, align 8
  %351 = getelementptr inbounds double, double* %350, i32 %345
  %352 = load double, double* %351, align 8
  %353 = fadd double %337, %352
  %354 = getelementptr %array, %array* %b, i32 0, i32 2
  %355 = load %dimension_descriptor*, %dimension_descriptor** %354, align 8
  %356 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %355, i32 0
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = sub i32 3, %358
  %360 = mul i32 1, %359
  %361 = add i32 0, %360
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 3
  %363 = load i32, i32* %362, align 4
  %364 = mul i32 1, %363
  %365 = getelementptr %array, %array* %b, i32 0, i32 0
  %366 = load double*, double** %365, align 8
  %367 = getelementptr inbounds double, double* %366, i32 %361
  %368 = load double, double* %367, align 8
  %369 = fadd double %353, %368
  %370 = getelementptr %array, %array* %a, i32 0, i32 2
  %371 = load %dimension_descriptor*, %dimension_descriptor** %370, align 8
  %372 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %371, i32 0
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = sub i32 1, %374
  %376 = mul i32 1, %375
  %377 = add i32 0, %376
  %378 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 3
  %379 = load i32, i32* %378, align 4
  %380 = mul i32 1, %379
  %381 = getelementptr %array, %array* %a, i32 0, i32 0
  %382 = load double*, double** %381, align 8
  %383 = getelementptr inbounds double, double* %382, i32 %377
  %384 = load double, double* %383, align 8
  %385 = fadd double %369, %384
  store double %385, double* %322, align 8
  %386 = getelementptr %array, %array* %b, i32 0, i32 2
  %387 = load %dimension_descriptor*, %dimension_descriptor** %386, align 8
  %388 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %387, i32 0
  %389 = getelementptr %dimension_descriptor, %dimension_descriptor* %388, i32 0, i32 1
  %390 = load i32, i32* %389, align 4
  %391 = sub i32 4, %390
  %392 = mul i32 1, %391
  %393 = add i32 0, %392
  %394 = getelementptr %dimension_descriptor, %dimension_descriptor* %388, i32 0, i32 3
  %395 = load i32, i32* %394, align 4
  %396 = mul i32 1, %395
  %397 = getelementptr %array, %array* %b, i32 0, i32 0
  %398 = load double*, double** %397, align 8
  %399 = getelementptr inbounds double, double* %398, i32 %393
  %400 = load double, double* %399, align 8
  %401 = fcmp une double %400, 1.700000e+01
  br i1 %401, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %402 = getelementptr %array, %array* %b, i32 0, i32 2
  %403 = load %dimension_descriptor*, %dimension_descriptor** %402, align 8
  %404 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %403, i32 0
  %405 = getelementptr %dimension_descriptor, %dimension_descriptor* %404, i32 0, i32 1
  %406 = load i32, i32* %405, align 4
  %407 = sub i32 4, %406
  %408 = mul i32 1, %407
  %409 = add i32 0, %408
  %410 = getelementptr %dimension_descriptor, %dimension_descriptor* %404, i32 0, i32 3
  %411 = load i32, i32* %410, align 4
  %412 = mul i32 1, %411
  %413 = getelementptr %array, %array* %b, i32 0, i32 0
  %414 = load double*, double** %413, align 8
  %415 = getelementptr inbounds double, double* %414, i32 %409
  %416 = getelementptr %array, %array* %a, i32 0, i32 2
  %417 = load %dimension_descriptor*, %dimension_descriptor** %416, align 8
  %418 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %417, i32 0
  %419 = getelementptr %dimension_descriptor, %dimension_descriptor* %418, i32 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = sub i32 1, %420
  %422 = mul i32 1, %421
  %423 = add i32 0, %422
  %424 = getelementptr %dimension_descriptor, %dimension_descriptor* %418, i32 0, i32 3
  %425 = load i32, i32* %424, align 4
  %426 = mul i32 1, %425
  %427 = getelementptr %array, %array* %a, i32 0, i32 0
  %428 = load double*, double** %427, align 8
  %429 = getelementptr inbounds double, double* %428, i32 %423
  %430 = load double, double* %429, align 8
  store double %430, double* %415, align 8
  %431 = getelementptr %array, %array* %b, i32 0, i32 2
  %432 = load %dimension_descriptor*, %dimension_descriptor** %431, align 8
  %433 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %432, i32 0
  %434 = getelementptr %dimension_descriptor, %dimension_descriptor* %433, i32 0, i32 1
  %435 = load i32, i32* %434, align 4
  %436 = sub i32 4, %435
  %437 = mul i32 1, %436
  %438 = add i32 0, %437
  %439 = getelementptr %dimension_descriptor, %dimension_descriptor* %433, i32 0, i32 3
  %440 = load i32, i32* %439, align 4
  %441 = mul i32 1, %440
  %442 = getelementptr %array, %array* %b, i32 0, i32 0
  %443 = load double*, double** %442, align 8
  %444 = getelementptr inbounds double, double* %443, i32 %438
  %445 = load double, double* %444, align 8
  %446 = fcmp une double %445, 1.100000e+01
  br i1 %446, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %447 = load i32, i32* %i, align 4
  %448 = add i32 %447, 1
  %449 = icmp sle i32 %448, 2
  br i1 %449, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %450 = load i32, i32* %i, align 4
  %451 = add i32 %450, 1
  store i32 %451, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %452 = load i32, i32* %j, align 4
  %453 = add i32 %452, 1
  %454 = icmp sle i32 %453, 2
  br i1 %454, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %455 = load i32, i32* %j, align 4
  %456 = add i32 %455, 1
  store i32 %456, i32* %j, align 4
  %457 = load i32, i32* %i, align 4
  %458 = load i32, i32* %j, align 4
  %459 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %460 = load %dimension_descriptor*, %dimension_descriptor** %459, align 8
  %461 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %460, i32 0
  %462 = getelementptr %dimension_descriptor, %dimension_descriptor* %461, i32 0, i32 1
  %463 = load i32, i32* %462, align 4
  %464 = sub i32 %457, %463
  %465 = mul i32 1, %464
  %466 = add i32 0, %465
  %467 = getelementptr %dimension_descriptor, %dimension_descriptor* %461, i32 0, i32 3
  %468 = load i32, i32* %467, align 4
  %469 = mul i32 1, %468
  %470 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %460, i32 1
  %471 = getelementptr %dimension_descriptor, %dimension_descriptor* %470, i32 0, i32 1
  %472 = load i32, i32* %471, align 4
  %473 = sub i32 %458, %472
  %474 = mul i32 %469, %473
  %475 = add i32 %466, %474
  %476 = getelementptr %dimension_descriptor, %dimension_descriptor* %470, i32 0, i32 3
  %477 = load i32, i32* %476, align 4
  %478 = mul i32 %469, %477
  %479 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %480 = load double*, double** %479, align 8
  %481 = getelementptr inbounds double, double* %480, i32 %475
  %482 = load i32, i32* %i, align 4
  %483 = load i32, i32* %j, align 4
  %484 = add i32 %482, %483
  %485 = add i32 %484, 10
  %486 = sitofp i32 %485 to double
  store double %486, double* %481, align 8
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %487 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %488 = load %dimension_descriptor*, %dimension_descriptor** %487, align 8
  %489 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %488, i32 0
  %490 = getelementptr %dimension_descriptor, %dimension_descriptor* %489, i32 0, i32 1
  %491 = load i32, i32* %490, align 4
  %492 = sub i32 1, %491
  %493 = mul i32 1, %492
  %494 = add i32 0, %493
  %495 = getelementptr %dimension_descriptor, %dimension_descriptor* %489, i32 0, i32 3
  %496 = load i32, i32* %495, align 4
  %497 = mul i32 1, %496
  %498 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %488, i32 1
  %499 = getelementptr %dimension_descriptor, %dimension_descriptor* %498, i32 0, i32 1
  %500 = load i32, i32* %499, align 4
  %501 = sub i32 1, %500
  %502 = mul i32 %497, %501
  %503 = add i32 %494, %502
  %504 = getelementptr %dimension_descriptor, %dimension_descriptor* %498, i32 0, i32 3
  %505 = load i32, i32* %504, align 4
  %506 = mul i32 %497, %505
  %507 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %508 = load double*, double** %507, align 8
  %509 = getelementptr inbounds double, double* %508, i32 %503
  %510 = load double, double* %509, align 8
  %511 = fcmp une double %510, 1.200000e+01
  br i1 %511, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %512 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %513 = load %dimension_descriptor*, %dimension_descriptor** %512, align 8
  %514 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %513, i32 0
  %515 = getelementptr %dimension_descriptor, %dimension_descriptor* %514, i32 0, i32 1
  %516 = load i32, i32* %515, align 4
  %517 = sub i32 1, %516
  %518 = mul i32 1, %517
  %519 = add i32 0, %518
  %520 = getelementptr %dimension_descriptor, %dimension_descriptor* %514, i32 0, i32 3
  %521 = load i32, i32* %520, align 4
  %522 = mul i32 1, %521
  %523 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %513, i32 1
  %524 = getelementptr %dimension_descriptor, %dimension_descriptor* %523, i32 0, i32 1
  %525 = load i32, i32* %524, align 4
  %526 = sub i32 2, %525
  %527 = mul i32 %522, %526
  %528 = add i32 %519, %527
  %529 = getelementptr %dimension_descriptor, %dimension_descriptor* %523, i32 0, i32 3
  %530 = load i32, i32* %529, align 4
  %531 = mul i32 %522, %530
  %532 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %533 = load double*, double** %532, align 8
  %534 = getelementptr inbounds double, double* %533, i32 %528
  %535 = load double, double* %534, align 8
  %536 = fcmp une double %535, 1.300000e+01
  br i1 %536, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %537 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %538 = load %dimension_descriptor*, %dimension_descriptor** %537, align 8
  %539 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %538, i32 0
  %540 = getelementptr %dimension_descriptor, %dimension_descriptor* %539, i32 0, i32 1
  %541 = load i32, i32* %540, align 4
  %542 = sub i32 2, %541
  %543 = mul i32 1, %542
  %544 = add i32 0, %543
  %545 = getelementptr %dimension_descriptor, %dimension_descriptor* %539, i32 0, i32 3
  %546 = load i32, i32* %545, align 4
  %547 = mul i32 1, %546
  %548 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %538, i32 1
  %549 = getelementptr %dimension_descriptor, %dimension_descriptor* %548, i32 0, i32 1
  %550 = load i32, i32* %549, align 4
  %551 = sub i32 1, %550
  %552 = mul i32 %547, %551
  %553 = add i32 %544, %552
  %554 = getelementptr %dimension_descriptor, %dimension_descriptor* %548, i32 0, i32 3
  %555 = load i32, i32* %554, align 4
  %556 = mul i32 %547, %555
  %557 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %558 = load double*, double** %557, align 8
  %559 = getelementptr inbounds double, double* %558, i32 %553
  %560 = load double, double* %559, align 8
  %561 = fcmp une double %560, 1.300000e+01
  br i1 %561, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %562 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %563 = load %dimension_descriptor*, %dimension_descriptor** %562, align 8
  %564 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %563, i32 0
  %565 = getelementptr %dimension_descriptor, %dimension_descriptor* %564, i32 0, i32 1
  %566 = load i32, i32* %565, align 4
  %567 = sub i32 2, %566
  %568 = mul i32 1, %567
  %569 = add i32 0, %568
  %570 = getelementptr %dimension_descriptor, %dimension_descriptor* %564, i32 0, i32 3
  %571 = load i32, i32* %570, align 4
  %572 = mul i32 1, %571
  %573 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %563, i32 1
  %574 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 1
  %575 = load i32, i32* %574, align 4
  %576 = sub i32 2, %575
  %577 = mul i32 %572, %576
  %578 = add i32 %569, %577
  %579 = getelementptr %dimension_descriptor, %dimension_descriptor* %573, i32 0, i32 3
  %580 = load i32, i32* %579, align 4
  %581 = mul i32 %572, %580
  %582 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %583 = load double*, double** %582, align 8
  %584 = getelementptr inbounds double, double* %583, i32 %578
  %585 = load double, double* %584, align 8
  %586 = fcmp une double %585, 1.400000e+01
  br i1 %586, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
