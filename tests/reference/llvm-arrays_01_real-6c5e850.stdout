; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { double*, i32, [1 x %dimension_descriptor], i1 }
%dimension_descriptor = type { i32, i32, i32, i32 }
%array.0 = type { double*, i32, [2 x %dimension_descriptor], i1 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@15 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = alloca i32, align 4
  store i32 3, i32* %11, align 4
  %12 = getelementptr %array, %array* %a, i32 0, i32 0
  %13 = load i32, i32* %11, align 4
  %14 = alloca double, i32 %13, align 8
  store double* %14, double** %12, align 8
  %b = alloca %array, align 8
  %15 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr %array, %array* %b, i32 0, i32 2
  %17 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 3
  store i32 1, i32* %18, align 4
  store i32 1, i32* %19, align 4
  store i32 4, i32* %20, align 4
  %22 = load i32, i32* %20, align 4
  %23 = load i32, i32* %19, align 4
  %24 = sub i32 %22, %23
  %25 = add i32 %24, 1
  store i32 %25, i32* %21, align 4
  %26 = alloca i32, align 4
  store i32 4, i32* %26, align 4
  %27 = getelementptr %array, %array* %b, i32 0, i32 0
  %28 = load i32, i32* %26, align 4
  %29 = alloca double, i32 %28, align 8
  store double* %29, double** %27, align 8
  %c = alloca %array.0, align 8
  %30 = getelementptr %array.0, %array.0* %c, i32 0, i32 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %32 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %31, i32 0, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 0
  %34 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %35 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 2
  %36 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 3
  store i32 1, i32* %33, align 4
  store i32 1, i32* %34, align 4
  store i32 2, i32* %35, align 4
  %37 = load i32, i32* %35, align 4
  %38 = load i32, i32* %34, align 4
  %39 = sub i32 %37, %38
  %40 = add i32 %39, 1
  store i32 %40, i32* %36, align 4
  %41 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %31, i32 0, i32 1
  %42 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 0
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 1
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 2
  %45 = getelementptr %dimension_descriptor, %dimension_descriptor* %41, i32 0, i32 3
  store i32 1, i32* %42, align 4
  store i32 1, i32* %43, align 4
  store i32 2, i32* %44, align 4
  %46 = load i32, i32* %44, align 4
  %47 = load i32, i32* %43, align 4
  %48 = sub i32 %46, %47
  %49 = add i32 %48, 1
  store i32 %49, i32* %45, align 4
  %50 = alloca i32, align 4
  store i32 4, i32* %50, align 4
  %51 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %52 = load i32, i32* %50, align 4
  %53 = alloca double, i32 %52, align 8
  store double* %53, double** %51, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %54 = load i32, i32* %i, align 4
  %55 = add i32 %54, 1
  %56 = icmp sle i32 %55, 3
  br i1 %56, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %57 = load i32, i32* %i, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %i, align 4
  %59 = load i32, i32* %i, align 4
  %60 = getelementptr %array, %array* %a, i32 0, i32 2
  %61 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %60, i32 0, i32 0
  %62 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 %59, %63
  %65 = mul i32 1, %64
  %66 = add i32 0, %65
  %67 = getelementptr %dimension_descriptor, %dimension_descriptor* %61, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = mul i32 1, %68
  %70 = getelementptr %array, %array* %a, i32 0, i32 0
  %71 = load double*, double** %70, align 8
  %72 = getelementptr inbounds double, double* %71, i32 %66
  %73 = load i32, i32* %i, align 4
  %74 = add i32 %73, 10
  %75 = sitofp i32 %74 to double
  store double %75, double* %72, align 8
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %76 = getelementptr %array, %array* %a, i32 0, i32 2
  %77 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %76, i32 0, i32 0
  %78 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sub i32 1, %79
  %81 = mul i32 1, %80
  %82 = add i32 0, %81
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %77, i32 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = mul i32 1, %84
  %86 = getelementptr %array, %array* %a, i32 0, i32 0
  %87 = load double*, double** %86, align 8
  %88 = getelementptr inbounds double, double* %87, i32 %82
  %89 = load double, double* %88, align 8
  %90 = fcmp une double %89, 1.100000e+01
  br i1 %90, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %91 = getelementptr %array, %array* %a, i32 0, i32 2
  %92 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %91, i32 0, i32 0
  %93 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sub i32 2, %94
  %96 = mul i32 1, %95
  %97 = add i32 0, %96
  %98 = getelementptr %dimension_descriptor, %dimension_descriptor* %92, i32 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = mul i32 1, %99
  %101 = getelementptr %array, %array* %a, i32 0, i32 0
  %102 = load double*, double** %101, align 8
  %103 = getelementptr inbounds double, double* %102, i32 %97
  %104 = load double, double* %103, align 8
  %105 = fcmp une double %104, 1.200000e+01
  br i1 %105, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %106 = getelementptr %array, %array* %a, i32 0, i32 2
  %107 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %106, i32 0, i32 0
  %108 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = sub i32 3, %109
  %111 = mul i32 1, %110
  %112 = add i32 0, %111
  %113 = getelementptr %dimension_descriptor, %dimension_descriptor* %107, i32 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = mul i32 1, %114
  %116 = getelementptr %array, %array* %a, i32 0, i32 0
  %117 = load double*, double** %116, align 8
  %118 = getelementptr inbounds double, double* %117, i32 %112
  %119 = load double, double* %118, align 8
  %120 = fcmp une double %119, 1.300000e+01
  br i1 %120, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %121 = load i32, i32* %i, align 4
  %122 = add i32 %121, 1
  %123 = icmp sle i32 %122, 14
  br i1 %123, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %124 = load i32, i32* %i, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %i, align 4
  %126 = load i32, i32* %i, align 4
  %127 = sub i32 %126, 10
  %128 = getelementptr %array, %array* %b, i32 0, i32 2
  %129 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %128, i32 0, i32 0
  %130 = getelementptr %dimension_descriptor, %dimension_descriptor* %129, i32 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = sub i32 %127, %131
  %133 = mul i32 1, %132
  %134 = add i32 0, %133
  %135 = getelementptr %dimension_descriptor, %dimension_descriptor* %129, i32 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = mul i32 1, %136
  %138 = getelementptr %array, %array* %b, i32 0, i32 0
  %139 = load double*, double** %138, align 8
  %140 = getelementptr inbounds double, double* %139, i32 %134
  %141 = load i32, i32* %i, align 4
  %142 = sitofp i32 %141 to double
  store double %142, double* %140, align 8
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %143 = getelementptr %array, %array* %b, i32 0, i32 2
  %144 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %143, i32 0, i32 0
  %145 = getelementptr %dimension_descriptor, %dimension_descriptor* %144, i32 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = sub i32 1, %146
  %148 = mul i32 1, %147
  %149 = add i32 0, %148
  %150 = getelementptr %dimension_descriptor, %dimension_descriptor* %144, i32 0, i32 3
  %151 = load i32, i32* %150, align 4
  %152 = mul i32 1, %151
  %153 = getelementptr %array, %array* %b, i32 0, i32 0
  %154 = load double*, double** %153, align 8
  %155 = getelementptr inbounds double, double* %154, i32 %149
  %156 = load double, double* %155, align 8
  %157 = fcmp une double %156, 1.100000e+01
  br i1 %157, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %158 = getelementptr %array, %array* %b, i32 0, i32 2
  %159 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %158, i32 0, i32 0
  %160 = getelementptr %dimension_descriptor, %dimension_descriptor* %159, i32 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = sub i32 2, %161
  %163 = mul i32 1, %162
  %164 = add i32 0, %163
  %165 = getelementptr %dimension_descriptor, %dimension_descriptor* %159, i32 0, i32 3
  %166 = load i32, i32* %165, align 4
  %167 = mul i32 1, %166
  %168 = getelementptr %array, %array* %b, i32 0, i32 0
  %169 = load double*, double** %168, align 8
  %170 = getelementptr inbounds double, double* %169, i32 %164
  %171 = load double, double* %170, align 8
  %172 = fcmp une double %171, 1.200000e+01
  br i1 %172, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %173 = getelementptr %array, %array* %b, i32 0, i32 2
  %174 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %173, i32 0, i32 0
  %175 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = sub i32 3, %176
  %178 = mul i32 1, %177
  %179 = add i32 0, %178
  %180 = getelementptr %dimension_descriptor, %dimension_descriptor* %174, i32 0, i32 3
  %181 = load i32, i32* %180, align 4
  %182 = mul i32 1, %181
  %183 = getelementptr %array, %array* %b, i32 0, i32 0
  %184 = load double*, double** %183, align 8
  %185 = getelementptr inbounds double, double* %184, i32 %179
  %186 = load double, double* %185, align 8
  %187 = fcmp une double %186, 1.300000e+01
  br i1 %187, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %188 = getelementptr %array, %array* %b, i32 0, i32 2
  %189 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %188, i32 0, i32 0
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = sub i32 4, %191
  %193 = mul i32 1, %192
  %194 = add i32 0, %193
  %195 = getelementptr %dimension_descriptor, %dimension_descriptor* %189, i32 0, i32 3
  %196 = load i32, i32* %195, align 4
  %197 = mul i32 1, %196
  %198 = getelementptr %array, %array* %b, i32 0, i32 0
  %199 = load double*, double** %198, align 8
  %200 = getelementptr inbounds double, double* %199, i32 %194
  %201 = load double, double* %200, align 8
  %202 = fcmp une double %201, 1.400000e+01
  br i1 %202, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %203 = load i32, i32* %i, align 4
  %204 = add i32 %203, 1
  %205 = icmp sle i32 %204, 3
  br i1 %205, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %206 = load i32, i32* %i, align 4
  %207 = add i32 %206, 1
  store i32 %207, i32* %i, align 4
  %208 = load i32, i32* %i, align 4
  %209 = getelementptr %array, %array* %b, i32 0, i32 2
  %210 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %209, i32 0, i32 0
  %211 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 1
  %212 = load i32, i32* %211, align 4
  %213 = sub i32 %208, %212
  %214 = mul i32 1, %213
  %215 = add i32 0, %214
  %216 = getelementptr %dimension_descriptor, %dimension_descriptor* %210, i32 0, i32 3
  %217 = load i32, i32* %216, align 4
  %218 = mul i32 1, %217
  %219 = getelementptr %array, %array* %b, i32 0, i32 0
  %220 = load double*, double** %219, align 8
  %221 = getelementptr inbounds double, double* %220, i32 %215
  %222 = load i32, i32* %i, align 4
  %223 = getelementptr %array, %array* %a, i32 0, i32 2
  %224 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %223, i32 0, i32 0
  %225 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = sub i32 %222, %226
  %228 = mul i32 1, %227
  %229 = add i32 0, %228
  %230 = getelementptr %dimension_descriptor, %dimension_descriptor* %224, i32 0, i32 3
  %231 = load i32, i32* %230, align 4
  %232 = mul i32 1, %231
  %233 = getelementptr %array, %array* %a, i32 0, i32 0
  %234 = load double*, double** %233, align 8
  %235 = getelementptr inbounds double, double* %234, i32 %229
  %236 = load double, double* %235, align 8
  %237 = fsub double %236, 1.000000e+01
  store double %237, double* %221, align 8
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %238 = getelementptr %array, %array* %b, i32 0, i32 2
  %239 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %238, i32 0, i32 0
  %240 = getelementptr %dimension_descriptor, %dimension_descriptor* %239, i32 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = sub i32 1, %241
  %243 = mul i32 1, %242
  %244 = add i32 0, %243
  %245 = getelementptr %dimension_descriptor, %dimension_descriptor* %239, i32 0, i32 3
  %246 = load i32, i32* %245, align 4
  %247 = mul i32 1, %246
  %248 = getelementptr %array, %array* %b, i32 0, i32 0
  %249 = load double*, double** %248, align 8
  %250 = getelementptr inbounds double, double* %249, i32 %244
  %251 = load double, double* %250, align 8
  %252 = fcmp une double %251, 1.000000e+00
  br i1 %252, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %253 = getelementptr %array, %array* %b, i32 0, i32 2
  %254 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %253, i32 0, i32 0
  %255 = getelementptr %dimension_descriptor, %dimension_descriptor* %254, i32 0, i32 1
  %256 = load i32, i32* %255, align 4
  %257 = sub i32 2, %256
  %258 = mul i32 1, %257
  %259 = add i32 0, %258
  %260 = getelementptr %dimension_descriptor, %dimension_descriptor* %254, i32 0, i32 3
  %261 = load i32, i32* %260, align 4
  %262 = mul i32 1, %261
  %263 = getelementptr %array, %array* %b, i32 0, i32 0
  %264 = load double*, double** %263, align 8
  %265 = getelementptr inbounds double, double* %264, i32 %259
  %266 = load double, double* %265, align 8
  %267 = fcmp une double %266, 2.000000e+00
  br i1 %267, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %268 = getelementptr %array, %array* %b, i32 0, i32 2
  %269 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %268, i32 0, i32 0
  %270 = getelementptr %dimension_descriptor, %dimension_descriptor* %269, i32 0, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = sub i32 3, %271
  %273 = mul i32 1, %272
  %274 = add i32 0, %273
  %275 = getelementptr %dimension_descriptor, %dimension_descriptor* %269, i32 0, i32 3
  %276 = load i32, i32* %275, align 4
  %277 = mul i32 1, %276
  %278 = getelementptr %array, %array* %b, i32 0, i32 0
  %279 = load double*, double** %278, align 8
  %280 = getelementptr inbounds double, double* %279, i32 %274
  %281 = load double, double* %280, align 8
  %282 = fcmp une double %281, 3.000000e+00
  br i1 %282, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %283 = getelementptr %array, %array* %b, i32 0, i32 2
  %284 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %283, i32 0, i32 0
  %285 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 1
  %286 = load i32, i32* %285, align 4
  %287 = sub i32 4, %286
  %288 = mul i32 1, %287
  %289 = add i32 0, %288
  %290 = getelementptr %dimension_descriptor, %dimension_descriptor* %284, i32 0, i32 3
  %291 = load i32, i32* %290, align 4
  %292 = mul i32 1, %291
  %293 = getelementptr %array, %array* %b, i32 0, i32 0
  %294 = load double*, double** %293, align 8
  %295 = getelementptr inbounds double, double* %294, i32 %289
  %296 = getelementptr %array, %array* %b, i32 0, i32 2
  %297 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %296, i32 0, i32 0
  %298 = getelementptr %dimension_descriptor, %dimension_descriptor* %297, i32 0, i32 1
  %299 = load i32, i32* %298, align 4
  %300 = sub i32 1, %299
  %301 = mul i32 1, %300
  %302 = add i32 0, %301
  %303 = getelementptr %dimension_descriptor, %dimension_descriptor* %297, i32 0, i32 3
  %304 = load i32, i32* %303, align 4
  %305 = mul i32 1, %304
  %306 = getelementptr %array, %array* %b, i32 0, i32 0
  %307 = load double*, double** %306, align 8
  %308 = getelementptr inbounds double, double* %307, i32 %302
  %309 = load double, double* %308, align 8
  %310 = getelementptr %array, %array* %b, i32 0, i32 2
  %311 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %310, i32 0, i32 0
  %312 = getelementptr %dimension_descriptor, %dimension_descriptor* %311, i32 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = sub i32 2, %313
  %315 = mul i32 1, %314
  %316 = add i32 0, %315
  %317 = getelementptr %dimension_descriptor, %dimension_descriptor* %311, i32 0, i32 3
  %318 = load i32, i32* %317, align 4
  %319 = mul i32 1, %318
  %320 = getelementptr %array, %array* %b, i32 0, i32 0
  %321 = load double*, double** %320, align 8
  %322 = getelementptr inbounds double, double* %321, i32 %316
  %323 = load double, double* %322, align 8
  %324 = fadd double %309, %323
  %325 = getelementptr %array, %array* %b, i32 0, i32 2
  %326 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %325, i32 0, i32 0
  %327 = getelementptr %dimension_descriptor, %dimension_descriptor* %326, i32 0, i32 1
  %328 = load i32, i32* %327, align 4
  %329 = sub i32 3, %328
  %330 = mul i32 1, %329
  %331 = add i32 0, %330
  %332 = getelementptr %dimension_descriptor, %dimension_descriptor* %326, i32 0, i32 3
  %333 = load i32, i32* %332, align 4
  %334 = mul i32 1, %333
  %335 = getelementptr %array, %array* %b, i32 0, i32 0
  %336 = load double*, double** %335, align 8
  %337 = getelementptr inbounds double, double* %336, i32 %331
  %338 = load double, double* %337, align 8
  %339 = fadd double %324, %338
  %340 = getelementptr %array, %array* %a, i32 0, i32 2
  %341 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %340, i32 0, i32 0
  %342 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 1
  %343 = load i32, i32* %342, align 4
  %344 = sub i32 1, %343
  %345 = mul i32 1, %344
  %346 = add i32 0, %345
  %347 = getelementptr %dimension_descriptor, %dimension_descriptor* %341, i32 0, i32 3
  %348 = load i32, i32* %347, align 4
  %349 = mul i32 1, %348
  %350 = getelementptr %array, %array* %a, i32 0, i32 0
  %351 = load double*, double** %350, align 8
  %352 = getelementptr inbounds double, double* %351, i32 %346
  %353 = load double, double* %352, align 8
  %354 = fadd double %339, %353
  store double %354, double* %295, align 8
  %355 = getelementptr %array, %array* %b, i32 0, i32 2
  %356 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %355, i32 0, i32 0
  %357 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = sub i32 4, %358
  %360 = mul i32 1, %359
  %361 = add i32 0, %360
  %362 = getelementptr %dimension_descriptor, %dimension_descriptor* %356, i32 0, i32 3
  %363 = load i32, i32* %362, align 4
  %364 = mul i32 1, %363
  %365 = getelementptr %array, %array* %b, i32 0, i32 0
  %366 = load double*, double** %365, align 8
  %367 = getelementptr inbounds double, double* %366, i32 %361
  %368 = load double, double* %367, align 8
  %369 = fcmp une double %368, 1.700000e+01
  br i1 %369, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %370 = getelementptr %array, %array* %b, i32 0, i32 2
  %371 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %370, i32 0, i32 0
  %372 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 1
  %373 = load i32, i32* %372, align 4
  %374 = sub i32 4, %373
  %375 = mul i32 1, %374
  %376 = add i32 0, %375
  %377 = getelementptr %dimension_descriptor, %dimension_descriptor* %371, i32 0, i32 3
  %378 = load i32, i32* %377, align 4
  %379 = mul i32 1, %378
  %380 = getelementptr %array, %array* %b, i32 0, i32 0
  %381 = load double*, double** %380, align 8
  %382 = getelementptr inbounds double, double* %381, i32 %376
  %383 = getelementptr %array, %array* %a, i32 0, i32 2
  %384 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %383, i32 0, i32 0
  %385 = getelementptr %dimension_descriptor, %dimension_descriptor* %384, i32 0, i32 1
  %386 = load i32, i32* %385, align 4
  %387 = sub i32 1, %386
  %388 = mul i32 1, %387
  %389 = add i32 0, %388
  %390 = getelementptr %dimension_descriptor, %dimension_descriptor* %384, i32 0, i32 3
  %391 = load i32, i32* %390, align 4
  %392 = mul i32 1, %391
  %393 = getelementptr %array, %array* %a, i32 0, i32 0
  %394 = load double*, double** %393, align 8
  %395 = getelementptr inbounds double, double* %394, i32 %389
  %396 = load double, double* %395, align 8
  store double %396, double* %382, align 8
  %397 = getelementptr %array, %array* %b, i32 0, i32 2
  %398 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %397, i32 0, i32 0
  %399 = getelementptr %dimension_descriptor, %dimension_descriptor* %398, i32 0, i32 1
  %400 = load i32, i32* %399, align 4
  %401 = sub i32 4, %400
  %402 = mul i32 1, %401
  %403 = add i32 0, %402
  %404 = getelementptr %dimension_descriptor, %dimension_descriptor* %398, i32 0, i32 3
  %405 = load i32, i32* %404, align 4
  %406 = mul i32 1, %405
  %407 = getelementptr %array, %array* %b, i32 0, i32 0
  %408 = load double*, double** %407, align 8
  %409 = getelementptr inbounds double, double* %408, i32 %403
  %410 = load double, double* %409, align 8
  %411 = fcmp une double %410, 1.100000e+01
  br i1 %411, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  store i32 0, i32* %i, align 4
  br label %loop.head40

loop.head40:                                      ; preds = %loop.end44, %ifcont39
  %412 = load i32, i32* %i, align 4
  %413 = add i32 %412, 1
  %414 = icmp sle i32 %413, 2
  br i1 %414, label %loop.body41, label %loop.end45

loop.body41:                                      ; preds = %loop.head40
  %415 = load i32, i32* %i, align 4
  %416 = add i32 %415, 1
  store i32 %416, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loop.head42

loop.head42:                                      ; preds = %loop.body43, %loop.body41
  %417 = load i32, i32* %j, align 4
  %418 = add i32 %417, 1
  %419 = icmp sle i32 %418, 2
  br i1 %419, label %loop.body43, label %loop.end44

loop.body43:                                      ; preds = %loop.head42
  %420 = load i32, i32* %j, align 4
  %421 = add i32 %420, 1
  store i32 %421, i32* %j, align 4
  %422 = load i32, i32* %i, align 4
  %423 = load i32, i32* %j, align 4
  %424 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %425 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %424, i32 0, i32 0
  %426 = getelementptr %dimension_descriptor, %dimension_descriptor* %425, i32 0, i32 1
  %427 = load i32, i32* %426, align 4
  %428 = sub i32 %422, %427
  %429 = mul i32 1, %428
  %430 = add i32 0, %429
  %431 = getelementptr %dimension_descriptor, %dimension_descriptor* %425, i32 0, i32 3
  %432 = load i32, i32* %431, align 4
  %433 = mul i32 1, %432
  %434 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %424, i32 0, i32 1
  %435 = getelementptr %dimension_descriptor, %dimension_descriptor* %434, i32 0, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = sub i32 %423, %436
  %438 = mul i32 %433, %437
  %439 = add i32 %430, %438
  %440 = getelementptr %dimension_descriptor, %dimension_descriptor* %434, i32 0, i32 3
  %441 = load i32, i32* %440, align 4
  %442 = mul i32 %433, %441
  %443 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %444 = load double*, double** %443, align 8
  %445 = getelementptr inbounds double, double* %444, i32 %439
  %446 = load i32, i32* %i, align 4
  %447 = load i32, i32* %j, align 4
  %448 = add i32 %446, %447
  %449 = add i32 %448, 10
  %450 = sitofp i32 %449 to double
  store double %450, double* %445, align 8
  br label %loop.head42

loop.end44:                                       ; preds = %loop.head42
  br label %loop.head40

loop.end45:                                       ; preds = %loop.head40
  %451 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %452 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %451, i32 0, i32 0
  %453 = getelementptr %dimension_descriptor, %dimension_descriptor* %452, i32 0, i32 1
  %454 = load i32, i32* %453, align 4
  %455 = sub i32 1, %454
  %456 = mul i32 1, %455
  %457 = add i32 0, %456
  %458 = getelementptr %dimension_descriptor, %dimension_descriptor* %452, i32 0, i32 3
  %459 = load i32, i32* %458, align 4
  %460 = mul i32 1, %459
  %461 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %451, i32 0, i32 1
  %462 = getelementptr %dimension_descriptor, %dimension_descriptor* %461, i32 0, i32 1
  %463 = load i32, i32* %462, align 4
  %464 = sub i32 1, %463
  %465 = mul i32 %460, %464
  %466 = add i32 %457, %465
  %467 = getelementptr %dimension_descriptor, %dimension_descriptor* %461, i32 0, i32 3
  %468 = load i32, i32* %467, align 4
  %469 = mul i32 %460, %468
  %470 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %471 = load double*, double** %470, align 8
  %472 = getelementptr inbounds double, double* %471, i32 %466
  %473 = load double, double* %472, align 8
  %474 = fcmp une double %473, 1.200000e+01
  br i1 %474, label %then46, label %else47

then46:                                           ; preds = %loop.end45
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont48

else47:                                           ; preds = %loop.end45
  br label %ifcont48

ifcont48:                                         ; preds = %else47, %then46
  %475 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %476 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %475, i32 0, i32 0
  %477 = getelementptr %dimension_descriptor, %dimension_descriptor* %476, i32 0, i32 1
  %478 = load i32, i32* %477, align 4
  %479 = sub i32 1, %478
  %480 = mul i32 1, %479
  %481 = add i32 0, %480
  %482 = getelementptr %dimension_descriptor, %dimension_descriptor* %476, i32 0, i32 3
  %483 = load i32, i32* %482, align 4
  %484 = mul i32 1, %483
  %485 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %475, i32 0, i32 1
  %486 = getelementptr %dimension_descriptor, %dimension_descriptor* %485, i32 0, i32 1
  %487 = load i32, i32* %486, align 4
  %488 = sub i32 2, %487
  %489 = mul i32 %484, %488
  %490 = add i32 %481, %489
  %491 = getelementptr %dimension_descriptor, %dimension_descriptor* %485, i32 0, i32 3
  %492 = load i32, i32* %491, align 4
  %493 = mul i32 %484, %492
  %494 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %495 = load double*, double** %494, align 8
  %496 = getelementptr inbounds double, double* %495, i32 %490
  %497 = load double, double* %496, align 8
  %498 = fcmp une double %497, 1.300000e+01
  br i1 %498, label %then49, label %else50

then49:                                           ; preds = %ifcont48
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont51

else50:                                           ; preds = %ifcont48
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  %499 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %500 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %499, i32 0, i32 0
  %501 = getelementptr %dimension_descriptor, %dimension_descriptor* %500, i32 0, i32 1
  %502 = load i32, i32* %501, align 4
  %503 = sub i32 2, %502
  %504 = mul i32 1, %503
  %505 = add i32 0, %504
  %506 = getelementptr %dimension_descriptor, %dimension_descriptor* %500, i32 0, i32 3
  %507 = load i32, i32* %506, align 4
  %508 = mul i32 1, %507
  %509 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %499, i32 0, i32 1
  %510 = getelementptr %dimension_descriptor, %dimension_descriptor* %509, i32 0, i32 1
  %511 = load i32, i32* %510, align 4
  %512 = sub i32 1, %511
  %513 = mul i32 %508, %512
  %514 = add i32 %505, %513
  %515 = getelementptr %dimension_descriptor, %dimension_descriptor* %509, i32 0, i32 3
  %516 = load i32, i32* %515, align 4
  %517 = mul i32 %508, %516
  %518 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %519 = load double*, double** %518, align 8
  %520 = getelementptr inbounds double, double* %519, i32 %514
  %521 = load double, double* %520, align 8
  %522 = fcmp une double %521, 1.300000e+01
  br i1 %522, label %then52, label %else53

then52:                                           ; preds = %ifcont51
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont54

else53:                                           ; preds = %ifcont51
  br label %ifcont54

ifcont54:                                         ; preds = %else53, %then52
  %523 = getelementptr %array.0, %array.0* %c, i32 0, i32 2
  %524 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %523, i32 0, i32 0
  %525 = getelementptr %dimension_descriptor, %dimension_descriptor* %524, i32 0, i32 1
  %526 = load i32, i32* %525, align 4
  %527 = sub i32 2, %526
  %528 = mul i32 1, %527
  %529 = add i32 0, %528
  %530 = getelementptr %dimension_descriptor, %dimension_descriptor* %524, i32 0, i32 3
  %531 = load i32, i32* %530, align 4
  %532 = mul i32 1, %531
  %533 = getelementptr [2 x %dimension_descriptor], [2 x %dimension_descriptor]* %523, i32 0, i32 1
  %534 = getelementptr %dimension_descriptor, %dimension_descriptor* %533, i32 0, i32 1
  %535 = load i32, i32* %534, align 4
  %536 = sub i32 2, %535
  %537 = mul i32 %532, %536
  %538 = add i32 %529, %537
  %539 = getelementptr %dimension_descriptor, %dimension_descriptor* %533, i32 0, i32 3
  %540 = load i32, i32* %539, align 4
  %541 = mul i32 %532, %540
  %542 = getelementptr %array.0, %array.0* %c, i32 0, i32 0
  %543 = load double*, double** %542, align 8
  %544 = getelementptr inbounds double, double* %543, i32 %538
  %545 = load double, double* %544, align 8
  %546 = fcmp une double %545, 1.400000e+01
  br i1 %546, label %then55, label %else56

then55:                                           ; preds = %ifcont54
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont57

else56:                                           ; preds = %ifcont54
  br label %ifcont57

ifcont57:                                         ; preds = %else56, %then55
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
