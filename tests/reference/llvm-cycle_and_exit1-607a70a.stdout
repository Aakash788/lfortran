; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [3 x i8] c"l1\00", align 1
@3 = private unnamed_addr constant [3 x i8] c"l2\00", align 1
@4 = private unnamed_addr constant [17 x i8] c"%s%s%d%s%s%s%d%s\00", align 1
@5 = private unnamed_addr constant [2 x i8] c" \00", align 1
@6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@7 = private unnamed_addr constant [11 x i8] c"error l2 1\00", align 1
@8 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@11 = private unnamed_addr constant [11 x i8] c"error l2 2\00", align 1
@12 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@13 = private unnamed_addr constant [2 x i8] c" \00", align 1
@14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@15 = private unnamed_addr constant [3 x i8] c"l3\00", align 1
@16 = private unnamed_addr constant [3 x i8] c"l4\00", align 1
@17 = private unnamed_addr constant [17 x i8] c"%s%s%d%s%s%s%d%s\00", align 1
@18 = private unnamed_addr constant [2 x i8] c" \00", align 1
@19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@20 = private unnamed_addr constant [11 x i8] c"error l3 1\00", align 1
@21 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@22 = private unnamed_addr constant [2 x i8] c" \00", align 1
@23 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@24 = private unnamed_addr constant [11 x i8] c"error l3 2\00", align 1
@25 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@26 = private unnamed_addr constant [2 x i8] c" \00", align 1
@27 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@28 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@29 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@30 = private unnamed_addr constant [2 x i8] c" \00", align 1
@31 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@32 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@33 = private unnamed_addr constant [21 x i8] c"%s%s%d%s%d%s%d%s%d%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_set_argv(i32 %0, i8** %1)
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %l1.head

l1.head:                                          ; preds = %ifcont6, %.entry
  %2 = load i32, i32* %i, align 4
  %3 = add i32 %2, 1
  %4 = icmp sle i32 %3, 5
  br i1 %4, label %l1.body, label %l1.end

l1.body:                                          ; preds = %l1.head
  %5 = load i32, i32* %i, align 4
  %6 = add i32 %5, 1
  store i32 %6, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %l2.head

l2.head:                                          ; preds = %ifcont3, %l1.body
  %7 = load i32, i32* %j, align 4
  %8 = add i32 %7, 1
  %9 = icmp sle i32 %8, 4
  br i1 %9, label %l2.body, label %l2.end

l2.body:                                          ; preds = %l2.head
  %10 = load i32, i32* %j, align 4
  %11 = add i32 %10, 1
  store i32 %11, i32* %j, align 4
  %12 = load i32, i32* %j, align 4
  %13 = icmp sgt i32 %12, 2
  br i1 %13, label %then, label %else

then:                                             ; preds = %l2.body
  br label %l1.end

unreachable_after_exit:                           ; No predecessors!
  br label %ifcont

else:                                             ; preds = %l2.body
  br label %ifcont

ifcont:                                           ; preds = %else, %unreachable_after_exit
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %j, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i32 %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  %16 = load i32, i32* %j, align 4
  %17 = icmp sgt i32 %16, 2
  br i1 %17, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0))
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  br label %l2.head

l2.end:                                           ; preds = %l2.head
  %18 = load i32, i32* %j, align 4
  %19 = icmp sgt i32 %18, 2
  br i1 %19, label %then4, label %else5

then4:                                            ; preds = %l2.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0))
  br label %ifcont6

else5:                                            ; preds = %l2.end
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  br label %l1.head

l1.end:                                           ; preds = %then, %l1.head
  store i32 0, i32* %k, align 4
  br label %l3.head

l3.head:                                          ; preds = %ifcont16, %l1.end
  br i1 true, label %l3.body, label %l3.end

l3.body:                                          ; preds = %l3.head
  store i32 0, i32* %l, align 4
  br label %l4.head

l4.head:                                          ; preds = %ifcont13, %l3.body
  %20 = load i32, i32* %l, align 4
  %21 = add i32 %20, 1
  %22 = icmp sle i32 %21, 2
  br i1 %22, label %l4.body, label %l4.end

l4.body:                                          ; preds = %l4.head
  %23 = load i32, i32* %l, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %l, align 4
  %25 = load i32, i32* %k, align 4
  %26 = icmp sgt i32 %25, 3
  br i1 %26, label %then7, label %else9

then7:                                            ; preds = %l4.body
  br label %l3.end

unreachable_after_exit8:                          ; No predecessors!
  br label %ifcont10

else9:                                            ; preds = %l4.body
  br label %ifcont10

ifcont10:                                         ; preds = %else9, %unreachable_after_exit8
  %27 = load i32, i32* %k, align 4
  %28 = load i32, i32* %l, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i32 %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0), i32 %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @14, i32 0, i32 0))
  %29 = load i32, i32* %k, align 4
  %30 = icmp sgt i32 %29, 3
  br i1 %30, label %then11, label %else12

then11:                                           ; preds = %ifcont10
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0))
  br label %ifcont13

else12:                                           ; preds = %ifcont10
  br label %ifcont13

ifcont13:                                         ; preds = %else12, %then11
  br label %l4.head

l4.end:                                           ; preds = %l4.head
  %31 = load i32, i32* %k, align 4
  %32 = icmp sgt i32 %31, 3
  br i1 %32, label %then14, label %else15

then14:                                           ; preds = %l4.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @24, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @23, i32 0, i32 0))
  br label %ifcont16

else15:                                           ; preds = %l4.end
  br label %ifcont16

ifcont16:                                         ; preds = %else15, %then14
  %33 = load i32, i32* %k, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %k, align 4
  br label %l3.head

l3.end:                                           ; preds = %then7, %l3.head
  %35 = load i32, i32* %i, align 4
  %36 = icmp eq i32 %35, 1
  %37 = load i32, i32* %j, align 4
  %38 = icmp eq i32 %37, 3
  %39 = icmp eq i1 %36, false
  %40 = alloca i1, align 1
  br i1 %39, label %then17, label %else18

then17:                                           ; preds = %l3.end
  store i1 %36, i1* %40, align 1
  br label %ifcont19

else18:                                           ; preds = %l3.end
  store i1 %38, i1* %40, align 1
  br label %ifcont19

ifcont19:                                         ; preds = %else18, %then17
  %41 = load i1, i1* %40, align 1
  %42 = load i32, i32* %k, align 4
  %43 = icmp eq i32 %42, 4
  %44 = icmp eq i1 %41, false
  %45 = alloca i1, align 1
  br i1 %44, label %then20, label %else21

then20:                                           ; preds = %ifcont19
  store i1 %41, i1* %45, align 1
  br label %ifcont22

else21:                                           ; preds = %ifcont19
  store i1 %43, i1* %45, align 1
  br label %ifcont22

ifcont22:                                         ; preds = %else21, %then20
  %46 = load i1, i1* %45, align 1
  %47 = load i32, i32* %l, align 4
  %48 = icmp eq i32 %47, 1
  %49 = icmp eq i1 %46, false
  %50 = alloca i1, align 1
  br i1 %49, label %then23, label %else24

then23:                                           ; preds = %ifcont22
  store i1 %46, i1* %50, align 1
  br label %ifcont25

else24:                                           ; preds = %ifcont22
  store i1 %48, i1* %50, align 1
  br label %ifcont25

ifcont25:                                         ; preds = %else24, %then23
  %51 = load i1, i1* %50, align 1
  br i1 %51, label %then26, label %else27

then26:                                           ; preds = %ifcont25
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @27, i32 0, i32 0))
  br label %ifcont28

else27:                                           ; preds = %ifcont25
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %j, align 4
  %54 = load i32, i32* %k, align 4
  %55 = load i32, i32* %l, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i32 0, i32 0), i32 %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i32 0, i32 0), i32 %53, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i32 0, i32 0), i32 %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @30, i32 0, i32 0), i32 %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @31, i32 0, i32 0))
  br label %ifcont28

ifcont28:                                         ; preds = %else27, %then26
  ret i32 0
}

declare void @_lpython_set_argv(i32, i8**)

declare void @_lfortran_printf(i8*, ...)
