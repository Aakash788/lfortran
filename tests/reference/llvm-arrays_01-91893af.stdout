; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, [1 x %dimension_descriptor], i1 }
%dimension_descriptor = type { i32, i32, i32, i32 }

@0 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@1 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@2 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@3 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@5 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@6 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@8 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@9 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1
@11 = private unnamed_addr constant [12 x i8] c"ERROR STOP\0A\00", align 1

define i32 @main() {
.entry:
  %a = alloca %array, align 8
  %0 = getelementptr %array, %array* %a, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %a, i32 0, i32 2
  %2 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %1, i32 0, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 0
  %4 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %5 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 2
  %6 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 3
  store i32 1, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i32 3, i32* %5, align 4
  %7 = load i32, i32* %5, align 4
  %8 = load i32, i32* %4, align 4
  %9 = sub i32 %7, %8
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  %11 = alloca i32, align 4
  store i32 3, i32* %11, align 4
  %12 = getelementptr %array, %array* %a, i32 0, i32 0
  %13 = load i32, i32* %11, align 4
  %14 = alloca i32, i32 %13, align 4
  store i32* %14, i32** %12, align 8
  %b = alloca %array, align 8
  %15 = getelementptr %array, %array* %b, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr %array, %array* %b, i32 0, i32 2
  %17 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %16, i32 0, i32 0
  %18 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 0
  %19 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 1
  %20 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 2
  %21 = getelementptr %dimension_descriptor, %dimension_descriptor* %17, i32 0, i32 3
  store i32 1, i32* %18, align 4
  store i32 1, i32* %19, align 4
  store i32 4, i32* %20, align 4
  %22 = load i32, i32* %20, align 4
  %23 = load i32, i32* %19, align 4
  %24 = sub i32 %22, %23
  %25 = add i32 %24, 1
  store i32 %25, i32* %21, align 4
  %26 = alloca i32, align 4
  store i32 4, i32* %26, align 4
  %27 = getelementptr %array, %array* %b, i32 0, i32 0
  %28 = load i32, i32* %26, align 4
  %29 = alloca i32, i32 %28, align 4
  store i32* %29, i32** %27, align 8
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %30 = load i32, i32* %i, align 4
  %31 = add i32 %30, 1
  %32 = icmp sle i32 %31, 3
  br i1 %32, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %33 = load i32, i32* %i, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %i, align 4
  %35 = load i32, i32* %i, align 4
  %36 = getelementptr %array, %array* %a, i32 0, i32 2
  %37 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %36, i32 0, i32 0
  %38 = getelementptr %dimension_descriptor, %dimension_descriptor* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = sub i32 %35, %39
  %41 = mul i32 1, %40
  %42 = add i32 0, %41
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %37, i32 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = mul i32 1, %44
  %46 = getelementptr %array, %array* %a, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds i32, i32* %47, i32 %42
  %49 = load i32, i32* %i, align 4
  %50 = add i32 %49, 10
  store i32 %50, i32* %48, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %51 = getelementptr %array, %array* %a, i32 0, i32 2
  %52 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %51, i32 0, i32 0
  %53 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 1, %54
  %56 = mul i32 1, %55
  %57 = add i32 0, %56
  %58 = getelementptr %dimension_descriptor, %dimension_descriptor* %52, i32 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = mul i32 1, %59
  %61 = getelementptr %array, %array* %a, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = getelementptr inbounds i32, i32* %62, i32 %57
  %64 = load i32, i32* %63, align 4
  %65 = icmp ne i32 %64, 11
  br i1 %65, label %then, label %else

then:                                             ; preds = %loop.end
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont

else:                                             ; preds = %loop.end
  br label %ifcont

ifcont:                                           ; preds = %else, %then
  %66 = getelementptr %array, %array* %a, i32 0, i32 2
  %67 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %66, i32 0, i32 0
  %68 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 2, %69
  %71 = mul i32 1, %70
  %72 = add i32 0, %71
  %73 = getelementptr %dimension_descriptor, %dimension_descriptor* %67, i32 0, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = mul i32 1, %74
  %76 = getelementptr %array, %array* %a, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds i32, i32* %77, i32 %72
  %79 = load i32, i32* %78, align 4
  %80 = icmp ne i32 %79, 12
  br i1 %80, label %then1, label %else2

then1:                                            ; preds = %ifcont
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont3

else2:                                            ; preds = %ifcont
  br label %ifcont3

ifcont3:                                          ; preds = %else2, %then1
  %81 = getelementptr %array, %array* %a, i32 0, i32 2
  %82 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %81, i32 0, i32 0
  %83 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = sub i32 3, %84
  %86 = mul i32 1, %85
  %87 = add i32 0, %86
  %88 = getelementptr %dimension_descriptor, %dimension_descriptor* %82, i32 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = mul i32 1, %89
  %91 = getelementptr %array, %array* %a, i32 0, i32 0
  %92 = load i32*, i32** %91, align 8
  %93 = getelementptr inbounds i32, i32* %92, i32 %87
  %94 = load i32, i32* %93, align 4
  %95 = icmp ne i32 %94, 13
  br i1 %95, label %then4, label %else5

then4:                                            ; preds = %ifcont3
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont6

else5:                                            ; preds = %ifcont3
  br label %ifcont6

ifcont6:                                          ; preds = %else5, %then4
  store i32 10, i32* %i, align 4
  br label %loop.head7

loop.head7:                                       ; preds = %loop.body8, %ifcont6
  %96 = load i32, i32* %i, align 4
  %97 = add i32 %96, 1
  %98 = icmp sle i32 %97, 14
  br i1 %98, label %loop.body8, label %loop.end9

loop.body8:                                       ; preds = %loop.head7
  %99 = load i32, i32* %i, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %i, align 4
  %101 = load i32, i32* %i, align 4
  %102 = sub i32 %101, 10
  %103 = getelementptr %array, %array* %b, i32 0, i32 2
  %104 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %103, i32 0, i32 0
  %105 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sub i32 %102, %106
  %108 = mul i32 1, %107
  %109 = add i32 0, %108
  %110 = getelementptr %dimension_descriptor, %dimension_descriptor* %104, i32 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = mul i32 1, %111
  %113 = getelementptr %array, %array* %b, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = getelementptr inbounds i32, i32* %114, i32 %109
  %116 = load i32, i32* %i, align 4
  store i32 %116, i32* %115, align 4
  br label %loop.head7

loop.end9:                                        ; preds = %loop.head7
  %117 = getelementptr %array, %array* %b, i32 0, i32 2
  %118 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %117, i32 0, i32 0
  %119 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = sub i32 1, %120
  %122 = mul i32 1, %121
  %123 = add i32 0, %122
  %124 = getelementptr %dimension_descriptor, %dimension_descriptor* %118, i32 0, i32 3
  %125 = load i32, i32* %124, align 4
  %126 = mul i32 1, %125
  %127 = getelementptr %array, %array* %b, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = getelementptr inbounds i32, i32* %128, i32 %123
  %130 = load i32, i32* %129, align 4
  %131 = icmp ne i32 %130, 11
  br i1 %131, label %then10, label %else11

then10:                                           ; preds = %loop.end9
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont12

else11:                                           ; preds = %loop.end9
  br label %ifcont12

ifcont12:                                         ; preds = %else11, %then10
  %132 = getelementptr %array, %array* %b, i32 0, i32 2
  %133 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %132, i32 0, i32 0
  %134 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = sub i32 2, %135
  %137 = mul i32 1, %136
  %138 = add i32 0, %137
  %139 = getelementptr %dimension_descriptor, %dimension_descriptor* %133, i32 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = mul i32 1, %140
  %142 = getelementptr %array, %array* %b, i32 0, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = getelementptr inbounds i32, i32* %143, i32 %138
  %145 = load i32, i32* %144, align 4
  %146 = icmp ne i32 %145, 12
  br i1 %146, label %then13, label %else14

then13:                                           ; preds = %ifcont12
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont15

else14:                                           ; preds = %ifcont12
  br label %ifcont15

ifcont15:                                         ; preds = %else14, %then13
  %147 = getelementptr %array, %array* %b, i32 0, i32 2
  %148 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %147, i32 0, i32 0
  %149 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = sub i32 3, %150
  %152 = mul i32 1, %151
  %153 = add i32 0, %152
  %154 = getelementptr %dimension_descriptor, %dimension_descriptor* %148, i32 0, i32 3
  %155 = load i32, i32* %154, align 4
  %156 = mul i32 1, %155
  %157 = getelementptr %array, %array* %b, i32 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = getelementptr inbounds i32, i32* %158, i32 %153
  %160 = load i32, i32* %159, align 4
  %161 = icmp ne i32 %160, 13
  br i1 %161, label %then16, label %else17

then16:                                           ; preds = %ifcont15
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @5, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont18

else17:                                           ; preds = %ifcont15
  br label %ifcont18

ifcont18:                                         ; preds = %else17, %then16
  %162 = getelementptr %array, %array* %b, i32 0, i32 2
  %163 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %162, i32 0, i32 0
  %164 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 1
  %165 = load i32, i32* %164, align 4
  %166 = sub i32 4, %165
  %167 = mul i32 1, %166
  %168 = add i32 0, %167
  %169 = getelementptr %dimension_descriptor, %dimension_descriptor* %163, i32 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = mul i32 1, %170
  %172 = getelementptr %array, %array* %b, i32 0, i32 0
  %173 = load i32*, i32** %172, align 8
  %174 = getelementptr inbounds i32, i32* %173, i32 %168
  %175 = load i32, i32* %174, align 4
  %176 = icmp ne i32 %175, 14
  br i1 %176, label %then19, label %else20

then19:                                           ; preds = %ifcont18
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont21

else20:                                           ; preds = %ifcont18
  br label %ifcont21

ifcont21:                                         ; preds = %else20, %then19
  store i32 0, i32* %i, align 4
  br label %loop.head22

loop.head22:                                      ; preds = %loop.body23, %ifcont21
  %177 = load i32, i32* %i, align 4
  %178 = add i32 %177, 1
  %179 = icmp sle i32 %178, 3
  br i1 %179, label %loop.body23, label %loop.end24

loop.body23:                                      ; preds = %loop.head22
  %180 = load i32, i32* %i, align 4
  %181 = add i32 %180, 1
  store i32 %181, i32* %i, align 4
  %182 = load i32, i32* %i, align 4
  %183 = getelementptr %array, %array* %b, i32 0, i32 2
  %184 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %183, i32 0, i32 0
  %185 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = sub i32 %182, %186
  %188 = mul i32 1, %187
  %189 = add i32 0, %188
  %190 = getelementptr %dimension_descriptor, %dimension_descriptor* %184, i32 0, i32 3
  %191 = load i32, i32* %190, align 4
  %192 = mul i32 1, %191
  %193 = getelementptr %array, %array* %b, i32 0, i32 0
  %194 = load i32*, i32** %193, align 8
  %195 = getelementptr inbounds i32, i32* %194, i32 %189
  %196 = load i32, i32* %i, align 4
  %197 = getelementptr %array, %array* %a, i32 0, i32 2
  %198 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %197, i32 0, i32 0
  %199 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = sub i32 %196, %200
  %202 = mul i32 1, %201
  %203 = add i32 0, %202
  %204 = getelementptr %dimension_descriptor, %dimension_descriptor* %198, i32 0, i32 3
  %205 = load i32, i32* %204, align 4
  %206 = mul i32 1, %205
  %207 = getelementptr %array, %array* %a, i32 0, i32 0
  %208 = load i32*, i32** %207, align 8
  %209 = getelementptr inbounds i32, i32* %208, i32 %203
  %210 = load i32, i32* %209, align 4
  %211 = sub i32 %210, 10
  store i32 %211, i32* %195, align 4
  br label %loop.head22

loop.end24:                                       ; preds = %loop.head22
  %212 = getelementptr %array, %array* %b, i32 0, i32 2
  %213 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %212, i32 0, i32 0
  %214 = getelementptr %dimension_descriptor, %dimension_descriptor* %213, i32 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = sub i32 1, %215
  %217 = mul i32 1, %216
  %218 = add i32 0, %217
  %219 = getelementptr %dimension_descriptor, %dimension_descriptor* %213, i32 0, i32 3
  %220 = load i32, i32* %219, align 4
  %221 = mul i32 1, %220
  %222 = getelementptr %array, %array* %b, i32 0, i32 0
  %223 = load i32*, i32** %222, align 8
  %224 = getelementptr inbounds i32, i32* %223, i32 %218
  %225 = load i32, i32* %224, align 4
  %226 = icmp ne i32 %225, 1
  br i1 %226, label %then25, label %else26

then25:                                           ; preds = %loop.end24
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont27

else26:                                           ; preds = %loop.end24
  br label %ifcont27

ifcont27:                                         ; preds = %else26, %then25
  %227 = getelementptr %array, %array* %b, i32 0, i32 2
  %228 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %227, i32 0, i32 0
  %229 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = sub i32 2, %230
  %232 = mul i32 1, %231
  %233 = add i32 0, %232
  %234 = getelementptr %dimension_descriptor, %dimension_descriptor* %228, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  %236 = mul i32 1, %235
  %237 = getelementptr %array, %array* %b, i32 0, i32 0
  %238 = load i32*, i32** %237, align 8
  %239 = getelementptr inbounds i32, i32* %238, i32 %233
  %240 = load i32, i32* %239, align 4
  %241 = icmp ne i32 %240, 2
  br i1 %241, label %then28, label %else29

then28:                                           ; preds = %ifcont27
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @8, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont30

else29:                                           ; preds = %ifcont27
  br label %ifcont30

ifcont30:                                         ; preds = %else29, %then28
  %242 = getelementptr %array, %array* %b, i32 0, i32 2
  %243 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %242, i32 0, i32 0
  %244 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = sub i32 3, %245
  %247 = mul i32 1, %246
  %248 = add i32 0, %247
  %249 = getelementptr %dimension_descriptor, %dimension_descriptor* %243, i32 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = mul i32 1, %250
  %252 = getelementptr %array, %array* %b, i32 0, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = getelementptr inbounds i32, i32* %253, i32 %248
  %255 = load i32, i32* %254, align 4
  %256 = icmp ne i32 %255, 3
  br i1 %256, label %then31, label %else32

then31:                                           ; preds = %ifcont30
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @9, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont33

else32:                                           ; preds = %ifcont30
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  %257 = getelementptr %array, %array* %b, i32 0, i32 2
  %258 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %257, i32 0, i32 0
  %259 = getelementptr %dimension_descriptor, %dimension_descriptor* %258, i32 0, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = sub i32 4, %260
  %262 = mul i32 1, %261
  %263 = add i32 0, %262
  %264 = getelementptr %dimension_descriptor, %dimension_descriptor* %258, i32 0, i32 3
  %265 = load i32, i32* %264, align 4
  %266 = mul i32 1, %265
  %267 = getelementptr %array, %array* %b, i32 0, i32 0
  %268 = load i32*, i32** %267, align 8
  %269 = getelementptr inbounds i32, i32* %268, i32 %263
  %270 = getelementptr %array, %array* %b, i32 0, i32 2
  %271 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %270, i32 0, i32 0
  %272 = getelementptr %dimension_descriptor, %dimension_descriptor* %271, i32 0, i32 1
  %273 = load i32, i32* %272, align 4
  %274 = sub i32 1, %273
  %275 = mul i32 1, %274
  %276 = add i32 0, %275
  %277 = getelementptr %dimension_descriptor, %dimension_descriptor* %271, i32 0, i32 3
  %278 = load i32, i32* %277, align 4
  %279 = mul i32 1, %278
  %280 = getelementptr %array, %array* %b, i32 0, i32 0
  %281 = load i32*, i32** %280, align 8
  %282 = getelementptr inbounds i32, i32* %281, i32 %276
  %283 = load i32, i32* %282, align 4
  %284 = getelementptr %array, %array* %b, i32 0, i32 2
  %285 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %284, i32 0, i32 0
  %286 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = sub i32 2, %287
  %289 = mul i32 1, %288
  %290 = add i32 0, %289
  %291 = getelementptr %dimension_descriptor, %dimension_descriptor* %285, i32 0, i32 3
  %292 = load i32, i32* %291, align 4
  %293 = mul i32 1, %292
  %294 = getelementptr %array, %array* %b, i32 0, i32 0
  %295 = load i32*, i32** %294, align 8
  %296 = getelementptr inbounds i32, i32* %295, i32 %290
  %297 = load i32, i32* %296, align 4
  %298 = add i32 %283, %297
  %299 = getelementptr %array, %array* %b, i32 0, i32 2
  %300 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %299, i32 0, i32 0
  %301 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = sub i32 3, %302
  %304 = mul i32 1, %303
  %305 = add i32 0, %304
  %306 = getelementptr %dimension_descriptor, %dimension_descriptor* %300, i32 0, i32 3
  %307 = load i32, i32* %306, align 4
  %308 = mul i32 1, %307
  %309 = getelementptr %array, %array* %b, i32 0, i32 0
  %310 = load i32*, i32** %309, align 8
  %311 = getelementptr inbounds i32, i32* %310, i32 %305
  %312 = load i32, i32* %311, align 4
  %313 = add i32 %298, %312
  %314 = getelementptr %array, %array* %a, i32 0, i32 2
  %315 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %314, i32 0, i32 0
  %316 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = sub i32 1, %317
  %319 = mul i32 1, %318
  %320 = add i32 0, %319
  %321 = getelementptr %dimension_descriptor, %dimension_descriptor* %315, i32 0, i32 3
  %322 = load i32, i32* %321, align 4
  %323 = mul i32 1, %322
  %324 = getelementptr %array, %array* %a, i32 0, i32 0
  %325 = load i32*, i32** %324, align 8
  %326 = getelementptr inbounds i32, i32* %325, i32 %320
  %327 = load i32, i32* %326, align 4
  %328 = add i32 %313, %327
  store i32 %328, i32* %269, align 4
  %329 = getelementptr %array, %array* %b, i32 0, i32 2
  %330 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %329, i32 0, i32 0
  %331 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = sub i32 4, %332
  %334 = mul i32 1, %333
  %335 = add i32 0, %334
  %336 = getelementptr %dimension_descriptor, %dimension_descriptor* %330, i32 0, i32 3
  %337 = load i32, i32* %336, align 4
  %338 = mul i32 1, %337
  %339 = getelementptr %array, %array* %b, i32 0, i32 0
  %340 = load i32*, i32** %339, align 8
  %341 = getelementptr inbounds i32, i32* %340, i32 %335
  %342 = load i32, i32* %341, align 4
  %343 = icmp ne i32 %342, 17
  br i1 %343, label %then34, label %else35

then34:                                           ; preds = %ifcont33
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont36

else35:                                           ; preds = %ifcont33
  br label %ifcont36

ifcont36:                                         ; preds = %else35, %then34
  %344 = getelementptr %array, %array* %b, i32 0, i32 2
  %345 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %344, i32 0, i32 0
  %346 = getelementptr %dimension_descriptor, %dimension_descriptor* %345, i32 0, i32 1
  %347 = load i32, i32* %346, align 4
  %348 = sub i32 4, %347
  %349 = mul i32 1, %348
  %350 = add i32 0, %349
  %351 = getelementptr %dimension_descriptor, %dimension_descriptor* %345, i32 0, i32 3
  %352 = load i32, i32* %351, align 4
  %353 = mul i32 1, %352
  %354 = getelementptr %array, %array* %b, i32 0, i32 0
  %355 = load i32*, i32** %354, align 8
  %356 = getelementptr inbounds i32, i32* %355, i32 %350
  %357 = getelementptr %array, %array* %a, i32 0, i32 2
  %358 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %357, i32 0, i32 0
  %359 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 1
  %360 = load i32, i32* %359, align 4
  %361 = sub i32 1, %360
  %362 = mul i32 1, %361
  %363 = add i32 0, %362
  %364 = getelementptr %dimension_descriptor, %dimension_descriptor* %358, i32 0, i32 3
  %365 = load i32, i32* %364, align 4
  %366 = mul i32 1, %365
  %367 = getelementptr %array, %array* %a, i32 0, i32 0
  %368 = load i32*, i32** %367, align 8
  %369 = getelementptr inbounds i32, i32* %368, i32 %363
  %370 = load i32, i32* %369, align 4
  store i32 %370, i32* %356, align 4
  %371 = getelementptr %array, %array* %b, i32 0, i32 2
  %372 = getelementptr [1 x %dimension_descriptor], [1 x %dimension_descriptor]* %371, i32 0, i32 0
  %373 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = sub i32 4, %374
  %376 = mul i32 1, %375
  %377 = add i32 0, %376
  %378 = getelementptr %dimension_descriptor, %dimension_descriptor* %372, i32 0, i32 3
  %379 = load i32, i32* %378, align 4
  %380 = mul i32 1, %379
  %381 = getelementptr %array, %array* %b, i32 0, i32 0
  %382 = load i32*, i32** %381, align 8
  %383 = getelementptr inbounds i32, i32* %382, i32 %377
  %384 = load i32, i32* %383, align 4
  %385 = icmp ne i32 %384, 11
  br i1 %385, label %then37, label %else38

then37:                                           ; preds = %ifcont36
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont39

else38:                                           ; preds = %ifcont36
  br label %ifcont39

ifcont39:                                         ; preds = %else38, %then37
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)

declare void @exit(i32)
